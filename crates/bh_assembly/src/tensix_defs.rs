/* automatically generated by rust-bindgen 0.69.4 */

#[repr(C)]
#[derive(Copy, Clone, Debug, Default, Eq, Hash, Ord, PartialEq, PartialOrd)]
pub struct __BindgenBitfieldUnit<Storage> {
    storage: Storage,
}
impl<Storage> __BindgenBitfieldUnit<Storage> {
    #[inline]
    pub const fn new(storage: Storage) -> Self {
        Self { storage }
    }
}
impl<Storage> __BindgenBitfieldUnit<Storage>
where
    Storage: AsRef<[u8]> + AsMut<[u8]>,
{
    #[inline]
    pub fn get_bit(&self, index: usize) -> bool {
        debug_assert!(index / 8 < self.storage.as_ref().len());
        let byte_index = index / 8;
        let byte = self.storage.as_ref()[byte_index];
        let bit_index = if cfg!(target_endian = "big") {
            7 - (index % 8)
        } else {
            index % 8
        };
        let mask = 1 << bit_index;
        byte & mask == mask
    }
    #[inline]
    pub fn set_bit(&mut self, index: usize, val: bool) {
        debug_assert!(index / 8 < self.storage.as_ref().len());
        let byte_index = index / 8;
        let byte = &mut self.storage.as_mut()[byte_index];
        let bit_index = if cfg!(target_endian = "big") {
            7 - (index % 8)
        } else {
            index % 8
        };
        let mask = 1 << bit_index;
        if val {
            *byte |= mask;
        } else {
            *byte &= !mask;
        }
    }
    #[inline]
    pub fn get(&self, bit_offset: usize, bit_width: u8) -> u64 {
        debug_assert!(bit_width <= 64);
        debug_assert!(bit_offset / 8 < self.storage.as_ref().len());
        debug_assert!((bit_offset + (bit_width as usize)) / 8 <= self.storage.as_ref().len());
        let mut val = 0;
        for i in 0..(bit_width as usize) {
            if self.get_bit(i + bit_offset) {
                let index = if cfg!(target_endian = "big") {
                    bit_width as usize - 1 - i
                } else {
                    i
                };
                val |= 1 << index;
            }
        }
        val
    }
    #[inline]
    pub fn set(&mut self, bit_offset: usize, bit_width: u8, val: u64) {
        debug_assert!(bit_width <= 64);
        debug_assert!(bit_offset / 8 < self.storage.as_ref().len());
        debug_assert!((bit_offset + (bit_width as usize)) / 8 <= self.storage.as_ref().len());
        for i in 0..(bit_width as usize) {
            let mask = 1 << i;
            let val_bit_is_set = val & mask == mask;
            let index = if cfg!(target_endian = "big") {
                bit_width as usize - 1 - i
            } else {
                i
            };
            self.set_bit(index + bit_offset, val_bit_is_set);
        }
    }
}
pub const _STDINT_H: u32 = 1;
pub const _FEATURES_H: u32 = 1;
pub const _DEFAULT_SOURCE: u32 = 1;
pub const __GLIBC_USE_ISOC2X: u32 = 0;
pub const __USE_ISOC11: u32 = 1;
pub const __USE_ISOC99: u32 = 1;
pub const __USE_ISOC95: u32 = 1;
pub const __USE_POSIX_IMPLICITLY: u32 = 1;
pub const _POSIX_SOURCE: u32 = 1;
pub const _POSIX_C_SOURCE: u32 = 200809;
pub const __USE_POSIX: u32 = 1;
pub const __USE_POSIX2: u32 = 1;
pub const __USE_POSIX199309: u32 = 1;
pub const __USE_POSIX199506: u32 = 1;
pub const __USE_XOPEN2K: u32 = 1;
pub const __USE_XOPEN2K8: u32 = 1;
pub const _ATFILE_SOURCE: u32 = 1;
pub const __USE_MISC: u32 = 1;
pub const __USE_ATFILE: u32 = 1;
pub const __USE_FORTIFY_LEVEL: u32 = 0;
pub const __GLIBC_USE_DEPRECATED_GETS: u32 = 0;
pub const __GLIBC_USE_DEPRECATED_SCANF: u32 = 0;
pub const _STDC_PREDEF_H: u32 = 1;
pub const __STDC_IEC_559__: u32 = 1;
pub const __STDC_IEC_559_COMPLEX__: u32 = 1;
pub const __STDC_ISO_10646__: u32 = 201706;
pub const __GNU_LIBRARY__: u32 = 6;
pub const __GLIBC__: u32 = 2;
pub const __GLIBC_MINOR__: u32 = 31;
pub const _SYS_CDEFS_H: u32 = 1;
pub const __glibc_c99_flexarr_available: u32 = 1;
pub const __WORDSIZE: u32 = 64;
pub const __WORDSIZE_TIME64_COMPAT32: u32 = 1;
pub const __SYSCALL_WORDSIZE: u32 = 64;
pub const __LONG_DOUBLE_USES_FLOAT128: u32 = 0;
pub const __HAVE_GENERIC_SELECTION: u32 = 1;
pub const __GLIBC_USE_LIB_EXT2: u32 = 0;
pub const __GLIBC_USE_IEC_60559_BFP_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_BFP_EXT_C2X: u32 = 0;
pub const __GLIBC_USE_IEC_60559_FUNCS_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X: u32 = 0;
pub const __GLIBC_USE_IEC_60559_TYPES_EXT: u32 = 0;
pub const _BITS_TYPES_H: u32 = 1;
pub const __TIMESIZE: u32 = 64;
pub const _BITS_TYPESIZES_H: u32 = 1;
pub const __OFF_T_MATCHES_OFF64_T: u32 = 1;
pub const __INO_T_MATCHES_INO64_T: u32 = 1;
pub const __RLIM_T_MATCHES_RLIM64_T: u32 = 1;
pub const __STATFS_MATCHES_STATFS64: u32 = 1;
pub const __FD_SETSIZE: u32 = 1024;
pub const _BITS_TIME64_H: u32 = 1;
pub const _BITS_WCHAR_H: u32 = 1;
pub const _BITS_STDINT_INTN_H: u32 = 1;
pub const _BITS_STDINT_UINTN_H: u32 = 1;
pub const INT8_MIN: i32 = -128;
pub const INT16_MIN: i32 = -32768;
pub const INT32_MIN: i32 = -2147483648;
pub const INT8_MAX: u32 = 127;
pub const INT16_MAX: u32 = 32767;
pub const INT32_MAX: u32 = 2147483647;
pub const UINT8_MAX: u32 = 255;
pub const UINT16_MAX: u32 = 65535;
pub const UINT32_MAX: u32 = 4294967295;
pub const INT_LEAST8_MIN: i32 = -128;
pub const INT_LEAST16_MIN: i32 = -32768;
pub const INT_LEAST32_MIN: i32 = -2147483648;
pub const INT_LEAST8_MAX: u32 = 127;
pub const INT_LEAST16_MAX: u32 = 32767;
pub const INT_LEAST32_MAX: u32 = 2147483647;
pub const UINT_LEAST8_MAX: u32 = 255;
pub const UINT_LEAST16_MAX: u32 = 65535;
pub const UINT_LEAST32_MAX: u32 = 4294967295;
pub const INT_FAST8_MIN: i32 = -128;
pub const INT_FAST16_MIN: i64 = -9223372036854775808;
pub const INT_FAST32_MIN: i64 = -9223372036854775808;
pub const INT_FAST8_MAX: u32 = 127;
pub const INT_FAST16_MAX: u64 = 9223372036854775807;
pub const INT_FAST32_MAX: u64 = 9223372036854775807;
pub const UINT_FAST8_MAX: u32 = 255;
pub const UINT_FAST16_MAX: i32 = -1;
pub const UINT_FAST32_MAX: i32 = -1;
pub const INTPTR_MIN: i64 = -9223372036854775808;
pub const INTPTR_MAX: u64 = 9223372036854775807;
pub const UINTPTR_MAX: i32 = -1;
pub const PTRDIFF_MIN: i64 = -9223372036854775808;
pub const PTRDIFF_MAX: u64 = 9223372036854775807;
pub const SIG_ATOMIC_MIN: i32 = -2147483648;
pub const SIG_ATOMIC_MAX: u32 = 2147483647;
pub const SIZE_MAX: i32 = -1;
pub const WINT_MIN: u32 = 0;
pub const WINT_MAX: u32 = 4294967295;
pub const CFG_STATE_SIZE: u32 = 56;
pub const THD_STATE_SIZE: u32 = 68;
pub const THREAD_CFGREG_BASE_ADDR32: u32 = 0;
pub const CFG_STATE_ID_StateID_ADDR32: u32 = 0;
pub const CFG_STATE_ID_StateID_SHAMT: u32 = 0;
pub const CFG_STATE_ID_StateID_MASK: u32 = 1;
pub const DEST_TARGET_REG_CFG_MATH_Offset_ADDR32: u32 = 1;
pub const DEST_TARGET_REG_CFG_MATH_Offset_SHAMT: u32 = 0;
pub const DEST_TARGET_REG_CFG_MATH_Offset_MASK: u32 = 4095;
pub const DISABLE_IMPLIED_SRCA_FMT_Base_ADDR32: u32 = 2;
pub const DISABLE_IMPLIED_SRCA_FMT_Base_SHAMT: u32 = 0;
pub const DISABLE_IMPLIED_SRCA_FMT_Base_MASK: u32 = 1;
pub const DISABLE_IMPLIED_SRCB_FMT_Base_ADDR32: u32 = 3;
pub const DISABLE_IMPLIED_SRCB_FMT_Base_SHAMT: u32 = 0;
pub const DISABLE_IMPLIED_SRCB_FMT_Base_MASK: u32 = 1;
pub const SFPU_DEST_FMT_Enable_ADDR32: u32 = 4;
pub const SFPU_DEST_FMT_Enable_SHAMT: u32 = 0;
pub const SFPU_DEST_FMT_Enable_MASK: u32 = 1;
pub const SFPU_DEST_FMT_Base_ADDR32: u32 = 4;
pub const SFPU_DEST_FMT_Base_SHAMT: u32 = 1;
pub const SFPU_DEST_FMT_Base_MASK: u32 = 30;
pub const SRCA_SET_Base_ADDR32: u32 = 5;
pub const SRCA_SET_Base_SHAMT: u32 = 0;
pub const SRCA_SET_Base_MASK: u32 = 3;
pub const SRCA_SET_SetOvrdWithAddr_ADDR32: u32 = 5;
pub const SRCA_SET_SetOvrdWithAddr_SHAMT: u32 = 2;
pub const SRCA_SET_SetOvrdWithAddr_MASK: u32 = 4;
pub const SRCB_SET_Base_ADDR32: u32 = 6;
pub const SRCB_SET_Base_SHAMT: u32 = 0;
pub const SRCB_SET_Base_MASK: u32 = 3;
pub const CLR_DVALID_SrcA_Disable_ADDR32: u32 = 7;
pub const CLR_DVALID_SrcA_Disable_SHAMT: u32 = 0;
pub const CLR_DVALID_SrcA_Disable_MASK: u32 = 1;
pub const CLR_DVALID_SrcB_Disable_ADDR32: u32 = 7;
pub const CLR_DVALID_SrcB_Disable_SHAMT: u32 = 1;
pub const CLR_DVALID_SrcB_Disable_MASK: u32 = 2;
pub const SCBD_BANK_MASK_32b_Enable_ADDR32: u32 = 8;
pub const SCBD_BANK_MASK_32b_Enable_SHAMT: u32 = 0;
pub const SCBD_BANK_MASK_32b_Enable_MASK: u32 = 1;
pub const PACK_SCBD_BANK_MASK_32b_Enable_ADDR32: u32 = 9;
pub const PACK_SCBD_BANK_MASK_32b_Enable_SHAMT: u32 = 0;
pub const PACK_SCBD_BANK_MASK_32b_Enable_MASK: u32 = 1;
pub const UNPACK_SCBD_BANK_MASK_32b_Enable_ADDR32: u32 = 10;
pub const UNPACK_SCBD_BANK_MASK_32b_Enable_SHAMT: u32 = 0;
pub const UNPACK_SCBD_BANK_MASK_32b_Enable_MASK: u32 = 1;
pub const FIDELITY_BASE_Phase_ADDR32: u32 = 11;
pub const FIDELITY_BASE_Phase_SHAMT: u32 = 0;
pub const FIDELITY_BASE_Phase_MASK: u32 = 3;
pub const ADDR_MOD_AB_SEC0_SrcAIncr_ADDR32: u32 = 12;
pub const ADDR_MOD_AB_SEC0_SrcAIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_AB_SEC0_SrcAIncr_MASK: u32 = 63;
pub const ADDR_MOD_AB_SEC0_SrcACR_ADDR32: u32 = 12;
pub const ADDR_MOD_AB_SEC0_SrcACR_SHAMT: u32 = 6;
pub const ADDR_MOD_AB_SEC0_SrcACR_MASK: u32 = 64;
pub const ADDR_MOD_AB_SEC0_SrcAClear_ADDR32: u32 = 12;
pub const ADDR_MOD_AB_SEC0_SrcAClear_SHAMT: u32 = 7;
pub const ADDR_MOD_AB_SEC0_SrcAClear_MASK: u32 = 128;
pub const ADDR_MOD_AB_SEC0_SrcBIncr_ADDR32: u32 = 12;
pub const ADDR_MOD_AB_SEC0_SrcBIncr_SHAMT: u32 = 8;
pub const ADDR_MOD_AB_SEC0_SrcBIncr_MASK: u32 = 16128;
pub const ADDR_MOD_AB_SEC0_SrcBCR_ADDR32: u32 = 12;
pub const ADDR_MOD_AB_SEC0_SrcBCR_SHAMT: u32 = 14;
pub const ADDR_MOD_AB_SEC0_SrcBCR_MASK: u32 = 16384;
pub const ADDR_MOD_AB_SEC0_SrcBClear_ADDR32: u32 = 12;
pub const ADDR_MOD_AB_SEC0_SrcBClear_SHAMT: u32 = 15;
pub const ADDR_MOD_AB_SEC0_SrcBClear_MASK: u32 = 32768;
pub const ADDR_MOD_AB_SEC1_SrcAIncr_ADDR32: u32 = 13;
pub const ADDR_MOD_AB_SEC1_SrcAIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_AB_SEC1_SrcAIncr_MASK: u32 = 63;
pub const ADDR_MOD_AB_SEC1_SrcACR_ADDR32: u32 = 13;
pub const ADDR_MOD_AB_SEC1_SrcACR_SHAMT: u32 = 6;
pub const ADDR_MOD_AB_SEC1_SrcACR_MASK: u32 = 64;
pub const ADDR_MOD_AB_SEC1_SrcAClear_ADDR32: u32 = 13;
pub const ADDR_MOD_AB_SEC1_SrcAClear_SHAMT: u32 = 7;
pub const ADDR_MOD_AB_SEC1_SrcAClear_MASK: u32 = 128;
pub const ADDR_MOD_AB_SEC1_SrcBIncr_ADDR32: u32 = 13;
pub const ADDR_MOD_AB_SEC1_SrcBIncr_SHAMT: u32 = 8;
pub const ADDR_MOD_AB_SEC1_SrcBIncr_MASK: u32 = 16128;
pub const ADDR_MOD_AB_SEC1_SrcBCR_ADDR32: u32 = 13;
pub const ADDR_MOD_AB_SEC1_SrcBCR_SHAMT: u32 = 14;
pub const ADDR_MOD_AB_SEC1_SrcBCR_MASK: u32 = 16384;
pub const ADDR_MOD_AB_SEC1_SrcBClear_ADDR32: u32 = 13;
pub const ADDR_MOD_AB_SEC1_SrcBClear_SHAMT: u32 = 15;
pub const ADDR_MOD_AB_SEC1_SrcBClear_MASK: u32 = 32768;
pub const ADDR_MOD_AB_SEC2_SrcAIncr_ADDR32: u32 = 14;
pub const ADDR_MOD_AB_SEC2_SrcAIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_AB_SEC2_SrcAIncr_MASK: u32 = 63;
pub const ADDR_MOD_AB_SEC2_SrcACR_ADDR32: u32 = 14;
pub const ADDR_MOD_AB_SEC2_SrcACR_SHAMT: u32 = 6;
pub const ADDR_MOD_AB_SEC2_SrcACR_MASK: u32 = 64;
pub const ADDR_MOD_AB_SEC2_SrcAClear_ADDR32: u32 = 14;
pub const ADDR_MOD_AB_SEC2_SrcAClear_SHAMT: u32 = 7;
pub const ADDR_MOD_AB_SEC2_SrcAClear_MASK: u32 = 128;
pub const ADDR_MOD_AB_SEC2_SrcBIncr_ADDR32: u32 = 14;
pub const ADDR_MOD_AB_SEC2_SrcBIncr_SHAMT: u32 = 8;
pub const ADDR_MOD_AB_SEC2_SrcBIncr_MASK: u32 = 16128;
pub const ADDR_MOD_AB_SEC2_SrcBCR_ADDR32: u32 = 14;
pub const ADDR_MOD_AB_SEC2_SrcBCR_SHAMT: u32 = 14;
pub const ADDR_MOD_AB_SEC2_SrcBCR_MASK: u32 = 16384;
pub const ADDR_MOD_AB_SEC2_SrcBClear_ADDR32: u32 = 14;
pub const ADDR_MOD_AB_SEC2_SrcBClear_SHAMT: u32 = 15;
pub const ADDR_MOD_AB_SEC2_SrcBClear_MASK: u32 = 32768;
pub const ADDR_MOD_AB_SEC3_SrcAIncr_ADDR32: u32 = 15;
pub const ADDR_MOD_AB_SEC3_SrcAIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_AB_SEC3_SrcAIncr_MASK: u32 = 63;
pub const ADDR_MOD_AB_SEC3_SrcACR_ADDR32: u32 = 15;
pub const ADDR_MOD_AB_SEC3_SrcACR_SHAMT: u32 = 6;
pub const ADDR_MOD_AB_SEC3_SrcACR_MASK: u32 = 64;
pub const ADDR_MOD_AB_SEC3_SrcAClear_ADDR32: u32 = 15;
pub const ADDR_MOD_AB_SEC3_SrcAClear_SHAMT: u32 = 7;
pub const ADDR_MOD_AB_SEC3_SrcAClear_MASK: u32 = 128;
pub const ADDR_MOD_AB_SEC3_SrcBIncr_ADDR32: u32 = 15;
pub const ADDR_MOD_AB_SEC3_SrcBIncr_SHAMT: u32 = 8;
pub const ADDR_MOD_AB_SEC3_SrcBIncr_MASK: u32 = 16128;
pub const ADDR_MOD_AB_SEC3_SrcBCR_ADDR32: u32 = 15;
pub const ADDR_MOD_AB_SEC3_SrcBCR_SHAMT: u32 = 14;
pub const ADDR_MOD_AB_SEC3_SrcBCR_MASK: u32 = 16384;
pub const ADDR_MOD_AB_SEC3_SrcBClear_ADDR32: u32 = 15;
pub const ADDR_MOD_AB_SEC3_SrcBClear_SHAMT: u32 = 15;
pub const ADDR_MOD_AB_SEC3_SrcBClear_MASK: u32 = 32768;
pub const ADDR_MOD_AB_SEC4_SrcAIncr_ADDR32: u32 = 16;
pub const ADDR_MOD_AB_SEC4_SrcAIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_AB_SEC4_SrcAIncr_MASK: u32 = 63;
pub const ADDR_MOD_AB_SEC4_SrcACR_ADDR32: u32 = 16;
pub const ADDR_MOD_AB_SEC4_SrcACR_SHAMT: u32 = 6;
pub const ADDR_MOD_AB_SEC4_SrcACR_MASK: u32 = 64;
pub const ADDR_MOD_AB_SEC4_SrcAClear_ADDR32: u32 = 16;
pub const ADDR_MOD_AB_SEC4_SrcAClear_SHAMT: u32 = 7;
pub const ADDR_MOD_AB_SEC4_SrcAClear_MASK: u32 = 128;
pub const ADDR_MOD_AB_SEC4_SrcBIncr_ADDR32: u32 = 16;
pub const ADDR_MOD_AB_SEC4_SrcBIncr_SHAMT: u32 = 8;
pub const ADDR_MOD_AB_SEC4_SrcBIncr_MASK: u32 = 16128;
pub const ADDR_MOD_AB_SEC4_SrcBCR_ADDR32: u32 = 16;
pub const ADDR_MOD_AB_SEC4_SrcBCR_SHAMT: u32 = 14;
pub const ADDR_MOD_AB_SEC4_SrcBCR_MASK: u32 = 16384;
pub const ADDR_MOD_AB_SEC4_SrcBClear_ADDR32: u32 = 16;
pub const ADDR_MOD_AB_SEC4_SrcBClear_SHAMT: u32 = 15;
pub const ADDR_MOD_AB_SEC4_SrcBClear_MASK: u32 = 32768;
pub const ADDR_MOD_AB_SEC5_SrcAIncr_ADDR32: u32 = 17;
pub const ADDR_MOD_AB_SEC5_SrcAIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_AB_SEC5_SrcAIncr_MASK: u32 = 63;
pub const ADDR_MOD_AB_SEC5_SrcACR_ADDR32: u32 = 17;
pub const ADDR_MOD_AB_SEC5_SrcACR_SHAMT: u32 = 6;
pub const ADDR_MOD_AB_SEC5_SrcACR_MASK: u32 = 64;
pub const ADDR_MOD_AB_SEC5_SrcAClear_ADDR32: u32 = 17;
pub const ADDR_MOD_AB_SEC5_SrcAClear_SHAMT: u32 = 7;
pub const ADDR_MOD_AB_SEC5_SrcAClear_MASK: u32 = 128;
pub const ADDR_MOD_AB_SEC5_SrcBIncr_ADDR32: u32 = 17;
pub const ADDR_MOD_AB_SEC5_SrcBIncr_SHAMT: u32 = 8;
pub const ADDR_MOD_AB_SEC5_SrcBIncr_MASK: u32 = 16128;
pub const ADDR_MOD_AB_SEC5_SrcBCR_ADDR32: u32 = 17;
pub const ADDR_MOD_AB_SEC5_SrcBCR_SHAMT: u32 = 14;
pub const ADDR_MOD_AB_SEC5_SrcBCR_MASK: u32 = 16384;
pub const ADDR_MOD_AB_SEC5_SrcBClear_ADDR32: u32 = 17;
pub const ADDR_MOD_AB_SEC5_SrcBClear_SHAMT: u32 = 15;
pub const ADDR_MOD_AB_SEC5_SrcBClear_MASK: u32 = 32768;
pub const ADDR_MOD_AB_SEC6_SrcAIncr_ADDR32: u32 = 18;
pub const ADDR_MOD_AB_SEC6_SrcAIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_AB_SEC6_SrcAIncr_MASK: u32 = 63;
pub const ADDR_MOD_AB_SEC6_SrcACR_ADDR32: u32 = 18;
pub const ADDR_MOD_AB_SEC6_SrcACR_SHAMT: u32 = 6;
pub const ADDR_MOD_AB_SEC6_SrcACR_MASK: u32 = 64;
pub const ADDR_MOD_AB_SEC6_SrcAClear_ADDR32: u32 = 18;
pub const ADDR_MOD_AB_SEC6_SrcAClear_SHAMT: u32 = 7;
pub const ADDR_MOD_AB_SEC6_SrcAClear_MASK: u32 = 128;
pub const ADDR_MOD_AB_SEC6_SrcBIncr_ADDR32: u32 = 18;
pub const ADDR_MOD_AB_SEC6_SrcBIncr_SHAMT: u32 = 8;
pub const ADDR_MOD_AB_SEC6_SrcBIncr_MASK: u32 = 16128;
pub const ADDR_MOD_AB_SEC6_SrcBCR_ADDR32: u32 = 18;
pub const ADDR_MOD_AB_SEC6_SrcBCR_SHAMT: u32 = 14;
pub const ADDR_MOD_AB_SEC6_SrcBCR_MASK: u32 = 16384;
pub const ADDR_MOD_AB_SEC6_SrcBClear_ADDR32: u32 = 18;
pub const ADDR_MOD_AB_SEC6_SrcBClear_SHAMT: u32 = 15;
pub const ADDR_MOD_AB_SEC6_SrcBClear_MASK: u32 = 32768;
pub const ADDR_MOD_AB_SEC7_SrcAIncr_ADDR32: u32 = 19;
pub const ADDR_MOD_AB_SEC7_SrcAIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_AB_SEC7_SrcAIncr_MASK: u32 = 63;
pub const ADDR_MOD_AB_SEC7_SrcACR_ADDR32: u32 = 19;
pub const ADDR_MOD_AB_SEC7_SrcACR_SHAMT: u32 = 6;
pub const ADDR_MOD_AB_SEC7_SrcACR_MASK: u32 = 64;
pub const ADDR_MOD_AB_SEC7_SrcAClear_ADDR32: u32 = 19;
pub const ADDR_MOD_AB_SEC7_SrcAClear_SHAMT: u32 = 7;
pub const ADDR_MOD_AB_SEC7_SrcAClear_MASK: u32 = 128;
pub const ADDR_MOD_AB_SEC7_SrcBIncr_ADDR32: u32 = 19;
pub const ADDR_MOD_AB_SEC7_SrcBIncr_SHAMT: u32 = 8;
pub const ADDR_MOD_AB_SEC7_SrcBIncr_MASK: u32 = 16128;
pub const ADDR_MOD_AB_SEC7_SrcBCR_ADDR32: u32 = 19;
pub const ADDR_MOD_AB_SEC7_SrcBCR_SHAMT: u32 = 14;
pub const ADDR_MOD_AB_SEC7_SrcBCR_MASK: u32 = 16384;
pub const ADDR_MOD_AB_SEC7_SrcBClear_ADDR32: u32 = 19;
pub const ADDR_MOD_AB_SEC7_SrcBClear_SHAMT: u32 = 15;
pub const ADDR_MOD_AB_SEC7_SrcBClear_MASK: u32 = 32768;
pub const ADDR_MOD_AB2_SEC0_SrcAIncr_ADDR32: u32 = 20;
pub const ADDR_MOD_AB2_SEC0_SrcAIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_AB2_SEC0_SrcAIncr_MASK: u32 = 1;
pub const ADDR_MOD_AB2_SEC0_SrcBIncr_ADDR32: u32 = 20;
pub const ADDR_MOD_AB2_SEC0_SrcBIncr_SHAMT: u32 = 1;
pub const ADDR_MOD_AB2_SEC0_SrcBIncr_MASK: u32 = 2;
pub const ADDR_MOD_AB2_SEC1_SrcAIncr_ADDR32: u32 = 21;
pub const ADDR_MOD_AB2_SEC1_SrcAIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_AB2_SEC1_SrcAIncr_MASK: u32 = 1;
pub const ADDR_MOD_AB2_SEC1_SrcBIncr_ADDR32: u32 = 21;
pub const ADDR_MOD_AB2_SEC1_SrcBIncr_SHAMT: u32 = 1;
pub const ADDR_MOD_AB2_SEC1_SrcBIncr_MASK: u32 = 2;
pub const ADDR_MOD_AB2_SEC2_SrcAIncr_ADDR32: u32 = 22;
pub const ADDR_MOD_AB2_SEC2_SrcAIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_AB2_SEC2_SrcAIncr_MASK: u32 = 1;
pub const ADDR_MOD_AB2_SEC2_SrcBIncr_ADDR32: u32 = 22;
pub const ADDR_MOD_AB2_SEC2_SrcBIncr_SHAMT: u32 = 1;
pub const ADDR_MOD_AB2_SEC2_SrcBIncr_MASK: u32 = 2;
pub const ADDR_MOD_AB2_SEC3_SrcAIncr_ADDR32: u32 = 23;
pub const ADDR_MOD_AB2_SEC3_SrcAIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_AB2_SEC3_SrcAIncr_MASK: u32 = 1;
pub const ADDR_MOD_AB2_SEC3_SrcBIncr_ADDR32: u32 = 23;
pub const ADDR_MOD_AB2_SEC3_SrcBIncr_SHAMT: u32 = 1;
pub const ADDR_MOD_AB2_SEC3_SrcBIncr_MASK: u32 = 2;
pub const ADDR_MOD_AB2_SEC4_SrcAIncr_ADDR32: u32 = 24;
pub const ADDR_MOD_AB2_SEC4_SrcAIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_AB2_SEC4_SrcAIncr_MASK: u32 = 1;
pub const ADDR_MOD_AB2_SEC4_SrcBIncr_ADDR32: u32 = 24;
pub const ADDR_MOD_AB2_SEC4_SrcBIncr_SHAMT: u32 = 1;
pub const ADDR_MOD_AB2_SEC4_SrcBIncr_MASK: u32 = 2;
pub const ADDR_MOD_AB2_SEC5_SrcAIncr_ADDR32: u32 = 25;
pub const ADDR_MOD_AB2_SEC5_SrcAIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_AB2_SEC5_SrcAIncr_MASK: u32 = 1;
pub const ADDR_MOD_AB2_SEC5_SrcBIncr_ADDR32: u32 = 25;
pub const ADDR_MOD_AB2_SEC5_SrcBIncr_SHAMT: u32 = 1;
pub const ADDR_MOD_AB2_SEC5_SrcBIncr_MASK: u32 = 2;
pub const ADDR_MOD_AB2_SEC6_SrcAIncr_ADDR32: u32 = 26;
pub const ADDR_MOD_AB2_SEC6_SrcAIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_AB2_SEC6_SrcAIncr_MASK: u32 = 1;
pub const ADDR_MOD_AB2_SEC6_SrcBIncr_ADDR32: u32 = 26;
pub const ADDR_MOD_AB2_SEC6_SrcBIncr_SHAMT: u32 = 1;
pub const ADDR_MOD_AB2_SEC6_SrcBIncr_MASK: u32 = 2;
pub const ADDR_MOD_AB2_SEC7_SrcAIncr_ADDR32: u32 = 27;
pub const ADDR_MOD_AB2_SEC7_SrcAIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_AB2_SEC7_SrcAIncr_MASK: u32 = 1;
pub const ADDR_MOD_AB2_SEC7_SrcBIncr_ADDR32: u32 = 27;
pub const ADDR_MOD_AB2_SEC7_SrcBIncr_SHAMT: u32 = 1;
pub const ADDR_MOD_AB2_SEC7_SrcBIncr_MASK: u32 = 2;
pub const ADDR_MOD_DST_SEC0_DestIncr_ADDR32: u32 = 28;
pub const ADDR_MOD_DST_SEC0_DestIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_DST_SEC0_DestIncr_MASK: u32 = 1023;
pub const ADDR_MOD_DST_SEC0_DestCR_ADDR32: u32 = 28;
pub const ADDR_MOD_DST_SEC0_DestCR_SHAMT: u32 = 10;
pub const ADDR_MOD_DST_SEC0_DestCR_MASK: u32 = 1024;
pub const ADDR_MOD_DST_SEC0_DestClear_ADDR32: u32 = 28;
pub const ADDR_MOD_DST_SEC0_DestClear_SHAMT: u32 = 11;
pub const ADDR_MOD_DST_SEC0_DestClear_MASK: u32 = 2048;
pub const ADDR_MOD_DST_SEC0_DestCToCR_ADDR32: u32 = 28;
pub const ADDR_MOD_DST_SEC0_DestCToCR_SHAMT: u32 = 12;
pub const ADDR_MOD_DST_SEC0_DestCToCR_MASK: u32 = 4096;
pub const ADDR_MOD_DST_SEC0_FidelityIncr_ADDR32: u32 = 28;
pub const ADDR_MOD_DST_SEC0_FidelityIncr_SHAMT: u32 = 13;
pub const ADDR_MOD_DST_SEC0_FidelityIncr_MASK: u32 = 24576;
pub const ADDR_MOD_DST_SEC0_FidelityClear_ADDR32: u32 = 28;
pub const ADDR_MOD_DST_SEC0_FidelityClear_SHAMT: u32 = 15;
pub const ADDR_MOD_DST_SEC0_FidelityClear_MASK: u32 = 32768;
pub const ADDR_MOD_DST_SEC1_DestIncr_ADDR32: u32 = 29;
pub const ADDR_MOD_DST_SEC1_DestIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_DST_SEC1_DestIncr_MASK: u32 = 1023;
pub const ADDR_MOD_DST_SEC1_DestCR_ADDR32: u32 = 29;
pub const ADDR_MOD_DST_SEC1_DestCR_SHAMT: u32 = 10;
pub const ADDR_MOD_DST_SEC1_DestCR_MASK: u32 = 1024;
pub const ADDR_MOD_DST_SEC1_DestClear_ADDR32: u32 = 29;
pub const ADDR_MOD_DST_SEC1_DestClear_SHAMT: u32 = 11;
pub const ADDR_MOD_DST_SEC1_DestClear_MASK: u32 = 2048;
pub const ADDR_MOD_DST_SEC1_DestCToCR_ADDR32: u32 = 29;
pub const ADDR_MOD_DST_SEC1_DestCToCR_SHAMT: u32 = 12;
pub const ADDR_MOD_DST_SEC1_DestCToCR_MASK: u32 = 4096;
pub const ADDR_MOD_DST_SEC1_FidelityIncr_ADDR32: u32 = 29;
pub const ADDR_MOD_DST_SEC1_FidelityIncr_SHAMT: u32 = 13;
pub const ADDR_MOD_DST_SEC1_FidelityIncr_MASK: u32 = 24576;
pub const ADDR_MOD_DST_SEC1_FidelityClear_ADDR32: u32 = 29;
pub const ADDR_MOD_DST_SEC1_FidelityClear_SHAMT: u32 = 15;
pub const ADDR_MOD_DST_SEC1_FidelityClear_MASK: u32 = 32768;
pub const ADDR_MOD_DST_SEC2_DestIncr_ADDR32: u32 = 30;
pub const ADDR_MOD_DST_SEC2_DestIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_DST_SEC2_DestIncr_MASK: u32 = 1023;
pub const ADDR_MOD_DST_SEC2_DestCR_ADDR32: u32 = 30;
pub const ADDR_MOD_DST_SEC2_DestCR_SHAMT: u32 = 10;
pub const ADDR_MOD_DST_SEC2_DestCR_MASK: u32 = 1024;
pub const ADDR_MOD_DST_SEC2_DestClear_ADDR32: u32 = 30;
pub const ADDR_MOD_DST_SEC2_DestClear_SHAMT: u32 = 11;
pub const ADDR_MOD_DST_SEC2_DestClear_MASK: u32 = 2048;
pub const ADDR_MOD_DST_SEC2_DestCToCR_ADDR32: u32 = 30;
pub const ADDR_MOD_DST_SEC2_DestCToCR_SHAMT: u32 = 12;
pub const ADDR_MOD_DST_SEC2_DestCToCR_MASK: u32 = 4096;
pub const ADDR_MOD_DST_SEC2_FidelityIncr_ADDR32: u32 = 30;
pub const ADDR_MOD_DST_SEC2_FidelityIncr_SHAMT: u32 = 13;
pub const ADDR_MOD_DST_SEC2_FidelityIncr_MASK: u32 = 24576;
pub const ADDR_MOD_DST_SEC2_FidelityClear_ADDR32: u32 = 30;
pub const ADDR_MOD_DST_SEC2_FidelityClear_SHAMT: u32 = 15;
pub const ADDR_MOD_DST_SEC2_FidelityClear_MASK: u32 = 32768;
pub const ADDR_MOD_DST_SEC3_DestIncr_ADDR32: u32 = 31;
pub const ADDR_MOD_DST_SEC3_DestIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_DST_SEC3_DestIncr_MASK: u32 = 1023;
pub const ADDR_MOD_DST_SEC3_DestCR_ADDR32: u32 = 31;
pub const ADDR_MOD_DST_SEC3_DestCR_SHAMT: u32 = 10;
pub const ADDR_MOD_DST_SEC3_DestCR_MASK: u32 = 1024;
pub const ADDR_MOD_DST_SEC3_DestClear_ADDR32: u32 = 31;
pub const ADDR_MOD_DST_SEC3_DestClear_SHAMT: u32 = 11;
pub const ADDR_MOD_DST_SEC3_DestClear_MASK: u32 = 2048;
pub const ADDR_MOD_DST_SEC3_DestCToCR_ADDR32: u32 = 31;
pub const ADDR_MOD_DST_SEC3_DestCToCR_SHAMT: u32 = 12;
pub const ADDR_MOD_DST_SEC3_DestCToCR_MASK: u32 = 4096;
pub const ADDR_MOD_DST_SEC3_FidelityIncr_ADDR32: u32 = 31;
pub const ADDR_MOD_DST_SEC3_FidelityIncr_SHAMT: u32 = 13;
pub const ADDR_MOD_DST_SEC3_FidelityIncr_MASK: u32 = 24576;
pub const ADDR_MOD_DST_SEC3_FidelityClear_ADDR32: u32 = 31;
pub const ADDR_MOD_DST_SEC3_FidelityClear_SHAMT: u32 = 15;
pub const ADDR_MOD_DST_SEC3_FidelityClear_MASK: u32 = 32768;
pub const ADDR_MOD_DST_SEC4_DestIncr_ADDR32: u32 = 32;
pub const ADDR_MOD_DST_SEC4_DestIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_DST_SEC4_DestIncr_MASK: u32 = 1023;
pub const ADDR_MOD_DST_SEC4_DestCR_ADDR32: u32 = 32;
pub const ADDR_MOD_DST_SEC4_DestCR_SHAMT: u32 = 10;
pub const ADDR_MOD_DST_SEC4_DestCR_MASK: u32 = 1024;
pub const ADDR_MOD_DST_SEC4_DestClear_ADDR32: u32 = 32;
pub const ADDR_MOD_DST_SEC4_DestClear_SHAMT: u32 = 11;
pub const ADDR_MOD_DST_SEC4_DestClear_MASK: u32 = 2048;
pub const ADDR_MOD_DST_SEC4_DestCToCR_ADDR32: u32 = 32;
pub const ADDR_MOD_DST_SEC4_DestCToCR_SHAMT: u32 = 12;
pub const ADDR_MOD_DST_SEC4_DestCToCR_MASK: u32 = 4096;
pub const ADDR_MOD_DST_SEC4_FidelityIncr_ADDR32: u32 = 32;
pub const ADDR_MOD_DST_SEC4_FidelityIncr_SHAMT: u32 = 13;
pub const ADDR_MOD_DST_SEC4_FidelityIncr_MASK: u32 = 24576;
pub const ADDR_MOD_DST_SEC4_FidelityClear_ADDR32: u32 = 32;
pub const ADDR_MOD_DST_SEC4_FidelityClear_SHAMT: u32 = 15;
pub const ADDR_MOD_DST_SEC4_FidelityClear_MASK: u32 = 32768;
pub const ADDR_MOD_DST_SEC5_DestIncr_ADDR32: u32 = 33;
pub const ADDR_MOD_DST_SEC5_DestIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_DST_SEC5_DestIncr_MASK: u32 = 1023;
pub const ADDR_MOD_DST_SEC5_DestCR_ADDR32: u32 = 33;
pub const ADDR_MOD_DST_SEC5_DestCR_SHAMT: u32 = 10;
pub const ADDR_MOD_DST_SEC5_DestCR_MASK: u32 = 1024;
pub const ADDR_MOD_DST_SEC5_DestClear_ADDR32: u32 = 33;
pub const ADDR_MOD_DST_SEC5_DestClear_SHAMT: u32 = 11;
pub const ADDR_MOD_DST_SEC5_DestClear_MASK: u32 = 2048;
pub const ADDR_MOD_DST_SEC5_DestCToCR_ADDR32: u32 = 33;
pub const ADDR_MOD_DST_SEC5_DestCToCR_SHAMT: u32 = 12;
pub const ADDR_MOD_DST_SEC5_DestCToCR_MASK: u32 = 4096;
pub const ADDR_MOD_DST_SEC5_FidelityIncr_ADDR32: u32 = 33;
pub const ADDR_MOD_DST_SEC5_FidelityIncr_SHAMT: u32 = 13;
pub const ADDR_MOD_DST_SEC5_FidelityIncr_MASK: u32 = 24576;
pub const ADDR_MOD_DST_SEC5_FidelityClear_ADDR32: u32 = 33;
pub const ADDR_MOD_DST_SEC5_FidelityClear_SHAMT: u32 = 15;
pub const ADDR_MOD_DST_SEC5_FidelityClear_MASK: u32 = 32768;
pub const ADDR_MOD_DST_SEC6_DestIncr_ADDR32: u32 = 34;
pub const ADDR_MOD_DST_SEC6_DestIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_DST_SEC6_DestIncr_MASK: u32 = 1023;
pub const ADDR_MOD_DST_SEC6_DestCR_ADDR32: u32 = 34;
pub const ADDR_MOD_DST_SEC6_DestCR_SHAMT: u32 = 10;
pub const ADDR_MOD_DST_SEC6_DestCR_MASK: u32 = 1024;
pub const ADDR_MOD_DST_SEC6_DestClear_ADDR32: u32 = 34;
pub const ADDR_MOD_DST_SEC6_DestClear_SHAMT: u32 = 11;
pub const ADDR_MOD_DST_SEC6_DestClear_MASK: u32 = 2048;
pub const ADDR_MOD_DST_SEC6_DestCToCR_ADDR32: u32 = 34;
pub const ADDR_MOD_DST_SEC6_DestCToCR_SHAMT: u32 = 12;
pub const ADDR_MOD_DST_SEC6_DestCToCR_MASK: u32 = 4096;
pub const ADDR_MOD_DST_SEC6_FidelityIncr_ADDR32: u32 = 34;
pub const ADDR_MOD_DST_SEC6_FidelityIncr_SHAMT: u32 = 13;
pub const ADDR_MOD_DST_SEC6_FidelityIncr_MASK: u32 = 24576;
pub const ADDR_MOD_DST_SEC6_FidelityClear_ADDR32: u32 = 34;
pub const ADDR_MOD_DST_SEC6_FidelityClear_SHAMT: u32 = 15;
pub const ADDR_MOD_DST_SEC6_FidelityClear_MASK: u32 = 32768;
pub const ADDR_MOD_DST_SEC7_DestIncr_ADDR32: u32 = 35;
pub const ADDR_MOD_DST_SEC7_DestIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_DST_SEC7_DestIncr_MASK: u32 = 1023;
pub const ADDR_MOD_DST_SEC7_DestCR_ADDR32: u32 = 35;
pub const ADDR_MOD_DST_SEC7_DestCR_SHAMT: u32 = 10;
pub const ADDR_MOD_DST_SEC7_DestCR_MASK: u32 = 1024;
pub const ADDR_MOD_DST_SEC7_DestClear_ADDR32: u32 = 35;
pub const ADDR_MOD_DST_SEC7_DestClear_SHAMT: u32 = 11;
pub const ADDR_MOD_DST_SEC7_DestClear_MASK: u32 = 2048;
pub const ADDR_MOD_DST_SEC7_DestCToCR_ADDR32: u32 = 35;
pub const ADDR_MOD_DST_SEC7_DestCToCR_SHAMT: u32 = 12;
pub const ADDR_MOD_DST_SEC7_DestCToCR_MASK: u32 = 4096;
pub const ADDR_MOD_DST_SEC7_FidelityIncr_ADDR32: u32 = 35;
pub const ADDR_MOD_DST_SEC7_FidelityIncr_SHAMT: u32 = 13;
pub const ADDR_MOD_DST_SEC7_FidelityIncr_MASK: u32 = 24576;
pub const ADDR_MOD_DST_SEC7_FidelityClear_ADDR32: u32 = 35;
pub const ADDR_MOD_DST_SEC7_FidelityClear_SHAMT: u32 = 15;
pub const ADDR_MOD_DST_SEC7_FidelityClear_MASK: u32 = 32768;
pub const SFPU_STACK_Incr_ADDR32: u32 = 36;
pub const SFPU_STACK_Incr_SHAMT: u32 = 0;
pub const SFPU_STACK_Incr_MASK: u32 = 1023;
pub const ADDR_MOD_PACK_SEC0_YsrcIncr_ADDR32: u32 = 37;
pub const ADDR_MOD_PACK_SEC0_YsrcIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_PACK_SEC0_YsrcIncr_MASK: u32 = 15;
pub const ADDR_MOD_PACK_SEC0_YsrcCR_ADDR32: u32 = 37;
pub const ADDR_MOD_PACK_SEC0_YsrcCR_SHAMT: u32 = 4;
pub const ADDR_MOD_PACK_SEC0_YsrcCR_MASK: u32 = 16;
pub const ADDR_MOD_PACK_SEC0_YsrcClear_ADDR32: u32 = 37;
pub const ADDR_MOD_PACK_SEC0_YsrcClear_SHAMT: u32 = 5;
pub const ADDR_MOD_PACK_SEC0_YsrcClear_MASK: u32 = 32;
pub const ADDR_MOD_PACK_SEC0_YdstIncr_ADDR32: u32 = 37;
pub const ADDR_MOD_PACK_SEC0_YdstIncr_SHAMT: u32 = 6;
pub const ADDR_MOD_PACK_SEC0_YdstIncr_MASK: u32 = 960;
pub const ADDR_MOD_PACK_SEC0_YdstCR_ADDR32: u32 = 37;
pub const ADDR_MOD_PACK_SEC0_YdstCR_SHAMT: u32 = 10;
pub const ADDR_MOD_PACK_SEC0_YdstCR_MASK: u32 = 1024;
pub const ADDR_MOD_PACK_SEC0_YdstClear_ADDR32: u32 = 37;
pub const ADDR_MOD_PACK_SEC0_YdstClear_SHAMT: u32 = 11;
pub const ADDR_MOD_PACK_SEC0_YdstClear_MASK: u32 = 2048;
pub const ADDR_MOD_PACK_SEC0_ZsrcIncr_ADDR32: u32 = 37;
pub const ADDR_MOD_PACK_SEC0_ZsrcIncr_SHAMT: u32 = 12;
pub const ADDR_MOD_PACK_SEC0_ZsrcIncr_MASK: u32 = 4096;
pub const ADDR_MOD_PACK_SEC0_ZsrcClear_ADDR32: u32 = 37;
pub const ADDR_MOD_PACK_SEC0_ZsrcClear_SHAMT: u32 = 13;
pub const ADDR_MOD_PACK_SEC0_ZsrcClear_MASK: u32 = 8192;
pub const ADDR_MOD_PACK_SEC0_ZdstIncr_ADDR32: u32 = 37;
pub const ADDR_MOD_PACK_SEC0_ZdstIncr_SHAMT: u32 = 14;
pub const ADDR_MOD_PACK_SEC0_ZdstIncr_MASK: u32 = 16384;
pub const ADDR_MOD_PACK_SEC0_ZdstClear_ADDR32: u32 = 37;
pub const ADDR_MOD_PACK_SEC0_ZdstClear_SHAMT: u32 = 15;
pub const ADDR_MOD_PACK_SEC0_ZdstClear_MASK: u32 = 32768;
pub const ADDR_MOD_PACK_SEC1_YsrcIncr_ADDR32: u32 = 38;
pub const ADDR_MOD_PACK_SEC1_YsrcIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_PACK_SEC1_YsrcIncr_MASK: u32 = 15;
pub const ADDR_MOD_PACK_SEC1_YsrcCR_ADDR32: u32 = 38;
pub const ADDR_MOD_PACK_SEC1_YsrcCR_SHAMT: u32 = 4;
pub const ADDR_MOD_PACK_SEC1_YsrcCR_MASK: u32 = 16;
pub const ADDR_MOD_PACK_SEC1_YsrcClear_ADDR32: u32 = 38;
pub const ADDR_MOD_PACK_SEC1_YsrcClear_SHAMT: u32 = 5;
pub const ADDR_MOD_PACK_SEC1_YsrcClear_MASK: u32 = 32;
pub const ADDR_MOD_PACK_SEC1_YdstIncr_ADDR32: u32 = 38;
pub const ADDR_MOD_PACK_SEC1_YdstIncr_SHAMT: u32 = 6;
pub const ADDR_MOD_PACK_SEC1_YdstIncr_MASK: u32 = 960;
pub const ADDR_MOD_PACK_SEC1_YdstCR_ADDR32: u32 = 38;
pub const ADDR_MOD_PACK_SEC1_YdstCR_SHAMT: u32 = 10;
pub const ADDR_MOD_PACK_SEC1_YdstCR_MASK: u32 = 1024;
pub const ADDR_MOD_PACK_SEC1_YdstClear_ADDR32: u32 = 38;
pub const ADDR_MOD_PACK_SEC1_YdstClear_SHAMT: u32 = 11;
pub const ADDR_MOD_PACK_SEC1_YdstClear_MASK: u32 = 2048;
pub const ADDR_MOD_PACK_SEC1_ZsrcIncr_ADDR32: u32 = 38;
pub const ADDR_MOD_PACK_SEC1_ZsrcIncr_SHAMT: u32 = 12;
pub const ADDR_MOD_PACK_SEC1_ZsrcIncr_MASK: u32 = 4096;
pub const ADDR_MOD_PACK_SEC1_ZsrcClear_ADDR32: u32 = 38;
pub const ADDR_MOD_PACK_SEC1_ZsrcClear_SHAMT: u32 = 13;
pub const ADDR_MOD_PACK_SEC1_ZsrcClear_MASK: u32 = 8192;
pub const ADDR_MOD_PACK_SEC1_ZdstIncr_ADDR32: u32 = 38;
pub const ADDR_MOD_PACK_SEC1_ZdstIncr_SHAMT: u32 = 14;
pub const ADDR_MOD_PACK_SEC1_ZdstIncr_MASK: u32 = 16384;
pub const ADDR_MOD_PACK_SEC1_ZdstClear_ADDR32: u32 = 38;
pub const ADDR_MOD_PACK_SEC1_ZdstClear_SHAMT: u32 = 15;
pub const ADDR_MOD_PACK_SEC1_ZdstClear_MASK: u32 = 32768;
pub const ADDR_MOD_PACK_SEC2_YsrcIncr_ADDR32: u32 = 39;
pub const ADDR_MOD_PACK_SEC2_YsrcIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_PACK_SEC2_YsrcIncr_MASK: u32 = 15;
pub const ADDR_MOD_PACK_SEC2_YsrcCR_ADDR32: u32 = 39;
pub const ADDR_MOD_PACK_SEC2_YsrcCR_SHAMT: u32 = 4;
pub const ADDR_MOD_PACK_SEC2_YsrcCR_MASK: u32 = 16;
pub const ADDR_MOD_PACK_SEC2_YsrcClear_ADDR32: u32 = 39;
pub const ADDR_MOD_PACK_SEC2_YsrcClear_SHAMT: u32 = 5;
pub const ADDR_MOD_PACK_SEC2_YsrcClear_MASK: u32 = 32;
pub const ADDR_MOD_PACK_SEC2_YdstIncr_ADDR32: u32 = 39;
pub const ADDR_MOD_PACK_SEC2_YdstIncr_SHAMT: u32 = 6;
pub const ADDR_MOD_PACK_SEC2_YdstIncr_MASK: u32 = 960;
pub const ADDR_MOD_PACK_SEC2_YdstCR_ADDR32: u32 = 39;
pub const ADDR_MOD_PACK_SEC2_YdstCR_SHAMT: u32 = 10;
pub const ADDR_MOD_PACK_SEC2_YdstCR_MASK: u32 = 1024;
pub const ADDR_MOD_PACK_SEC2_YdstClear_ADDR32: u32 = 39;
pub const ADDR_MOD_PACK_SEC2_YdstClear_SHAMT: u32 = 11;
pub const ADDR_MOD_PACK_SEC2_YdstClear_MASK: u32 = 2048;
pub const ADDR_MOD_PACK_SEC2_ZsrcIncr_ADDR32: u32 = 39;
pub const ADDR_MOD_PACK_SEC2_ZsrcIncr_SHAMT: u32 = 12;
pub const ADDR_MOD_PACK_SEC2_ZsrcIncr_MASK: u32 = 4096;
pub const ADDR_MOD_PACK_SEC2_ZsrcClear_ADDR32: u32 = 39;
pub const ADDR_MOD_PACK_SEC2_ZsrcClear_SHAMT: u32 = 13;
pub const ADDR_MOD_PACK_SEC2_ZsrcClear_MASK: u32 = 8192;
pub const ADDR_MOD_PACK_SEC2_ZdstIncr_ADDR32: u32 = 39;
pub const ADDR_MOD_PACK_SEC2_ZdstIncr_SHAMT: u32 = 14;
pub const ADDR_MOD_PACK_SEC2_ZdstIncr_MASK: u32 = 16384;
pub const ADDR_MOD_PACK_SEC2_ZdstClear_ADDR32: u32 = 39;
pub const ADDR_MOD_PACK_SEC2_ZdstClear_SHAMT: u32 = 15;
pub const ADDR_MOD_PACK_SEC2_ZdstClear_MASK: u32 = 32768;
pub const ADDR_MOD_PACK_SEC3_YsrcIncr_ADDR32: u32 = 40;
pub const ADDR_MOD_PACK_SEC3_YsrcIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_PACK_SEC3_YsrcIncr_MASK: u32 = 15;
pub const ADDR_MOD_PACK_SEC3_YsrcCR_ADDR32: u32 = 40;
pub const ADDR_MOD_PACK_SEC3_YsrcCR_SHAMT: u32 = 4;
pub const ADDR_MOD_PACK_SEC3_YsrcCR_MASK: u32 = 16;
pub const ADDR_MOD_PACK_SEC3_YsrcClear_ADDR32: u32 = 40;
pub const ADDR_MOD_PACK_SEC3_YsrcClear_SHAMT: u32 = 5;
pub const ADDR_MOD_PACK_SEC3_YsrcClear_MASK: u32 = 32;
pub const ADDR_MOD_PACK_SEC3_YdstIncr_ADDR32: u32 = 40;
pub const ADDR_MOD_PACK_SEC3_YdstIncr_SHAMT: u32 = 6;
pub const ADDR_MOD_PACK_SEC3_YdstIncr_MASK: u32 = 960;
pub const ADDR_MOD_PACK_SEC3_YdstCR_ADDR32: u32 = 40;
pub const ADDR_MOD_PACK_SEC3_YdstCR_SHAMT: u32 = 10;
pub const ADDR_MOD_PACK_SEC3_YdstCR_MASK: u32 = 1024;
pub const ADDR_MOD_PACK_SEC3_YdstClear_ADDR32: u32 = 40;
pub const ADDR_MOD_PACK_SEC3_YdstClear_SHAMT: u32 = 11;
pub const ADDR_MOD_PACK_SEC3_YdstClear_MASK: u32 = 2048;
pub const ADDR_MOD_PACK_SEC3_ZsrcIncr_ADDR32: u32 = 40;
pub const ADDR_MOD_PACK_SEC3_ZsrcIncr_SHAMT: u32 = 12;
pub const ADDR_MOD_PACK_SEC3_ZsrcIncr_MASK: u32 = 4096;
pub const ADDR_MOD_PACK_SEC3_ZsrcClear_ADDR32: u32 = 40;
pub const ADDR_MOD_PACK_SEC3_ZsrcClear_SHAMT: u32 = 13;
pub const ADDR_MOD_PACK_SEC3_ZsrcClear_MASK: u32 = 8192;
pub const ADDR_MOD_PACK_SEC3_ZdstIncr_ADDR32: u32 = 40;
pub const ADDR_MOD_PACK_SEC3_ZdstIncr_SHAMT: u32 = 14;
pub const ADDR_MOD_PACK_SEC3_ZdstIncr_MASK: u32 = 16384;
pub const ADDR_MOD_PACK_SEC3_ZdstClear_ADDR32: u32 = 40;
pub const ADDR_MOD_PACK_SEC3_ZdstClear_SHAMT: u32 = 15;
pub const ADDR_MOD_PACK_SEC3_ZdstClear_MASK: u32 = 32768;
pub const UNPACK_MISC_CFG_CfgContextOffset_0_ADDR32: u32 = 41;
pub const UNPACK_MISC_CFG_CfgContextOffset_0_SHAMT: u32 = 0;
pub const UNPACK_MISC_CFG_CfgContextOffset_0_MASK: u32 = 15;
pub const UNPACK_MISC_CFG_CfgContextCntReset_0_ADDR32: u32 = 41;
pub const UNPACK_MISC_CFG_CfgContextCntReset_0_SHAMT: u32 = 4;
pub const UNPACK_MISC_CFG_CfgContextCntReset_0_MASK: u32 = 16;
pub const UNPACK_MISC_CFG_CfgContextCntInc_0_ADDR32: u32 = 41;
pub const UNPACK_MISC_CFG_CfgContextCntInc_0_SHAMT: u32 = 5;
pub const UNPACK_MISC_CFG_CfgContextCntInc_0_MASK: u32 = 32;
pub const UNPACK_MISC_CFG_CfgContextOffset_1_ADDR32: u32 = 41;
pub const UNPACK_MISC_CFG_CfgContextOffset_1_SHAMT: u32 = 8;
pub const UNPACK_MISC_CFG_CfgContextOffset_1_MASK: u32 = 3840;
pub const UNPACK_MISC_CFG_CfgContextCntReset_1_ADDR32: u32 = 41;
pub const UNPACK_MISC_CFG_CfgContextCntReset_1_SHAMT: u32 = 12;
pub const UNPACK_MISC_CFG_CfgContextCntReset_1_MASK: u32 = 4096;
pub const UNPACK_MISC_CFG_CfgContextCntInc_1_ADDR32: u32 = 41;
pub const UNPACK_MISC_CFG_CfgContextCntInc_1_SHAMT: u32 = 13;
pub const UNPACK_MISC_CFG_CfgContextCntInc_1_MASK: u32 = 8192;
pub const UNPACK_MISC_CFG_CfgContextCntReset_metadata_ADDR32: u32 = 41;
pub const UNPACK_MISC_CFG_CfgContextCntReset_metadata_SHAMT: u32 = 14;
pub const UNPACK_MISC_CFG_CfgContextCntReset_metadata_MASK: u32 = 16384;
pub const UNPACK_MISC_CFG_CfgContextCntReset_metadata_zstart_ADDR32: u32 = 41;
pub const UNPACK_MISC_CFG_CfgContextCntReset_metadata_zstart_SHAMT: u32 = 15;
pub const UNPACK_MISC_CFG_CfgContextCntReset_metadata_zstart_MASK: u32 = 32768;
pub const NOC_OVERLAY_MSG_CLEAR_StreamId_0_ADDR32: u32 = 42;
pub const NOC_OVERLAY_MSG_CLEAR_StreamId_0_SHAMT: u32 = 0;
pub const NOC_OVERLAY_MSG_CLEAR_StreamId_0_MASK: u32 = 63;
pub const NOC_OVERLAY_MSG_CLEAR_MsgNum_0_ADDR32: u32 = 42;
pub const NOC_OVERLAY_MSG_CLEAR_MsgNum_0_SHAMT: u32 = 8;
pub const NOC_OVERLAY_MSG_CLEAR_MsgNum_0_MASK: u32 = 1792;
pub const NOC_OVERLAY_MSG_CLEAR_StreamId_1_ADDR32: u32 = 43;
pub const NOC_OVERLAY_MSG_CLEAR_StreamId_1_SHAMT: u32 = 0;
pub const NOC_OVERLAY_MSG_CLEAR_StreamId_1_MASK: u32 = 63;
pub const NOC_OVERLAY_MSG_CLEAR_MsgNum_1_ADDR32: u32 = 43;
pub const NOC_OVERLAY_MSG_CLEAR_MsgNum_1_SHAMT: u32 = 8;
pub const NOC_OVERLAY_MSG_CLEAR_MsgNum_1_MASK: u32 = 1792;
pub const PERF_CNT_CMD_Cmd0Start_ADDR32: u32 = 44;
pub const PERF_CNT_CMD_Cmd0Start_SHAMT: u32 = 0;
pub const PERF_CNT_CMD_Cmd0Start_MASK: u32 = 1;
pub const PERF_CNT_CMD_Cmd0Stop_ADDR32: u32 = 44;
pub const PERF_CNT_CMD_Cmd0Stop_SHAMT: u32 = 1;
pub const PERF_CNT_CMD_Cmd0Stop_MASK: u32 = 2;
pub const PERF_CNT_CMD_Cmd1Start_ADDR32: u32 = 44;
pub const PERF_CNT_CMD_Cmd1Start_SHAMT: u32 = 2;
pub const PERF_CNT_CMD_Cmd1Start_MASK: u32 = 4;
pub const PERF_CNT_CMD_Cmd1Stop_ADDR32: u32 = 44;
pub const PERF_CNT_CMD_Cmd1Stop_SHAMT: u32 = 3;
pub const PERF_CNT_CMD_Cmd1Stop_MASK: u32 = 8;
pub const PERF_CNT_CMD_Cmd2Start_ADDR32: u32 = 44;
pub const PERF_CNT_CMD_Cmd2Start_SHAMT: u32 = 4;
pub const PERF_CNT_CMD_Cmd2Start_MASK: u32 = 16;
pub const PERF_CNT_CMD_Cmd2Stop_ADDR32: u32 = 44;
pub const PERF_CNT_CMD_Cmd2Stop_SHAMT: u32 = 5;
pub const PERF_CNT_CMD_Cmd2Stop_MASK: u32 = 32;
pub const PERF_CNT_CMD_Cmd3Start_ADDR32: u32 = 44;
pub const PERF_CNT_CMD_Cmd3Start_SHAMT: u32 = 6;
pub const PERF_CNT_CMD_Cmd3Start_MASK: u32 = 64;
pub const PERF_CNT_CMD_Cmd3Stop_ADDR32: u32 = 44;
pub const PERF_CNT_CMD_Cmd3Stop_SHAMT: u32 = 7;
pub const PERF_CNT_CMD_Cmd3Stop_MASK: u32 = 128;
pub const ENABLE_ACC_STATS_Enable_ADDR32: u32 = 45;
pub const ENABLE_ACC_STATS_Enable_SHAMT: u32 = 0;
pub const ENABLE_ACC_STATS_Enable_MASK: u32 = 1;
pub const FPU_BIAS_SEL_Pointer_ADDR32: u32 = 46;
pub const FPU_BIAS_SEL_Pointer_SHAMT: u32 = 0;
pub const FPU_BIAS_SEL_Pointer_MASK: u32 = 1;
pub const ADDR_MOD_BIAS_SEC0_BiasIncr_ADDR32: u32 = 47;
pub const ADDR_MOD_BIAS_SEC0_BiasIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_BIAS_SEC0_BiasIncr_MASK: u32 = 15;
pub const ADDR_MOD_BIAS_SEC0_BiasClear_ADDR32: u32 = 47;
pub const ADDR_MOD_BIAS_SEC0_BiasClear_SHAMT: u32 = 4;
pub const ADDR_MOD_BIAS_SEC0_BiasClear_MASK: u32 = 16;
pub const ADDR_MOD_BIAS_SEC1_BiasIncr_ADDR32: u32 = 48;
pub const ADDR_MOD_BIAS_SEC1_BiasIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_BIAS_SEC1_BiasIncr_MASK: u32 = 15;
pub const ADDR_MOD_BIAS_SEC1_BiasClear_ADDR32: u32 = 48;
pub const ADDR_MOD_BIAS_SEC1_BiasClear_SHAMT: u32 = 4;
pub const ADDR_MOD_BIAS_SEC1_BiasClear_MASK: u32 = 16;
pub const ADDR_MOD_BIAS_SEC2_BiasIncr_ADDR32: u32 = 49;
pub const ADDR_MOD_BIAS_SEC2_BiasIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_BIAS_SEC2_BiasIncr_MASK: u32 = 15;
pub const ADDR_MOD_BIAS_SEC2_BiasClear_ADDR32: u32 = 49;
pub const ADDR_MOD_BIAS_SEC2_BiasClear_SHAMT: u32 = 4;
pub const ADDR_MOD_BIAS_SEC2_BiasClear_MASK: u32 = 16;
pub const ADDR_MOD_BIAS_SEC3_BiasIncr_ADDR32: u32 = 50;
pub const ADDR_MOD_BIAS_SEC3_BiasIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_BIAS_SEC3_BiasIncr_MASK: u32 = 15;
pub const ADDR_MOD_BIAS_SEC3_BiasClear_ADDR32: u32 = 50;
pub const ADDR_MOD_BIAS_SEC3_BiasClear_SHAMT: u32 = 4;
pub const ADDR_MOD_BIAS_SEC3_BiasClear_MASK: u32 = 16;
pub const ADDR_MOD_BIAS_SEC4_BiasIncr_ADDR32: u32 = 51;
pub const ADDR_MOD_BIAS_SEC4_BiasIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_BIAS_SEC4_BiasIncr_MASK: u32 = 15;
pub const ADDR_MOD_BIAS_SEC4_BiasClear_ADDR32: u32 = 51;
pub const ADDR_MOD_BIAS_SEC4_BiasClear_SHAMT: u32 = 4;
pub const ADDR_MOD_BIAS_SEC4_BiasClear_MASK: u32 = 16;
pub const ADDR_MOD_BIAS_SEC5_BiasIncr_ADDR32: u32 = 52;
pub const ADDR_MOD_BIAS_SEC5_BiasIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_BIAS_SEC5_BiasIncr_MASK: u32 = 15;
pub const ADDR_MOD_BIAS_SEC5_BiasClear_ADDR32: u32 = 52;
pub const ADDR_MOD_BIAS_SEC5_BiasClear_SHAMT: u32 = 4;
pub const ADDR_MOD_BIAS_SEC5_BiasClear_MASK: u32 = 16;
pub const ADDR_MOD_BIAS_SEC6_BiasIncr_ADDR32: u32 = 53;
pub const ADDR_MOD_BIAS_SEC6_BiasIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_BIAS_SEC6_BiasIncr_MASK: u32 = 15;
pub const ADDR_MOD_BIAS_SEC6_BiasClear_ADDR32: u32 = 53;
pub const ADDR_MOD_BIAS_SEC6_BiasClear_SHAMT: u32 = 4;
pub const ADDR_MOD_BIAS_SEC6_BiasClear_MASK: u32 = 16;
pub const ADDR_MOD_BIAS_SEC7_BiasIncr_ADDR32: u32 = 54;
pub const ADDR_MOD_BIAS_SEC7_BiasIncr_SHAMT: u32 = 0;
pub const ADDR_MOD_BIAS_SEC7_BiasIncr_MASK: u32 = 15;
pub const ADDR_MOD_BIAS_SEC7_BiasClear_ADDR32: u32 = 54;
pub const ADDR_MOD_BIAS_SEC7_BiasClear_SHAMT: u32 = 4;
pub const ADDR_MOD_BIAS_SEC7_BiasClear_MASK: u32 = 16;
pub const FP16A_FORCE_Enable_ADDR32: u32 = 55;
pub const FP16A_FORCE_Enable_SHAMT: u32 = 0;
pub const FP16A_FORCE_Enable_MASK: u32 = 1;
pub const TENSIX_TRISC_SYNC_TrackGlobalCfg_ADDR32: u32 = 56;
pub const TENSIX_TRISC_SYNC_TrackGlobalCfg_SHAMT: u32 = 0;
pub const TENSIX_TRISC_SYNC_TrackGlobalCfg_MASK: u32 = 1;
pub const TENSIX_TRISC_SYNC_EnSubdividedCfgForUnpacr_ADDR32: u32 = 56;
pub const TENSIX_TRISC_SYNC_EnSubdividedCfgForUnpacr_SHAMT: u32 = 1;
pub const TENSIX_TRISC_SYNC_EnSubdividedCfgForUnpacr_MASK: u32 = 2;
pub const TENSIX_TRISC_SYNC_TrackGPR_ADDR32: u32 = 56;
pub const TENSIX_TRISC_SYNC_TrackGPR_SHAMT: u32 = 2;
pub const TENSIX_TRISC_SYNC_TrackGPR_MASK: u32 = 4;
pub const TENSIX_TRISC_SYNC_TrackTDMARegs_ADDR32: u32 = 56;
pub const TENSIX_TRISC_SYNC_TrackTDMARegs_SHAMT: u32 = 3;
pub const TENSIX_TRISC_SYNC_TrackTDMARegs_MASK: u32 = 8;
pub const TENSIX_TRISC_SYNC_TrackTensixInstructions_ADDR32: u32 = 56;
pub const TENSIX_TRISC_SYNC_TrackTensixInstructions_SHAMT: u32 = 4;
pub const TENSIX_TRISC_SYNC_TrackTensixInstructions_MASK: u32 = 16;
pub const STREAMWAIT_PHASE_HI_Val_ADDR32: u32 = 57;
pub const STREAMWAIT_PHASE_HI_Val_SHAMT: u32 = 0;
pub const STREAMWAIT_PHASE_HI_Val_MASK: u32 = 1023;
pub const STREAMWAIT_NUM_MSGS_HI_Val_ADDR32: u32 = 58;
pub const STREAMWAIT_NUM_MSGS_HI_Val_SHAMT: u32 = 0;
pub const STREAMWAIT_NUM_MSGS_HI_Val_MASK: u32 = 127;
pub const STREAM_ID_SYNC_SEC0_BankSel_ADDR32: u32 = 59;
pub const STREAM_ID_SYNC_SEC0_BankSel_SHAMT: u32 = 0;
pub const STREAM_ID_SYNC_SEC0_BankSel_MASK: u32 = 63;
pub const STREAM_ID_SYNC_SEC1_BankSel_ADDR32: u32 = 60;
pub const STREAM_ID_SYNC_SEC1_BankSel_SHAMT: u32 = 0;
pub const STREAM_ID_SYNC_SEC1_BankSel_MASK: u32 = 63;
pub const STREAM_ID_SYNC_SEC2_BankSel_ADDR32: u32 = 61;
pub const STREAM_ID_SYNC_SEC2_BankSel_SHAMT: u32 = 0;
pub const STREAM_ID_SYNC_SEC2_BankSel_MASK: u32 = 63;
pub const STREAM_ID_SYNC_SEC3_BankSel_ADDR32: u32 = 62;
pub const STREAM_ID_SYNC_SEC3_BankSel_SHAMT: u32 = 0;
pub const STREAM_ID_SYNC_SEC3_BankSel_MASK: u32 = 63;
pub const STREAM_ID_TRISC_SEC0_BankSel_ADDR32: u32 = 63;
pub const STREAM_ID_TRISC_SEC0_BankSel_SHAMT: u32 = 0;
pub const STREAM_ID_TRISC_SEC0_BankSel_MASK: u32 = 63;
pub const STREAM_ID_TRISC_SEC1_BankSel_ADDR32: u32 = 64;
pub const STREAM_ID_TRISC_SEC1_BankSel_SHAMT: u32 = 0;
pub const STREAM_ID_TRISC_SEC1_BankSel_MASK: u32 = 63;
pub const STREAM_ID_TRISC_SEC2_BankSel_ADDR32: u32 = 65;
pub const STREAM_ID_TRISC_SEC2_BankSel_SHAMT: u32 = 0;
pub const STREAM_ID_TRISC_SEC2_BankSel_MASK: u32 = 63;
pub const STREAM_ID_TRISC_SEC3_BankSel_ADDR32: u32 = 66;
pub const STREAM_ID_TRISC_SEC3_BankSel_SHAMT: u32 = 0;
pub const STREAM_ID_TRISC_SEC3_BankSel_MASK: u32 = 63;
pub const TENSIX_CSR_CONFIG_RawBusyStatus_ADDR32: u32 = 67;
pub const TENSIX_CSR_CONFIG_RawBusyStatus_SHAMT: u32 = 0;
pub const TENSIX_CSR_CONFIG_RawBusyStatus_MASK: u32 = 1;
pub const ALU_CFGREG_BASE_ADDR32: u32 = 0;
pub const ALU_FORMAT_SPEC_REG_SrcA_val_ADDR32: u32 = 0;
pub const ALU_FORMAT_SPEC_REG_SrcA_val_SHAMT: u32 = 0;
pub const ALU_FORMAT_SPEC_REG_SrcA_val_MASK: u32 = 15;
pub const ALU_FORMAT_SPEC_REG_SrcA_override_ADDR32: u32 = 0;
pub const ALU_FORMAT_SPEC_REG_SrcA_override_SHAMT: u32 = 4;
pub const ALU_FORMAT_SPEC_REG_SrcA_override_MASK: u32 = 16;
pub const ALU_FORMAT_SPEC_REG_SrcB_val_ADDR32: u32 = 0;
pub const ALU_FORMAT_SPEC_REG_SrcB_val_SHAMT: u32 = 5;
pub const ALU_FORMAT_SPEC_REG_SrcB_val_MASK: u32 = 480;
pub const ALU_FORMAT_SPEC_REG_SrcB_override_ADDR32: u32 = 0;
pub const ALU_FORMAT_SPEC_REG_SrcB_override_SHAMT: u32 = 9;
pub const ALU_FORMAT_SPEC_REG_SrcB_override_MASK: u32 = 512;
pub const ALU_FORMAT_SPEC_REG_Dstacc_val_ADDR32: u32 = 0;
pub const ALU_FORMAT_SPEC_REG_Dstacc_val_SHAMT: u32 = 10;
pub const ALU_FORMAT_SPEC_REG_Dstacc_val_MASK: u32 = 15360;
pub const ALU_FORMAT_SPEC_REG_Dstacc_override_ADDR32: u32 = 0;
pub const ALU_FORMAT_SPEC_REG_Dstacc_override_SHAMT: u32 = 14;
pub const ALU_FORMAT_SPEC_REG_Dstacc_override_MASK: u32 = 16384;
pub const ALU_ROUNDING_MODE_Fpu_srnd_en_ADDR32: u32 = 1;
pub const ALU_ROUNDING_MODE_Fpu_srnd_en_SHAMT: u32 = 0;
pub const ALU_ROUNDING_MODE_Fpu_srnd_en_MASK: u32 = 1;
pub const ALU_ROUNDING_MODE_Gasket_srnd_en_ADDR32: u32 = 1;
pub const ALU_ROUNDING_MODE_Gasket_srnd_en_SHAMT: u32 = 1;
pub const ALU_ROUNDING_MODE_Gasket_srnd_en_MASK: u32 = 2;
pub const ALU_ROUNDING_MODE_Packer_srnd_en_ADDR32: u32 = 1;
pub const ALU_ROUNDING_MODE_Packer_srnd_en_SHAMT: u32 = 2;
pub const ALU_ROUNDING_MODE_Packer_srnd_en_MASK: u32 = 4;
pub const ALU_ROUNDING_MODE_Padding_ADDR32: u32 = 1;
pub const ALU_ROUNDING_MODE_Padding_SHAMT: u32 = 3;
pub const ALU_ROUNDING_MODE_Padding_MASK: u32 = 8184;
pub const ALU_ROUNDING_MODE_GS_LF_ADDR32: u32 = 1;
pub const ALU_ROUNDING_MODE_GS_LF_SHAMT: u32 = 13;
pub const ALU_ROUNDING_MODE_GS_LF_MASK: u32 = 8192;
pub const ALU_ROUNDING_MODE_Bfp8_HF_ADDR32: u32 = 1;
pub const ALU_ROUNDING_MODE_Bfp8_HF_SHAMT: u32 = 14;
pub const ALU_ROUNDING_MODE_Bfp8_HF_MASK: u32 = 16384;
pub const ALU_FORMAT_SPEC_REG0_SrcAUnsigned_ADDR32: u32 = 1;
pub const ALU_FORMAT_SPEC_REG0_SrcAUnsigned_SHAMT: u32 = 15;
pub const ALU_FORMAT_SPEC_REG0_SrcAUnsigned_MASK: u32 = 32768;
pub const ALU_FORMAT_SPEC_REG0_SrcBUnsigned_ADDR32: u32 = 1;
pub const ALU_FORMAT_SPEC_REG0_SrcBUnsigned_SHAMT: u32 = 16;
pub const ALU_FORMAT_SPEC_REG0_SrcBUnsigned_MASK: u32 = 65536;
pub const ALU_FORMAT_SPEC_REG0_SrcA_ADDR32: u32 = 1;
pub const ALU_FORMAT_SPEC_REG0_SrcA_SHAMT: u32 = 17;
pub const ALU_FORMAT_SPEC_REG0_SrcA_MASK: u32 = 1966080;
pub const ALU_FORMAT_SPEC_REG1_SrcB_ADDR32: u32 = 1;
pub const ALU_FORMAT_SPEC_REG1_SrcB_SHAMT: u32 = 21;
pub const ALU_FORMAT_SPEC_REG1_SrcB_MASK: u32 = 31457280;
pub const ALU_FORMAT_SPEC_REG2_Dstacc_ADDR32: u32 = 1;
pub const ALU_FORMAT_SPEC_REG2_Dstacc_SHAMT: u32 = 25;
pub const ALU_FORMAT_SPEC_REG2_Dstacc_MASK: u32 = 503316480;
pub const ALU_ACC_CTRL_Fp32_enabled_ADDR32: u32 = 1;
pub const ALU_ACC_CTRL_Fp32_enabled_SHAMT: u32 = 29;
pub const ALU_ACC_CTRL_Fp32_enabled_MASK: u32 = 536870912;
pub const ALU_ACC_CTRL_SFPU_Fp32_enabled_ADDR32: u32 = 1;
pub const ALU_ACC_CTRL_SFPU_Fp32_enabled_SHAMT: u32 = 30;
pub const ALU_ACC_CTRL_SFPU_Fp32_enabled_MASK: u32 = 1073741824;
pub const ALU_ACC_CTRL_INT8_math_enabled_ADDR32: u32 = 1;
pub const ALU_ACC_CTRL_INT8_math_enabled_SHAMT: u32 = 31;
pub const ALU_ACC_CTRL_INT8_math_enabled_MASK: u32 = 2147483648;
pub const ALU_ACC_CTRL_Zero_Flag_disabled_src_ADDR32: u32 = 2;
pub const ALU_ACC_CTRL_Zero_Flag_disabled_src_SHAMT: u32 = 0;
pub const ALU_ACC_CTRL_Zero_Flag_disabled_src_MASK: u32 = 1;
pub const ALU_ACC_CTRL_Zero_Flag_disabled_dst_ADDR32: u32 = 2;
pub const ALU_ACC_CTRL_Zero_Flag_disabled_dst_SHAMT: u32 = 1;
pub const ALU_ACC_CTRL_Zero_Flag_disabled_dst_MASK: u32 = 2;
pub const STACC_RELU_ApplyRelu_ADDR32: u32 = 2;
pub const STACC_RELU_ApplyRelu_SHAMT: u32 = 2;
pub const STACC_RELU_ApplyRelu_MASK: u32 = 60;
pub const STACC_RELU_ReluThreshold_ADDR32: u32 = 2;
pub const STACC_RELU_ReluThreshold_SHAMT: u32 = 6;
pub const STACC_RELU_ReluThreshold_MASK: u32 = 4194240;
pub const DISABLE_RISC_BP_Disable_main_ADDR32: u32 = 2;
pub const DISABLE_RISC_BP_Disable_main_SHAMT: u32 = 22;
pub const DISABLE_RISC_BP_Disable_main_MASK: u32 = 4194304;
pub const DISABLE_RISC_BP_Disable_trisc_ADDR32: u32 = 2;
pub const DISABLE_RISC_BP_Disable_trisc_SHAMT: u32 = 23;
pub const DISABLE_RISC_BP_Disable_trisc_MASK: u32 = 58720256;
pub const DISABLE_RISC_BP_Disable_ncrisc_ADDR32: u32 = 2;
pub const DISABLE_RISC_BP_Disable_ncrisc_SHAMT: u32 = 26;
pub const DISABLE_RISC_BP_Disable_ncrisc_MASK: u32 = 67108864;
pub const DISABLE_RISC_BP_Disable_bmp_clear_main_ADDR32: u32 = 2;
pub const DISABLE_RISC_BP_Disable_bmp_clear_main_SHAMT: u32 = 27;
pub const DISABLE_RISC_BP_Disable_bmp_clear_main_MASK: u32 = 134217728;
pub const DISABLE_RISC_BP_Disable_bmp_clear_trisc_ADDR32: u32 = 2;
pub const DISABLE_RISC_BP_Disable_bmp_clear_trisc_SHAMT: u32 = 28;
pub const DISABLE_RISC_BP_Disable_bmp_clear_trisc_MASK: u32 = 1879048192;
pub const DISABLE_RISC_BP_Disable_bmp_clear_ncrisc_ADDR32: u32 = 2;
pub const DISABLE_RISC_BP_Disable_bmp_clear_ncrisc_SHAMT: u32 = 31;
pub const DISABLE_RISC_BP_Disable_bmp_clear_ncrisc_MASK: u32 = 2147483648;
pub const ECC_SCRUBBER_Enable_ADDR32: u32 = 3;
pub const ECC_SCRUBBER_Enable_SHAMT: u32 = 0;
pub const ECC_SCRUBBER_Enable_MASK: u32 = 1;
pub const ECC_SCRUBBER_Scrub_On_Error_ADDR32: u32 = 3;
pub const ECC_SCRUBBER_Scrub_On_Error_SHAMT: u32 = 1;
pub const ECC_SCRUBBER_Scrub_On_Error_MASK: u32 = 2;
pub const ECC_SCRUBBER_Scrub_On_Error_Immediately_ADDR32: u32 = 3;
pub const ECC_SCRUBBER_Scrub_On_Error_Immediately_SHAMT: u32 = 2;
pub const ECC_SCRUBBER_Scrub_On_Error_Immediately_MASK: u32 = 4;
pub const ECC_SCRUBBER_Delay_ADDR32: u32 = 3;
pub const ECC_SCRUBBER_Delay_SHAMT: u32 = 3;
pub const ECC_SCRUBBER_Delay_MASK: u32 = 16376;
pub const RISC_DEST_ACCESS_CTRL_SEC0_no_swizzle_ADDR32: u32 = 3;
pub const RISC_DEST_ACCESS_CTRL_SEC0_no_swizzle_SHAMT: u32 = 14;
pub const RISC_DEST_ACCESS_CTRL_SEC0_no_swizzle_MASK: u32 = 16384;
pub const RISC_DEST_ACCESS_CTRL_SEC0_unsigned_int_ADDR32: u32 = 3;
pub const RISC_DEST_ACCESS_CTRL_SEC0_unsigned_int_SHAMT: u32 = 15;
pub const RISC_DEST_ACCESS_CTRL_SEC0_unsigned_int_MASK: u32 = 32768;
pub const RISC_DEST_ACCESS_CTRL_SEC0_fmt_ADDR32: u32 = 3;
pub const RISC_DEST_ACCESS_CTRL_SEC0_fmt_SHAMT: u32 = 16;
pub const RISC_DEST_ACCESS_CTRL_SEC0_fmt_MASK: u32 = 458752;
pub const RISC_DEST_ACCESS_CTRL_SEC1_no_swizzle_ADDR32: u32 = 3;
pub const RISC_DEST_ACCESS_CTRL_SEC1_no_swizzle_SHAMT: u32 = 19;
pub const RISC_DEST_ACCESS_CTRL_SEC1_no_swizzle_MASK: u32 = 524288;
pub const RISC_DEST_ACCESS_CTRL_SEC1_unsigned_int_ADDR32: u32 = 3;
pub const RISC_DEST_ACCESS_CTRL_SEC1_unsigned_int_SHAMT: u32 = 20;
pub const RISC_DEST_ACCESS_CTRL_SEC1_unsigned_int_MASK: u32 = 1048576;
pub const RISC_DEST_ACCESS_CTRL_SEC1_fmt_ADDR32: u32 = 3;
pub const RISC_DEST_ACCESS_CTRL_SEC1_fmt_SHAMT: u32 = 21;
pub const RISC_DEST_ACCESS_CTRL_SEC1_fmt_MASK: u32 = 14680064;
pub const RISC_DEST_ACCESS_CTRL_SEC2_no_swizzle_ADDR32: u32 = 3;
pub const RISC_DEST_ACCESS_CTRL_SEC2_no_swizzle_SHAMT: u32 = 24;
pub const RISC_DEST_ACCESS_CTRL_SEC2_no_swizzle_MASK: u32 = 16777216;
pub const RISC_DEST_ACCESS_CTRL_SEC2_unsigned_int_ADDR32: u32 = 3;
pub const RISC_DEST_ACCESS_CTRL_SEC2_unsigned_int_SHAMT: u32 = 25;
pub const RISC_DEST_ACCESS_CTRL_SEC2_unsigned_int_MASK: u32 = 33554432;
pub const RISC_DEST_ACCESS_CTRL_SEC2_fmt_ADDR32: u32 = 3;
pub const RISC_DEST_ACCESS_CTRL_SEC2_fmt_SHAMT: u32 = 26;
pub const RISC_DEST_ACCESS_CTRL_SEC2_fmt_MASK: u32 = 469762048;
pub const STATE_RESET_EN_ADDR32: u32 = 4;
pub const STATE_RESET_EN_SHAMT: u32 = 0;
pub const STATE_RESET_EN_MASK: u32 = 1;
pub const DEST_OFFSET_Enable_ADDR32: u32 = 5;
pub const DEST_OFFSET_Enable_SHAMT: u32 = 0;
pub const DEST_OFFSET_Enable_MASK: u32 = 1;
pub const DEST_REGW_BASE_Base_ADDR32: u32 = 6;
pub const DEST_REGW_BASE_Base_SHAMT: u32 = 0;
pub const DEST_REGW_BASE_Base_MASK: u32 = 65535;
pub const DEST_SP_BASE_Base_ADDR32: u32 = 7;
pub const DEST_SP_BASE_Base_SHAMT: u32 = 0;
pub const DEST_SP_BASE_Base_MASK: u32 = 65535;
pub const INT_DESCALE_Enable_ADDR32: u32 = 8;
pub const INT_DESCALE_Enable_SHAMT: u32 = 0;
pub const INT_DESCALE_Enable_MASK: u32 = 1;
pub const INT_DESCALE_Mode_ADDR32: u32 = 8;
pub const INT_DESCALE_Mode_SHAMT: u32 = 1;
pub const INT_DESCALE_Mode_MASK: u32 = 2;
pub const PACK0_CFGREG_BASE_ADDR32: u32 = 12;
pub const PCK0_ADDR_CTRL_XY_REG_0_Xstride_ADDR32: u32 = 12;
pub const PCK0_ADDR_CTRL_XY_REG_0_Xstride_SHAMT: u32 = 0;
pub const PCK0_ADDR_CTRL_XY_REG_0_Xstride_MASK: u32 = 65535;
pub const PCK0_ADDR_CTRL_XY_REG_0_Ystride_ADDR32: u32 = 12;
pub const PCK0_ADDR_CTRL_XY_REG_0_Ystride_SHAMT: u32 = 16;
pub const PCK0_ADDR_CTRL_XY_REG_0_Ystride_MASK: u32 = 4294901760;
pub const PCK0_ADDR_CTRL_ZW_REG_0_Zstride_ADDR32: u32 = 13;
pub const PCK0_ADDR_CTRL_ZW_REG_0_Zstride_SHAMT: u32 = 0;
pub const PCK0_ADDR_CTRL_ZW_REG_0_Zstride_MASK: u32 = 65535;
pub const PCK0_ADDR_CTRL_ZW_REG_0_Wstride_ADDR32: u32 = 13;
pub const PCK0_ADDR_CTRL_ZW_REG_0_Wstride_SHAMT: u32 = 16;
pub const PCK0_ADDR_CTRL_ZW_REG_0_Wstride_MASK: u32 = 4294901760;
pub const PCK0_ADDR_CTRL_XY_REG_1_Xstride_ADDR32: u32 = 14;
pub const PCK0_ADDR_CTRL_XY_REG_1_Xstride_SHAMT: u32 = 0;
pub const PCK0_ADDR_CTRL_XY_REG_1_Xstride_MASK: u32 = 65535;
pub const PCK0_ADDR_CTRL_XY_REG_1_Ystride_ADDR32: u32 = 14;
pub const PCK0_ADDR_CTRL_XY_REG_1_Ystride_SHAMT: u32 = 16;
pub const PCK0_ADDR_CTRL_XY_REG_1_Ystride_MASK: u32 = 4294901760;
pub const PCK0_ADDR_CTRL_ZW_REG_1_Zstride_ADDR32: u32 = 15;
pub const PCK0_ADDR_CTRL_ZW_REG_1_Zstride_SHAMT: u32 = 0;
pub const PCK0_ADDR_CTRL_ZW_REG_1_Zstride_MASK: u32 = 65535;
pub const PCK0_ADDR_CTRL_ZW_REG_1_Wstride_ADDR32: u32 = 15;
pub const PCK0_ADDR_CTRL_ZW_REG_1_Wstride_SHAMT: u32 = 16;
pub const PCK0_ADDR_CTRL_ZW_REG_1_Wstride_MASK: u32 = 4294901760;
pub const PCK0_ADDR_BASE_REG_0_Base_ADDR32: u32 = 16;
pub const PCK0_ADDR_BASE_REG_0_Base_SHAMT: u32 = 0;
pub const PCK0_ADDR_BASE_REG_0_Base_MASK: u32 = 262143;
pub const PCK0_ADDR_BASE_REG_1_Base_ADDR32: u32 = 17;
pub const PCK0_ADDR_BASE_REG_1_Base_SHAMT: u32 = 0;
pub const PCK0_ADDR_BASE_REG_1_Base_MASK: u32 = 262143;
pub const PCK_DEST_RD_CTRL_Read_32b_data_ADDR32: u32 = 18;
pub const PCK_DEST_RD_CTRL_Read_32b_data_SHAMT: u32 = 0;
pub const PCK_DEST_RD_CTRL_Read_32b_data_MASK: u32 = 1;
pub const PCK_DEST_RD_CTRL_Read_unsigned_ADDR32: u32 = 18;
pub const PCK_DEST_RD_CTRL_Read_unsigned_SHAMT: u32 = 1;
pub const PCK_DEST_RD_CTRL_Read_unsigned_MASK: u32 = 2;
pub const PCK_DEST_RD_CTRL_Read_int8_ADDR32: u32 = 18;
pub const PCK_DEST_RD_CTRL_Read_int8_SHAMT: u32 = 2;
pub const PCK_DEST_RD_CTRL_Read_int8_MASK: u32 = 4;
pub const PCK_DEST_RD_CTRL_Round_10b_mant_ADDR32: u32 = 18;
pub const PCK_DEST_RD_CTRL_Round_10b_mant_SHAMT: u32 = 3;
pub const PCK_DEST_RD_CTRL_Round_10b_mant_MASK: u32 = 8;
pub const PCK_EDGE_TILE_FACE_SET_SELECT_select_ADDR32: u32 = 19;
pub const PCK_EDGE_TILE_FACE_SET_SELECT_select_SHAMT: u32 = 0;
pub const PCK_EDGE_TILE_FACE_SET_SELECT_select_MASK: u32 = 255;
pub const PCK_EDGE_TILE_FACE_SET_SELECT_enable_ADDR32: u32 = 19;
pub const PCK_EDGE_TILE_FACE_SET_SELECT_enable_SHAMT: u32 = 8;
pub const PCK_EDGE_TILE_FACE_SET_SELECT_enable_MASK: u32 = 256;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_0_ADDR32: u32 = 20;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_0_SHAMT: u32 = 0;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_0_MASK: u32 = 3;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_1_ADDR32: u32 = 20;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_1_SHAMT: u32 = 2;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_1_MASK: u32 = 12;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_2_ADDR32: u32 = 20;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_2_SHAMT: u32 = 4;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_2_MASK: u32 = 48;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_3_ADDR32: u32 = 20;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_3_SHAMT: u32 = 6;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_3_MASK: u32 = 192;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_4_ADDR32: u32 = 20;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_4_SHAMT: u32 = 8;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_4_MASK: u32 = 768;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_5_ADDR32: u32 = 20;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_5_SHAMT: u32 = 10;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_5_MASK: u32 = 3072;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_6_ADDR32: u32 = 20;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_6_SHAMT: u32 = 12;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_6_MASK: u32 = 12288;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_7_ADDR32: u32 = 20;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_7_SHAMT: u32 = 14;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_7_MASK: u32 = 49152;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_8_ADDR32: u32 = 20;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_8_SHAMT: u32 = 16;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_8_MASK: u32 = 196608;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_9_ADDR32: u32 = 20;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_9_SHAMT: u32 = 18;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_9_MASK: u32 = 786432;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_10_ADDR32: u32 = 20;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_10_SHAMT: u32 = 20;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_10_MASK: u32 = 3145728;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_11_ADDR32: u32 = 20;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_11_SHAMT: u32 = 22;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_11_MASK: u32 = 12582912;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_12_ADDR32: u32 = 20;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_12_SHAMT: u32 = 24;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_12_MASK: u32 = 50331648;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_13_ADDR32: u32 = 20;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_13_SHAMT: u32 = 26;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_13_MASK: u32 = 201326592;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_14_ADDR32: u32 = 20;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_14_SHAMT: u32 = 28;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_14_MASK: u32 = 805306368;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_15_ADDR32: u32 = 20;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_15_SHAMT: u32 = 30;
pub const TILE_ROW_SET_MAPPING_0_row_set_mapping_15_MASK: u32 = 3221225472;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_0_ADDR32: u32 = 21;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_0_SHAMT: u32 = 0;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_0_MASK: u32 = 3;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_1_ADDR32: u32 = 21;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_1_SHAMT: u32 = 2;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_1_MASK: u32 = 12;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_2_ADDR32: u32 = 21;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_2_SHAMT: u32 = 4;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_2_MASK: u32 = 48;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_3_ADDR32: u32 = 21;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_3_SHAMT: u32 = 6;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_3_MASK: u32 = 192;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_4_ADDR32: u32 = 21;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_4_SHAMT: u32 = 8;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_4_MASK: u32 = 768;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_5_ADDR32: u32 = 21;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_5_SHAMT: u32 = 10;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_5_MASK: u32 = 3072;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_6_ADDR32: u32 = 21;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_6_SHAMT: u32 = 12;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_6_MASK: u32 = 12288;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_7_ADDR32: u32 = 21;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_7_SHAMT: u32 = 14;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_7_MASK: u32 = 49152;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_8_ADDR32: u32 = 21;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_8_SHAMT: u32 = 16;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_8_MASK: u32 = 196608;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_9_ADDR32: u32 = 21;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_9_SHAMT: u32 = 18;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_9_MASK: u32 = 786432;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_10_ADDR32: u32 = 21;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_10_SHAMT: u32 = 20;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_10_MASK: u32 = 3145728;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_11_ADDR32: u32 = 21;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_11_SHAMT: u32 = 22;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_11_MASK: u32 = 12582912;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_12_ADDR32: u32 = 21;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_12_SHAMT: u32 = 24;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_12_MASK: u32 = 50331648;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_13_ADDR32: u32 = 21;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_13_SHAMT: u32 = 26;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_13_MASK: u32 = 201326592;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_14_ADDR32: u32 = 21;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_14_SHAMT: u32 = 28;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_14_MASK: u32 = 805306368;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_15_ADDR32: u32 = 21;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_15_SHAMT: u32 = 30;
pub const TILE_ROW_SET_MAPPING_1_row_set_mapping_15_MASK: u32 = 3221225472;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_0_ADDR32: u32 = 22;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_0_SHAMT: u32 = 0;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_0_MASK: u32 = 3;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_1_ADDR32: u32 = 22;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_1_SHAMT: u32 = 2;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_1_MASK: u32 = 12;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_2_ADDR32: u32 = 22;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_2_SHAMT: u32 = 4;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_2_MASK: u32 = 48;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_3_ADDR32: u32 = 22;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_3_SHAMT: u32 = 6;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_3_MASK: u32 = 192;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_4_ADDR32: u32 = 22;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_4_SHAMT: u32 = 8;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_4_MASK: u32 = 768;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_5_ADDR32: u32 = 22;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_5_SHAMT: u32 = 10;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_5_MASK: u32 = 3072;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_6_ADDR32: u32 = 22;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_6_SHAMT: u32 = 12;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_6_MASK: u32 = 12288;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_7_ADDR32: u32 = 22;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_7_SHAMT: u32 = 14;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_7_MASK: u32 = 49152;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_8_ADDR32: u32 = 22;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_8_SHAMT: u32 = 16;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_8_MASK: u32 = 196608;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_9_ADDR32: u32 = 22;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_9_SHAMT: u32 = 18;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_9_MASK: u32 = 786432;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_10_ADDR32: u32 = 22;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_10_SHAMT: u32 = 20;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_10_MASK: u32 = 3145728;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_11_ADDR32: u32 = 22;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_11_SHAMT: u32 = 22;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_11_MASK: u32 = 12582912;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_12_ADDR32: u32 = 22;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_12_SHAMT: u32 = 24;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_12_MASK: u32 = 50331648;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_13_ADDR32: u32 = 22;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_13_SHAMT: u32 = 26;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_13_MASK: u32 = 201326592;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_14_ADDR32: u32 = 22;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_14_SHAMT: u32 = 28;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_14_MASK: u32 = 805306368;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_15_ADDR32: u32 = 22;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_15_SHAMT: u32 = 30;
pub const TILE_ROW_SET_MAPPING_2_row_set_mapping_15_MASK: u32 = 3221225472;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_0_ADDR32: u32 = 23;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_0_SHAMT: u32 = 0;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_0_MASK: u32 = 3;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_1_ADDR32: u32 = 23;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_1_SHAMT: u32 = 2;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_1_MASK: u32 = 12;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_2_ADDR32: u32 = 23;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_2_SHAMT: u32 = 4;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_2_MASK: u32 = 48;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_3_ADDR32: u32 = 23;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_3_SHAMT: u32 = 6;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_3_MASK: u32 = 192;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_4_ADDR32: u32 = 23;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_4_SHAMT: u32 = 8;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_4_MASK: u32 = 768;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_5_ADDR32: u32 = 23;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_5_SHAMT: u32 = 10;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_5_MASK: u32 = 3072;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_6_ADDR32: u32 = 23;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_6_SHAMT: u32 = 12;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_6_MASK: u32 = 12288;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_7_ADDR32: u32 = 23;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_7_SHAMT: u32 = 14;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_7_MASK: u32 = 49152;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_8_ADDR32: u32 = 23;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_8_SHAMT: u32 = 16;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_8_MASK: u32 = 196608;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_9_ADDR32: u32 = 23;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_9_SHAMT: u32 = 18;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_9_MASK: u32 = 786432;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_10_ADDR32: u32 = 23;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_10_SHAMT: u32 = 20;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_10_MASK: u32 = 3145728;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_11_ADDR32: u32 = 23;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_11_SHAMT: u32 = 22;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_11_MASK: u32 = 12582912;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_12_ADDR32: u32 = 23;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_12_SHAMT: u32 = 24;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_12_MASK: u32 = 50331648;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_13_ADDR32: u32 = 23;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_13_SHAMT: u32 = 26;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_13_MASK: u32 = 201326592;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_14_ADDR32: u32 = 23;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_14_SHAMT: u32 = 28;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_14_MASK: u32 = 805306368;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_15_ADDR32: u32 = 23;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_15_SHAMT: u32 = 30;
pub const TILE_ROW_SET_MAPPING_3_row_set_mapping_15_MASK: u32 = 3221225472;
pub const PCK_EDGE_OFFSET_SEC0_mask_ADDR32: u32 = 24;
pub const PCK_EDGE_OFFSET_SEC0_mask_SHAMT: u32 = 0;
pub const PCK_EDGE_OFFSET_SEC0_mask_MASK: u32 = 65535;
pub const PCK_EDGE_MODE_mode_ADDR32: u32 = 24;
pub const PCK_EDGE_MODE_mode_SHAMT: u32 = 16;
pub const PCK_EDGE_MODE_mode_MASK: u32 = 65536;
pub const PCK_EDGE_TILE_ROW_SET_SELECT_select_ADDR32: u32 = 24;
pub const PCK_EDGE_TILE_ROW_SET_SELECT_select_SHAMT: u32 = 17;
pub const PCK_EDGE_TILE_ROW_SET_SELECT_select_MASK: u32 = 33423360;
pub const PCK_EDGE_OFFSET_SEC1_mask_ADDR32: u32 = 25;
pub const PCK_EDGE_OFFSET_SEC1_mask_SHAMT: u32 = 0;
pub const PCK_EDGE_OFFSET_SEC1_mask_MASK: u32 = 65535;
pub const PCK_EDGE_OFFSET_SEC2_mask_ADDR32: u32 = 26;
pub const PCK_EDGE_OFFSET_SEC2_mask_SHAMT: u32 = 0;
pub const PCK_EDGE_OFFSET_SEC2_mask_MASK: u32 = 65535;
pub const PCK_EDGE_OFFSET_SEC3_mask_ADDR32: u32 = 27;
pub const PCK_EDGE_OFFSET_SEC3_mask_SHAMT: u32 = 0;
pub const PCK_EDGE_OFFSET_SEC3_mask_MASK: u32 = 65535;
pub const PACK_COUNTERS_SEC0_pack_per_xy_plane_ADDR32: u32 = 28;
pub const PACK_COUNTERS_SEC0_pack_per_xy_plane_SHAMT: u32 = 0;
pub const PACK_COUNTERS_SEC0_pack_per_xy_plane_MASK: u32 = 255;
pub const PACK_COUNTERS_SEC0_pack_reads_per_xy_plane_ADDR32: u32 = 28;
pub const PACK_COUNTERS_SEC0_pack_reads_per_xy_plane_SHAMT: u32 = 8;
pub const PACK_COUNTERS_SEC0_pack_reads_per_xy_plane_MASK: u32 = 65280;
pub const PACK_COUNTERS_SEC0_pack_xys_per_tile_ADDR32: u32 = 28;
pub const PACK_COUNTERS_SEC0_pack_xys_per_tile_SHAMT: u32 = 16;
pub const PACK_COUNTERS_SEC0_pack_xys_per_tile_MASK: u32 = 8323072;
pub const PACK_COUNTERS_SEC0_pack_yz_transposed_ADDR32: u32 = 28;
pub const PACK_COUNTERS_SEC0_pack_yz_transposed_SHAMT: u32 = 23;
pub const PACK_COUNTERS_SEC0_pack_yz_transposed_MASK: u32 = 8388608;
pub const PACK_COUNTERS_SEC0_auto_ctxt_inc_xys_cnt_ADDR32: u32 = 28;
pub const PACK_COUNTERS_SEC0_auto_ctxt_inc_xys_cnt_SHAMT: u32 = 24;
pub const PACK_COUNTERS_SEC0_auto_ctxt_inc_xys_cnt_MASK: u32 = 4278190080;
pub const PACK_COUNTERS_SEC1_pack_per_xy_plane_ADDR32: u32 = 29;
pub const PACK_COUNTERS_SEC1_pack_per_xy_plane_SHAMT: u32 = 0;
pub const PACK_COUNTERS_SEC1_pack_per_xy_plane_MASK: u32 = 255;
pub const PACK_COUNTERS_SEC1_pack_reads_per_xy_plane_ADDR32: u32 = 29;
pub const PACK_COUNTERS_SEC1_pack_reads_per_xy_plane_SHAMT: u32 = 8;
pub const PACK_COUNTERS_SEC1_pack_reads_per_xy_plane_MASK: u32 = 65280;
pub const PACK_COUNTERS_SEC1_pack_xys_per_tile_ADDR32: u32 = 29;
pub const PACK_COUNTERS_SEC1_pack_xys_per_tile_SHAMT: u32 = 16;
pub const PACK_COUNTERS_SEC1_pack_xys_per_tile_MASK: u32 = 8323072;
pub const PACK_COUNTERS_SEC1_pack_yz_transposed_ADDR32: u32 = 29;
pub const PACK_COUNTERS_SEC1_pack_yz_transposed_SHAMT: u32 = 23;
pub const PACK_COUNTERS_SEC1_pack_yz_transposed_MASK: u32 = 8388608;
pub const PACK_COUNTERS_SEC1_auto_ctxt_inc_xys_cnt_ADDR32: u32 = 29;
pub const PACK_COUNTERS_SEC1_auto_ctxt_inc_xys_cnt_SHAMT: u32 = 24;
pub const PACK_COUNTERS_SEC1_auto_ctxt_inc_xys_cnt_MASK: u32 = 4278190080;
pub const PACK_COUNTERS_SEC2_pack_per_xy_plane_ADDR32: u32 = 30;
pub const PACK_COUNTERS_SEC2_pack_per_xy_plane_SHAMT: u32 = 0;
pub const PACK_COUNTERS_SEC2_pack_per_xy_plane_MASK: u32 = 255;
pub const PACK_COUNTERS_SEC2_pack_reads_per_xy_plane_ADDR32: u32 = 30;
pub const PACK_COUNTERS_SEC2_pack_reads_per_xy_plane_SHAMT: u32 = 8;
pub const PACK_COUNTERS_SEC2_pack_reads_per_xy_plane_MASK: u32 = 65280;
pub const PACK_COUNTERS_SEC2_pack_xys_per_tile_ADDR32: u32 = 30;
pub const PACK_COUNTERS_SEC2_pack_xys_per_tile_SHAMT: u32 = 16;
pub const PACK_COUNTERS_SEC2_pack_xys_per_tile_MASK: u32 = 8323072;
pub const PACK_COUNTERS_SEC2_pack_yz_transposed_ADDR32: u32 = 30;
pub const PACK_COUNTERS_SEC2_pack_yz_transposed_SHAMT: u32 = 23;
pub const PACK_COUNTERS_SEC2_pack_yz_transposed_MASK: u32 = 8388608;
pub const PACK_COUNTERS_SEC2_auto_ctxt_inc_xys_cnt_ADDR32: u32 = 30;
pub const PACK_COUNTERS_SEC2_auto_ctxt_inc_xys_cnt_SHAMT: u32 = 24;
pub const PACK_COUNTERS_SEC2_auto_ctxt_inc_xys_cnt_MASK: u32 = 4278190080;
pub const PACK_COUNTERS_SEC3_pack_per_xy_plane_ADDR32: u32 = 31;
pub const PACK_COUNTERS_SEC3_pack_per_xy_plane_SHAMT: u32 = 0;
pub const PACK_COUNTERS_SEC3_pack_per_xy_plane_MASK: u32 = 255;
pub const PACK_COUNTERS_SEC3_pack_reads_per_xy_plane_ADDR32: u32 = 31;
pub const PACK_COUNTERS_SEC3_pack_reads_per_xy_plane_SHAMT: u32 = 8;
pub const PACK_COUNTERS_SEC3_pack_reads_per_xy_plane_MASK: u32 = 65280;
pub const PACK_COUNTERS_SEC3_pack_xys_per_tile_ADDR32: u32 = 31;
pub const PACK_COUNTERS_SEC3_pack_xys_per_tile_SHAMT: u32 = 16;
pub const PACK_COUNTERS_SEC3_pack_xys_per_tile_MASK: u32 = 8323072;
pub const PACK_COUNTERS_SEC3_pack_yz_transposed_ADDR32: u32 = 31;
pub const PACK_COUNTERS_SEC3_pack_yz_transposed_SHAMT: u32 = 23;
pub const PACK_COUNTERS_SEC3_pack_yz_transposed_MASK: u32 = 8388608;
pub const PACK_COUNTERS_SEC3_auto_ctxt_inc_xys_cnt_ADDR32: u32 = 31;
pub const PACK_COUNTERS_SEC3_auto_ctxt_inc_xys_cnt_SHAMT: u32 = 24;
pub const PACK_COUNTERS_SEC3_auto_ctxt_inc_xys_cnt_MASK: u32 = 4278190080;
pub const PACK_CONCAT_MASK_SEC0_pack_concat_mask_ADDR32: u32 = 32;
pub const PACK_CONCAT_MASK_SEC0_pack_concat_mask_SHAMT: u32 = 0;
pub const PACK_CONCAT_MASK_SEC0_pack_concat_mask_MASK: u32 = 65535;
pub const PACK_CONCAT_MASK_SEC1_pack_concat_mask_ADDR32: u32 = 33;
pub const PACK_CONCAT_MASK_SEC1_pack_concat_mask_SHAMT: u32 = 0;
pub const PACK_CONCAT_MASK_SEC1_pack_concat_mask_MASK: u32 = 65535;
pub const PACK_CONCAT_MASK_SEC2_pack_concat_mask_ADDR32: u32 = 34;
pub const PACK_CONCAT_MASK_SEC2_pack_concat_mask_SHAMT: u32 = 0;
pub const PACK_CONCAT_MASK_SEC2_pack_concat_mask_MASK: u32 = 65535;
pub const PACK_CONCAT_MASK_SEC3_pack_concat_mask_ADDR32: u32 = 35;
pub const PACK_CONCAT_MASK_SEC3_pack_concat_mask_SHAMT: u32 = 0;
pub const PACK_CONCAT_MASK_SEC3_pack_concat_mask_MASK: u32 = 65535;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_0_ADDR32: u32 = 36;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_0_SHAMT: u32 = 0;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_0_MASK: u32 = 3;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_1_ADDR32: u32 = 36;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_1_SHAMT: u32 = 2;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_1_MASK: u32 = 12;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_2_ADDR32: u32 = 36;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_2_SHAMT: u32 = 4;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_2_MASK: u32 = 48;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_3_ADDR32: u32 = 36;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_3_SHAMT: u32 = 6;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_3_MASK: u32 = 192;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_4_ADDR32: u32 = 36;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_4_SHAMT: u32 = 8;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_4_MASK: u32 = 768;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_5_ADDR32: u32 = 36;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_5_SHAMT: u32 = 10;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_5_MASK: u32 = 3072;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_6_ADDR32: u32 = 36;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_6_SHAMT: u32 = 12;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_6_MASK: u32 = 12288;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_7_ADDR32: u32 = 36;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_7_SHAMT: u32 = 14;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_7_MASK: u32 = 49152;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_8_ADDR32: u32 = 36;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_8_SHAMT: u32 = 16;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_8_MASK: u32 = 196608;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_9_ADDR32: u32 = 36;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_9_SHAMT: u32 = 18;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_9_MASK: u32 = 786432;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_10_ADDR32: u32 = 36;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_10_SHAMT: u32 = 20;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_10_MASK: u32 = 3145728;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_11_ADDR32: u32 = 36;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_11_SHAMT: u32 = 22;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_11_MASK: u32 = 12582912;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_12_ADDR32: u32 = 36;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_12_SHAMT: u32 = 24;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_12_MASK: u32 = 50331648;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_13_ADDR32: u32 = 36;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_13_SHAMT: u32 = 26;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_13_MASK: u32 = 201326592;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_14_ADDR32: u32 = 36;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_14_SHAMT: u32 = 28;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_14_MASK: u32 = 805306368;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_15_ADDR32: u32 = 36;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_15_SHAMT: u32 = 30;
pub const TILE_FACE_SET_MAPPING_0_face_set_mapping_15_MASK: u32 = 3221225472;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_0_ADDR32: u32 = 37;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_0_SHAMT: u32 = 0;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_0_MASK: u32 = 3;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_1_ADDR32: u32 = 37;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_1_SHAMT: u32 = 2;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_1_MASK: u32 = 12;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_2_ADDR32: u32 = 37;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_2_SHAMT: u32 = 4;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_2_MASK: u32 = 48;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_3_ADDR32: u32 = 37;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_3_SHAMT: u32 = 6;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_3_MASK: u32 = 192;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_4_ADDR32: u32 = 37;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_4_SHAMT: u32 = 8;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_4_MASK: u32 = 768;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_5_ADDR32: u32 = 37;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_5_SHAMT: u32 = 10;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_5_MASK: u32 = 3072;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_6_ADDR32: u32 = 37;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_6_SHAMT: u32 = 12;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_6_MASK: u32 = 12288;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_7_ADDR32: u32 = 37;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_7_SHAMT: u32 = 14;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_7_MASK: u32 = 49152;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_8_ADDR32: u32 = 37;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_8_SHAMT: u32 = 16;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_8_MASK: u32 = 196608;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_9_ADDR32: u32 = 37;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_9_SHAMT: u32 = 18;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_9_MASK: u32 = 786432;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_10_ADDR32: u32 = 37;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_10_SHAMT: u32 = 20;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_10_MASK: u32 = 3145728;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_11_ADDR32: u32 = 37;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_11_SHAMT: u32 = 22;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_11_MASK: u32 = 12582912;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_12_ADDR32: u32 = 37;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_12_SHAMT: u32 = 24;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_12_MASK: u32 = 50331648;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_13_ADDR32: u32 = 37;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_13_SHAMT: u32 = 26;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_13_MASK: u32 = 201326592;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_14_ADDR32: u32 = 37;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_14_SHAMT: u32 = 28;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_14_MASK: u32 = 805306368;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_15_ADDR32: u32 = 37;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_15_SHAMT: u32 = 30;
pub const TILE_FACE_SET_MAPPING_1_face_set_mapping_15_MASK: u32 = 3221225472;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_0_ADDR32: u32 = 38;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_0_SHAMT: u32 = 0;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_0_MASK: u32 = 3;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_1_ADDR32: u32 = 38;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_1_SHAMT: u32 = 2;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_1_MASK: u32 = 12;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_2_ADDR32: u32 = 38;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_2_SHAMT: u32 = 4;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_2_MASK: u32 = 48;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_3_ADDR32: u32 = 38;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_3_SHAMT: u32 = 6;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_3_MASK: u32 = 192;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_4_ADDR32: u32 = 38;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_4_SHAMT: u32 = 8;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_4_MASK: u32 = 768;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_5_ADDR32: u32 = 38;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_5_SHAMT: u32 = 10;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_5_MASK: u32 = 3072;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_6_ADDR32: u32 = 38;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_6_SHAMT: u32 = 12;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_6_MASK: u32 = 12288;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_7_ADDR32: u32 = 38;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_7_SHAMT: u32 = 14;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_7_MASK: u32 = 49152;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_8_ADDR32: u32 = 38;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_8_SHAMT: u32 = 16;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_8_MASK: u32 = 196608;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_9_ADDR32: u32 = 38;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_9_SHAMT: u32 = 18;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_9_MASK: u32 = 786432;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_10_ADDR32: u32 = 38;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_10_SHAMT: u32 = 20;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_10_MASK: u32 = 3145728;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_11_ADDR32: u32 = 38;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_11_SHAMT: u32 = 22;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_11_MASK: u32 = 12582912;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_12_ADDR32: u32 = 38;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_12_SHAMT: u32 = 24;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_12_MASK: u32 = 50331648;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_13_ADDR32: u32 = 38;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_13_SHAMT: u32 = 26;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_13_MASK: u32 = 201326592;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_14_ADDR32: u32 = 38;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_14_SHAMT: u32 = 28;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_14_MASK: u32 = 805306368;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_15_ADDR32: u32 = 38;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_15_SHAMT: u32 = 30;
pub const TILE_FACE_SET_MAPPING_2_face_set_mapping_15_MASK: u32 = 3221225472;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_0_ADDR32: u32 = 39;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_0_SHAMT: u32 = 0;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_0_MASK: u32 = 3;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_1_ADDR32: u32 = 39;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_1_SHAMT: u32 = 2;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_1_MASK: u32 = 12;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_2_ADDR32: u32 = 39;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_2_SHAMT: u32 = 4;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_2_MASK: u32 = 48;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_3_ADDR32: u32 = 39;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_3_SHAMT: u32 = 6;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_3_MASK: u32 = 192;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_4_ADDR32: u32 = 39;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_4_SHAMT: u32 = 8;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_4_MASK: u32 = 768;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_5_ADDR32: u32 = 39;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_5_SHAMT: u32 = 10;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_5_MASK: u32 = 3072;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_6_ADDR32: u32 = 39;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_6_SHAMT: u32 = 12;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_6_MASK: u32 = 12288;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_7_ADDR32: u32 = 39;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_7_SHAMT: u32 = 14;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_7_MASK: u32 = 49152;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_8_ADDR32: u32 = 39;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_8_SHAMT: u32 = 16;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_8_MASK: u32 = 196608;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_9_ADDR32: u32 = 39;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_9_SHAMT: u32 = 18;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_9_MASK: u32 = 786432;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_10_ADDR32: u32 = 39;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_10_SHAMT: u32 = 20;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_10_MASK: u32 = 3145728;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_11_ADDR32: u32 = 39;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_11_SHAMT: u32 = 22;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_11_MASK: u32 = 12582912;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_12_ADDR32: u32 = 39;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_12_SHAMT: u32 = 24;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_12_MASK: u32 = 50331648;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_13_ADDR32: u32 = 39;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_13_SHAMT: u32 = 26;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_13_MASK: u32 = 201326592;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_14_ADDR32: u32 = 39;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_14_SHAMT: u32 = 28;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_14_MASK: u32 = 805306368;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_15_ADDR32: u32 = 39;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_15_SHAMT: u32 = 30;
pub const TILE_FACE_SET_MAPPING_3_face_set_mapping_15_MASK: u32 = 3221225472;
pub const PACK_GLOBAL_CFG_CTL_pack_disable_fast_tile_end_drain_ADDR32: u32 = 40;
pub const PACK_GLOBAL_CFG_CTL_pack_disable_fast_tile_end_drain_SHAMT: u32 = 0;
pub const PACK_GLOBAL_CFG_CTL_pack_disable_fast_tile_end_drain_MASK: u32 = 1;
pub const UNPACK0_CFGREG_BASE_ADDR32: u32 = 44;
pub const UNP0_ADDR_CTRL_XY_REG_0_Xstride_ADDR32: u32 = 44;
pub const UNP0_ADDR_CTRL_XY_REG_0_Xstride_SHAMT: u32 = 0;
pub const UNP0_ADDR_CTRL_XY_REG_0_Xstride_MASK: u32 = 65535;
pub const UNP0_ADDR_CTRL_XY_REG_0_Ystride_ADDR32: u32 = 44;
pub const UNP0_ADDR_CTRL_XY_REG_0_Ystride_SHAMT: u32 = 16;
pub const UNP0_ADDR_CTRL_XY_REG_0_Ystride_MASK: u32 = 4294901760;
pub const UNP0_ADDR_CTRL_ZW_REG_0_Zstride_ADDR32: u32 = 45;
pub const UNP0_ADDR_CTRL_ZW_REG_0_Zstride_SHAMT: u32 = 0;
pub const UNP0_ADDR_CTRL_ZW_REG_0_Zstride_MASK: u32 = 65535;
pub const UNP0_ADDR_CTRL_ZW_REG_0_Wstride_ADDR32: u32 = 45;
pub const UNP0_ADDR_CTRL_ZW_REG_0_Wstride_SHAMT: u32 = 16;
pub const UNP0_ADDR_CTRL_ZW_REG_0_Wstride_MASK: u32 = 4294901760;
pub const UNP1_ADDR_CTRL_XY_REG_0_Xstride_ADDR32: u32 = 46;
pub const UNP1_ADDR_CTRL_XY_REG_0_Xstride_SHAMT: u32 = 0;
pub const UNP1_ADDR_CTRL_XY_REG_0_Xstride_MASK: u32 = 65535;
pub const UNP1_ADDR_CTRL_XY_REG_0_Ystride_ADDR32: u32 = 46;
pub const UNP1_ADDR_CTRL_XY_REG_0_Ystride_SHAMT: u32 = 16;
pub const UNP1_ADDR_CTRL_XY_REG_0_Ystride_MASK: u32 = 4294901760;
pub const UNP1_ADDR_CTRL_ZW_REG_0_Zstride_ADDR32: u32 = 47;
pub const UNP1_ADDR_CTRL_ZW_REG_0_Zstride_SHAMT: u32 = 0;
pub const UNP1_ADDR_CTRL_ZW_REG_0_Zstride_MASK: u32 = 65535;
pub const UNP1_ADDR_CTRL_ZW_REG_0_Wstride_ADDR32: u32 = 47;
pub const UNP1_ADDR_CTRL_ZW_REG_0_Wstride_SHAMT: u32 = 16;
pub const UNP1_ADDR_CTRL_ZW_REG_0_Wstride_MASK: u32 = 4294901760;
pub const UNP0_ADDR_BASE_REG_0_Base_ADDR32: u32 = 48;
pub const UNP0_ADDR_BASE_REG_0_Base_SHAMT: u32 = 0;
pub const UNP0_ADDR_BASE_REG_0_Base_MASK: u32 = 262143;
pub const UNP0_ADDR_BASE_REG_1_Base_ADDR32: u32 = 49;
pub const UNP0_ADDR_BASE_REG_1_Base_SHAMT: u32 = 0;
pub const UNP0_ADDR_BASE_REG_1_Base_MASK: u32 = 262143;
pub const UNP0_FORCED_SHARED_EXP_shared_exp_ADDR32: u32 = 50;
pub const UNP0_FORCED_SHARED_EXP_shared_exp_SHAMT: u32 = 0;
pub const UNP0_FORCED_SHARED_EXP_shared_exp_MASK: u32 = 255;
pub const UNP0_ADD_DEST_ADDR_CNTR_add_dest_addr_cntr_ADDR32: u32 = 50;
pub const UNP0_ADD_DEST_ADDR_CNTR_add_dest_addr_cntr_SHAMT: u32 = 8;
pub const UNP0_ADD_DEST_ADDR_CNTR_add_dest_addr_cntr_MASK: u32 = 256;
pub const UNP0_BLOBS_Y_START_CNTX_01_blobs_y_start_ADDR32: u32 = 51;
pub const UNP0_BLOBS_Y_START_CNTX_01_blobs_y_start_SHAMT: u32 = 0;
pub const UNP0_BLOBS_Y_START_CNTX_01_blobs_y_start_MASK: u32 = 4294967295;
pub const UNP0_BLOBS_Y_START_CNTX_23_blobs_y_start_ADDR32: u32 = 52;
pub const UNP0_BLOBS_Y_START_CNTX_23_blobs_y_start_SHAMT: u32 = 0;
pub const UNP0_BLOBS_Y_START_CNTX_23_blobs_y_start_MASK: u32 = 4294967295;
pub const UNP0_NOP_REG_CLR_VAL_nop_reg_clr_val_ADDR32: u32 = 53;
pub const UNP0_NOP_REG_CLR_VAL_nop_reg_clr_val_SHAMT: u32 = 0;
pub const UNP0_NOP_REG_CLR_VAL_nop_reg_clr_val_MASK: u32 = 4294967295;
pub const UNPACK1_CFGREG_BASE_ADDR32: u32 = 56;
pub const UNP0_ADDR_CTRL_XY_REG_1_Xstride_ADDR32: u32 = 56;
pub const UNP0_ADDR_CTRL_XY_REG_1_Xstride_SHAMT: u32 = 0;
pub const UNP0_ADDR_CTRL_XY_REG_1_Xstride_MASK: u32 = 65535;
pub const UNP0_ADDR_CTRL_XY_REG_1_Ystride_ADDR32: u32 = 56;
pub const UNP0_ADDR_CTRL_XY_REG_1_Ystride_SHAMT: u32 = 16;
pub const UNP0_ADDR_CTRL_XY_REG_1_Ystride_MASK: u32 = 4294901760;
pub const UNP0_ADDR_CTRL_ZW_REG_1_Zstride_ADDR32: u32 = 57;
pub const UNP0_ADDR_CTRL_ZW_REG_1_Zstride_SHAMT: u32 = 0;
pub const UNP0_ADDR_CTRL_ZW_REG_1_Zstride_MASK: u32 = 65535;
pub const UNP0_ADDR_CTRL_ZW_REG_1_Wstride_ADDR32: u32 = 57;
pub const UNP0_ADDR_CTRL_ZW_REG_1_Wstride_SHAMT: u32 = 16;
pub const UNP0_ADDR_CTRL_ZW_REG_1_Wstride_MASK: u32 = 4294901760;
pub const UNP1_ADDR_CTRL_XY_REG_1_Xstride_ADDR32: u32 = 58;
pub const UNP1_ADDR_CTRL_XY_REG_1_Xstride_SHAMT: u32 = 0;
pub const UNP1_ADDR_CTRL_XY_REG_1_Xstride_MASK: u32 = 65535;
pub const UNP1_ADDR_CTRL_XY_REG_1_Ystride_ADDR32: u32 = 58;
pub const UNP1_ADDR_CTRL_XY_REG_1_Ystride_SHAMT: u32 = 16;
pub const UNP1_ADDR_CTRL_XY_REG_1_Ystride_MASK: u32 = 4294901760;
pub const UNP1_ADDR_CTRL_ZW_REG_1_Zstride_ADDR32: u32 = 59;
pub const UNP1_ADDR_CTRL_ZW_REG_1_Zstride_SHAMT: u32 = 0;
pub const UNP1_ADDR_CTRL_ZW_REG_1_Zstride_MASK: u32 = 65535;
pub const UNP1_ADDR_CTRL_ZW_REG_1_Wstride_ADDR32: u32 = 59;
pub const UNP1_ADDR_CTRL_ZW_REG_1_Wstride_SHAMT: u32 = 16;
pub const UNP1_ADDR_CTRL_ZW_REG_1_Wstride_MASK: u32 = 4294901760;
pub const UNP1_ADDR_BASE_REG_0_Base_ADDR32: u32 = 60;
pub const UNP1_ADDR_BASE_REG_0_Base_SHAMT: u32 = 0;
pub const UNP1_ADDR_BASE_REG_0_Base_MASK: u32 = 262143;
pub const UNP1_ADDR_BASE_REG_1_Base_ADDR32: u32 = 61;
pub const UNP1_ADDR_BASE_REG_1_Base_SHAMT: u32 = 0;
pub const UNP1_ADDR_BASE_REG_1_Base_MASK: u32 = 262143;
pub const UNP1_FORCED_SHARED_EXP_shared_exp_ADDR32: u32 = 62;
pub const UNP1_FORCED_SHARED_EXP_shared_exp_SHAMT: u32 = 0;
pub const UNP1_FORCED_SHARED_EXP_shared_exp_MASK: u32 = 255;
pub const UNP1_ADD_DEST_ADDR_CNTR_add_dest_addr_cntr_ADDR32: u32 = 62;
pub const UNP1_ADD_DEST_ADDR_CNTR_add_dest_addr_cntr_SHAMT: u32 = 8;
pub const UNP1_ADD_DEST_ADDR_CNTR_add_dest_addr_cntr_MASK: u32 = 256;
pub const UNP1_NOP_REG_CLR_VAL_nop_reg_clr_val_ADDR32: u32 = 63;
pub const UNP1_NOP_REG_CLR_VAL_nop_reg_clr_val_SHAMT: u32 = 0;
pub const UNP1_NOP_REG_CLR_VAL_nop_reg_clr_val_MASK: u32 = 4294967295;
pub const THCON_CFGREG_BASE_ADDR32: u32 = 64;
pub const THCON_SEC0_REG0_TileDescriptor_ADDR32: u32 = 64;
pub const THCON_SEC0_REG0_TileDescriptor_SHAMT: u32 = 0;
pub const THCON_SEC0_REG1_Row_start_section_size_ADDR32: u32 = 68;
pub const THCON_SEC0_REG1_Row_start_section_size_SHAMT: u32 = 0;
pub const THCON_SEC0_REG1_Row_start_section_size_MASK: u32 = 65535;
pub const THCON_SEC0_REG1_Exp_section_size_ADDR32: u32 = 68;
pub const THCON_SEC0_REG1_Exp_section_size_SHAMT: u32 = 16;
pub const THCON_SEC0_REG1_Exp_section_size_MASK: u32 = 4294901760;
pub const THCON_SEC0_REG1_L1_Dest_addr_ADDR32: u32 = 69;
pub const THCON_SEC0_REG1_L1_Dest_addr_SHAMT: u32 = 0;
pub const THCON_SEC0_REG1_L1_Dest_addr_MASK: u32 = 4294967295;
pub const THCON_SEC0_REG1_Disable_zero_compress_ADDR32: u32 = 70;
pub const THCON_SEC0_REG1_Disable_zero_compress_SHAMT: u32 = 0;
pub const THCON_SEC0_REG1_Disable_zero_compress_MASK: u32 = 1;
pub const THCON_SEC0_REG1_Add_l1_dest_addr_offset_ADDR32: u32 = 70;
pub const THCON_SEC0_REG1_Add_l1_dest_addr_offset_SHAMT: u32 = 1;
pub const THCON_SEC0_REG1_Add_l1_dest_addr_offset_MASK: u32 = 2;
pub const THCON_SEC0_REG1_Disable_pack_zero_flags_ADDR32: u32 = 70;
pub const THCON_SEC0_REG1_Disable_pack_zero_flags_SHAMT: u32 = 2;
pub const THCON_SEC0_REG1_Disable_pack_zero_flags_MASK: u32 = 4;
pub const THCON_SEC0_REG1_ovrd_default_throttle_mode_ADDR32: u32 = 70;
pub const THCON_SEC0_REG1_ovrd_default_throttle_mode_SHAMT: u32 = 3;
pub const THCON_SEC0_REG1_ovrd_default_throttle_mode_MASK: u32 = 8;
pub const THCON_SEC0_REG1_Out_data_format_ADDR32: u32 = 70;
pub const THCON_SEC0_REG1_Out_data_format_SHAMT: u32 = 4;
pub const THCON_SEC0_REG1_Out_data_format_MASK: u32 = 240;
pub const THCON_SEC0_REG1_In_data_format_ADDR32: u32 = 70;
pub const THCON_SEC0_REG1_In_data_format_SHAMT: u32 = 8;
pub const THCON_SEC0_REG1_In_data_format_MASK: u32 = 3840;
pub const THCON_SEC0_REG1_Dis_shared_exp_assembler_ADDR32: u32 = 70;
pub const THCON_SEC0_REG1_Dis_shared_exp_assembler_SHAMT: u32 = 12;
pub const THCON_SEC0_REG1_Dis_shared_exp_assembler_MASK: u32 = 4096;
pub const THCON_SEC0_REG1_Auto_set_last_pacr_intf_sel_ADDR32: u32 = 70;
pub const THCON_SEC0_REG1_Auto_set_last_pacr_intf_sel_SHAMT: u32 = 13;
pub const THCON_SEC0_REG1_Auto_set_last_pacr_intf_sel_MASK: u32 = 8192;
pub const THCON_SEC0_REG1_Enable_out_fifo_ADDR32: u32 = 70;
pub const THCON_SEC0_REG1_Enable_out_fifo_SHAMT: u32 = 14;
pub const THCON_SEC0_REG1_Enable_out_fifo_MASK: u32 = 16384;
pub const THCON_SEC0_REG1_Sub_l1_tile_header_size_ADDR32: u32 = 70;
pub const THCON_SEC0_REG1_Sub_l1_tile_header_size_SHAMT: u32 = 15;
pub const THCON_SEC0_REG1_Sub_l1_tile_header_size_MASK: u32 = 32768;
pub const THCON_SEC0_REG1_Source_interface_selection_ADDR32: u32 = 70;
pub const THCON_SEC0_REG1_Source_interface_selection_SHAMT: u32 = 16;
pub const THCON_SEC0_REG1_Source_interface_selection_MASK: u32 = 65536;
pub const THCON_SEC0_REG1_pack_start_intf_pos_ADDR32: u32 = 70;
pub const THCON_SEC0_REG1_pack_start_intf_pos_SHAMT: u32 = 17;
pub const THCON_SEC0_REG1_pack_start_intf_pos_MASK: u32 = 1966080;
pub const THCON_SEC0_REG1_All_pack_disable_zero_compress_ovrd_ADDR32: u32 = 70;
pub const THCON_SEC0_REG1_All_pack_disable_zero_compress_ovrd_SHAMT: u32 = 21;
pub const THCON_SEC0_REG1_All_pack_disable_zero_compress_ovrd_MASK: u32 = 2097152;
pub const THCON_SEC0_REG1_Add_tile_header_size_ADDR32: u32 = 70;
pub const THCON_SEC0_REG1_Add_tile_header_size_SHAMT: u32 = 22;
pub const THCON_SEC0_REG1_Add_tile_header_size_MASK: u32 = 4194304;
pub const THCON_SEC0_REG1_pack_dis_y_pos_start_offset_ADDR32: u32 = 70;
pub const THCON_SEC0_REG1_pack_dis_y_pos_start_offset_SHAMT: u32 = 23;
pub const THCON_SEC0_REG1_pack_dis_y_pos_start_offset_MASK: u32 = 8388608;
pub const THCON_SEC0_REG1_L1_source_addr_ADDR32: u32 = 70;
pub const THCON_SEC0_REG1_L1_source_addr_SHAMT: u32 = 24;
pub const THCON_SEC0_REG1_L1_source_addr_MASK: u32 = 4278190080;
pub const THCON_SEC0_REG1_Downsample_mask_ADDR32: u32 = 71;
pub const THCON_SEC0_REG1_Downsample_mask_SHAMT: u32 = 0;
pub const THCON_SEC0_REG1_Downsample_mask_MASK: u32 = 65535;
pub const THCON_SEC0_REG1_Downsample_rate_ADDR32: u32 = 71;
pub const THCON_SEC0_REG1_Downsample_rate_SHAMT: u32 = 16;
pub const THCON_SEC0_REG1_Downsample_rate_MASK: u32 = 458752;
pub const THCON_SEC0_REG1_Pack_L1_Acc_ADDR32: u32 = 71;
pub const THCON_SEC0_REG1_Pack_L1_Acc_SHAMT: u32 = 19;
pub const THCON_SEC0_REG1_Pack_L1_Acc_MASK: u32 = 524288;
pub const THCON_SEC0_REG1_Exp_threshold_en_ADDR32: u32 = 71;
pub const THCON_SEC0_REG1_Exp_threshold_en_SHAMT: u32 = 20;
pub const THCON_SEC0_REG1_Exp_threshold_en_MASK: u32 = 1048576;
pub const THCON_SEC0_REG1_Unp_LF8_4b_exp_ADDR32: u32 = 71;
pub const THCON_SEC0_REG1_Unp_LF8_4b_exp_SHAMT: u32 = 22;
pub const THCON_SEC0_REG1_Unp_LF8_4b_exp_MASK: u32 = 4194304;
pub const THCON_SEC0_REG1_Pac_LF8_4b_exp_ADDR32: u32 = 71;
pub const THCON_SEC0_REG1_Pac_LF8_4b_exp_SHAMT: u32 = 23;
pub const THCON_SEC0_REG1_Pac_LF8_4b_exp_MASK: u32 = 8388608;
pub const THCON_SEC0_REG1_Exp_threshold_ADDR32: u32 = 71;
pub const THCON_SEC0_REG1_Exp_threshold_SHAMT: u32 = 24;
pub const THCON_SEC0_REG1_Exp_threshold_MASK: u32 = 4278190080;
pub const THCON_SEC0_REG2_Out_data_format_ADDR32: u32 = 72;
pub const THCON_SEC0_REG2_Out_data_format_SHAMT: u32 = 0;
pub const THCON_SEC0_REG2_Out_data_format_MASK: u32 = 15;
pub const THCON_SEC0_REG2_Throttle_mode_ADDR32: u32 = 72;
pub const THCON_SEC0_REG2_Throttle_mode_SHAMT: u32 = 4;
pub const THCON_SEC0_REG2_Throttle_mode_MASK: u32 = 48;
pub const THCON_SEC0_REG2_Context_count_ADDR32: u32 = 72;
pub const THCON_SEC0_REG2_Context_count_SHAMT: u32 = 6;
pub const THCON_SEC0_REG2_Context_count_MASK: u32 = 192;
pub const THCON_SEC0_REG2_Haloize_mode_ADDR32: u32 = 72;
pub const THCON_SEC0_REG2_Haloize_mode_SHAMT: u32 = 8;
pub const THCON_SEC0_REG2_Haloize_mode_MASK: u32 = 256;
pub const THCON_SEC0_REG2_Tileize_mode_ADDR32: u32 = 72;
pub const THCON_SEC0_REG2_Tileize_mode_SHAMT: u32 = 9;
pub const THCON_SEC0_REG2_Tileize_mode_MASK: u32 = 512;
pub const THCON_SEC0_REG2_Unpack_Src_Reg_Set_Upd_ADDR32: u32 = 72;
pub const THCON_SEC0_REG2_Unpack_Src_Reg_Set_Upd_SHAMT: u32 = 10;
pub const THCON_SEC0_REG2_Unpack_Src_Reg_Set_Upd_MASK: u32 = 1024;
pub const THCON_SEC0_REG2_Unpack_If_Sel_ADDR32: u32 = 72;
pub const THCON_SEC0_REG2_Unpack_If_Sel_SHAMT: u32 = 11;
pub const THCON_SEC0_REG2_Unpack_If_Sel_MASK: u32 = 2048;
pub const THCON_SEC0_REG2_Upsample_rate_ADDR32: u32 = 72;
pub const THCON_SEC0_REG2_Upsample_rate_SHAMT: u32 = 12;
pub const THCON_SEC0_REG2_Upsample_rate_MASK: u32 = 12288;
pub const THCON_SEC0_REG2_Ovrd_data_format_ADDR32: u32 = 72;
pub const THCON_SEC0_REG2_Ovrd_data_format_SHAMT: u32 = 14;
pub const THCON_SEC0_REG2_Ovrd_data_format_MASK: u32 = 16384;
pub const THCON_SEC0_REG2_Upsample_and_interleave_ADDR32: u32 = 72;
pub const THCON_SEC0_REG2_Upsample_and_interleave_SHAMT: u32 = 15;
pub const THCON_SEC0_REG2_Upsample_and_interleave_MASK: u32 = 32768;
pub const THCON_SEC0_REG2_Shift_amount_cntx0_ADDR32: u32 = 72;
pub const THCON_SEC0_REG2_Shift_amount_cntx0_SHAMT: u32 = 16;
pub const THCON_SEC0_REG2_Shift_amount_cntx0_MASK: u32 = 983040;
pub const THCON_SEC0_REG2_Shift_amount_cntx1_ADDR32: u32 = 72;
pub const THCON_SEC0_REG2_Shift_amount_cntx1_SHAMT: u32 = 20;
pub const THCON_SEC0_REG2_Shift_amount_cntx1_MASK: u32 = 15728640;
pub const THCON_SEC0_REG2_Shift_amount_cntx2_ADDR32: u32 = 72;
pub const THCON_SEC0_REG2_Shift_amount_cntx2_SHAMT: u32 = 24;
pub const THCON_SEC0_REG2_Shift_amount_cntx2_MASK: u32 = 251658240;
pub const THCON_SEC0_REG2_Shift_amount_cntx3_ADDR32: u32 = 72;
pub const THCON_SEC0_REG2_Shift_amount_cntx3_SHAMT: u32 = 28;
pub const THCON_SEC0_REG2_Shift_amount_cntx3_MASK: u32 = 4026531840;
pub const THCON_SEC0_REG2_Disable_zero_compress_cntx0_ADDR32: u32 = 73;
pub const THCON_SEC0_REG2_Disable_zero_compress_cntx0_SHAMT: u32 = 0;
pub const THCON_SEC0_REG2_Disable_zero_compress_cntx0_MASK: u32 = 1;
pub const THCON_SEC0_REG2_Disable_zero_compress_cntx1_ADDR32: u32 = 73;
pub const THCON_SEC0_REG2_Disable_zero_compress_cntx1_SHAMT: u32 = 1;
pub const THCON_SEC0_REG2_Disable_zero_compress_cntx1_MASK: u32 = 2;
pub const THCON_SEC0_REG2_Disable_zero_compress_cntx2_ADDR32: u32 = 73;
pub const THCON_SEC0_REG2_Disable_zero_compress_cntx2_SHAMT: u32 = 2;
pub const THCON_SEC0_REG2_Disable_zero_compress_cntx2_MASK: u32 = 4;
pub const THCON_SEC0_REG2_Disable_zero_compress_cntx3_ADDR32: u32 = 73;
pub const THCON_SEC0_REG2_Disable_zero_compress_cntx3_SHAMT: u32 = 3;
pub const THCON_SEC0_REG2_Disable_zero_compress_cntx3_MASK: u32 = 8;
pub const THCON_SEC0_REG2_Unpack_if_sel_cntx0_ADDR32: u32 = 73;
pub const THCON_SEC0_REG2_Unpack_if_sel_cntx0_SHAMT: u32 = 4;
pub const THCON_SEC0_REG2_Unpack_if_sel_cntx0_MASK: u32 = 16;
pub const THCON_SEC0_REG2_Unpack_if_sel_cntx1_ADDR32: u32 = 73;
pub const THCON_SEC0_REG2_Unpack_if_sel_cntx1_SHAMT: u32 = 5;
pub const THCON_SEC0_REG2_Unpack_if_sel_cntx1_MASK: u32 = 32;
pub const THCON_SEC0_REG2_Unpack_if_sel_cntx2_ADDR32: u32 = 73;
pub const THCON_SEC0_REG2_Unpack_if_sel_cntx2_SHAMT: u32 = 6;
pub const THCON_SEC0_REG2_Unpack_if_sel_cntx2_MASK: u32 = 64;
pub const THCON_SEC0_REG2_Unpack_if_sel_cntx3_ADDR32: u32 = 73;
pub const THCON_SEC0_REG2_Unpack_if_sel_cntx3_SHAMT: u32 = 7;
pub const THCON_SEC0_REG2_Unpack_if_sel_cntx3_MASK: u32 = 128;
pub const THCON_SEC0_REG2_Force_shared_exp_ADDR32: u32 = 73;
pub const THCON_SEC0_REG2_Force_shared_exp_SHAMT: u32 = 8;
pub const THCON_SEC0_REG2_Force_shared_exp_MASK: u32 = 256;
pub const THCON_SEC0_REG2_Context_count_non_log2_ADDR32: u32 = 73;
pub const THCON_SEC0_REG2_Context_count_non_log2_SHAMT: u32 = 9;
pub const THCON_SEC0_REG2_Context_count_non_log2_MASK: u32 = 3584;
pub const THCON_SEC0_REG2_Context_count_non_log2_en_ADDR32: u32 = 73;
pub const THCON_SEC0_REG2_Context_count_non_log2_en_SHAMT: u32 = 12;
pub const THCON_SEC0_REG2_Context_count_non_log2_en_MASK: u32 = 4096;
pub const THCON_SEC0_REG2_Disable_zero_compress_cntx4_ADDR32: u32 = 73;
pub const THCON_SEC0_REG2_Disable_zero_compress_cntx4_SHAMT: u32 = 16;
pub const THCON_SEC0_REG2_Disable_zero_compress_cntx4_MASK: u32 = 65536;
pub const THCON_SEC0_REG2_Disable_zero_compress_cntx5_ADDR32: u32 = 73;
pub const THCON_SEC0_REG2_Disable_zero_compress_cntx5_SHAMT: u32 = 17;
pub const THCON_SEC0_REG2_Disable_zero_compress_cntx5_MASK: u32 = 131072;
pub const THCON_SEC0_REG2_Disable_zero_compress_cntx6_ADDR32: u32 = 73;
pub const THCON_SEC0_REG2_Disable_zero_compress_cntx6_SHAMT: u32 = 18;
pub const THCON_SEC0_REG2_Disable_zero_compress_cntx6_MASK: u32 = 262144;
pub const THCON_SEC0_REG2_Disable_zero_compress_cntx7_ADDR32: u32 = 73;
pub const THCON_SEC0_REG2_Disable_zero_compress_cntx7_SHAMT: u32 = 19;
pub const THCON_SEC0_REG2_Disable_zero_compress_cntx7_MASK: u32 = 524288;
pub const THCON_SEC0_REG2_Unpack_if_sel_cntx4_ADDR32: u32 = 73;
pub const THCON_SEC0_REG2_Unpack_if_sel_cntx4_SHAMT: u32 = 20;
pub const THCON_SEC0_REG2_Unpack_if_sel_cntx4_MASK: u32 = 1048576;
pub const THCON_SEC0_REG2_Unpack_if_sel_cntx5_ADDR32: u32 = 73;
pub const THCON_SEC0_REG2_Unpack_if_sel_cntx5_SHAMT: u32 = 21;
pub const THCON_SEC0_REG2_Unpack_if_sel_cntx5_MASK: u32 = 2097152;
pub const THCON_SEC0_REG2_Unpack_if_sel_cntx6_ADDR32: u32 = 73;
pub const THCON_SEC0_REG2_Unpack_if_sel_cntx6_SHAMT: u32 = 22;
pub const THCON_SEC0_REG2_Unpack_if_sel_cntx6_MASK: u32 = 4194304;
pub const THCON_SEC0_REG2_Unpack_if_sel_cntx7_ADDR32: u32 = 73;
pub const THCON_SEC0_REG2_Unpack_if_sel_cntx7_SHAMT: u32 = 23;
pub const THCON_SEC0_REG2_Unpack_if_sel_cntx7_MASK: u32 = 8388608;
pub const THCON_SEC0_REG2_Metadata_x_end_ADDR32: u32 = 73;
pub const THCON_SEC0_REG2_Metadata_x_end_SHAMT: u32 = 24;
pub const THCON_SEC0_REG2_Metadata_x_end_MASK: u32 = 4278190080;
pub const THCON_SEC0_REG2_Unpack_limit_address_ADDR32: u32 = 74;
pub const THCON_SEC0_REG2_Unpack_limit_address_SHAMT: u32 = 0;
pub const THCON_SEC0_REG2_Unpack_limit_address_MASK: u32 = 131071;
pub const THCON_SEC0_REG2_Unpack_fifo_size_ADDR32: u32 = 75;
pub const THCON_SEC0_REG2_Unpack_fifo_size_SHAMT: u32 = 0;
pub const THCON_SEC0_REG2_Unpack_fifo_size_MASK: u32 = 131071;
pub const THCON_SEC0_REG3_Base_address_ADDR32: u32 = 76;
pub const THCON_SEC0_REG3_Base_address_SHAMT: u32 = 0;
pub const THCON_SEC0_REG3_Base_address_MASK: u32 = 4294967295;
pub const THCON_SEC0_REG3_Base_cntx1_address_ADDR32: u32 = 77;
pub const THCON_SEC0_REG3_Base_cntx1_address_SHAMT: u32 = 0;
pub const THCON_SEC0_REG3_Base_cntx1_address_MASK: u32 = 4294967295;
pub const THCON_SEC0_REG3_Base_cntx2_address_ADDR32: u32 = 78;
pub const THCON_SEC0_REG3_Base_cntx2_address_SHAMT: u32 = 0;
pub const THCON_SEC0_REG3_Base_cntx2_address_MASK: u32 = 4294967295;
pub const THCON_SEC0_REG3_Base_cntx3_address_ADDR32: u32 = 79;
pub const THCON_SEC0_REG3_Base_cntx3_address_SHAMT: u32 = 0;
pub const THCON_SEC0_REG3_Base_cntx3_address_MASK: u32 = 4294967295;
pub const THCON_SEC0_REG4_Base_cntx4_address_ADDR32: u32 = 80;
pub const THCON_SEC0_REG4_Base_cntx4_address_SHAMT: u32 = 0;
pub const THCON_SEC0_REG4_Base_cntx4_address_MASK: u32 = 4294967295;
pub const THCON_SEC0_REG4_Base_cntx5_address_ADDR32: u32 = 81;
pub const THCON_SEC0_REG4_Base_cntx5_address_SHAMT: u32 = 0;
pub const THCON_SEC0_REG4_Base_cntx5_address_MASK: u32 = 4294967295;
pub const THCON_SEC0_REG4_Base_cntx6_address_ADDR32: u32 = 82;
pub const THCON_SEC0_REG4_Base_cntx6_address_SHAMT: u32 = 0;
pub const THCON_SEC0_REG4_Base_cntx6_address_MASK: u32 = 4294967295;
pub const THCON_SEC0_REG4_Base_cntx7_address_ADDR32: u32 = 83;
pub const THCON_SEC0_REG4_Base_cntx7_address_SHAMT: u32 = 0;
pub const THCON_SEC0_REG4_Base_cntx7_address_MASK: u32 = 4294967295;
pub const THCON_SEC0_REG5_Dest_cntx0_address_ADDR32: u32 = 84;
pub const THCON_SEC0_REG5_Dest_cntx0_address_SHAMT: u32 = 0;
pub const THCON_SEC0_REG5_Dest_cntx0_address_MASK: u32 = 65535;
pub const THCON_SEC0_REG5_Dest_cntx1_address_ADDR32: u32 = 84;
pub const THCON_SEC0_REG5_Dest_cntx1_address_SHAMT: u32 = 16;
pub const THCON_SEC0_REG5_Dest_cntx1_address_MASK: u32 = 4294901760;
pub const THCON_SEC0_REG5_Dest_cntx2_address_ADDR32: u32 = 85;
pub const THCON_SEC0_REG5_Dest_cntx2_address_SHAMT: u32 = 0;
pub const THCON_SEC0_REG5_Dest_cntx2_address_MASK: u32 = 65535;
pub const THCON_SEC0_REG5_Dest_cntx3_address_ADDR32: u32 = 85;
pub const THCON_SEC0_REG5_Dest_cntx3_address_SHAMT: u32 = 16;
pub const THCON_SEC0_REG5_Dest_cntx3_address_MASK: u32 = 4294901760;
pub const THCON_SEC0_REG5_Tile_x_dim_cntx0_ADDR32: u32 = 86;
pub const THCON_SEC0_REG5_Tile_x_dim_cntx0_SHAMT: u32 = 0;
pub const THCON_SEC0_REG5_Tile_x_dim_cntx0_MASK: u32 = 65535;
pub const THCON_SEC0_REG5_Tile_x_dim_cntx1_ADDR32: u32 = 86;
pub const THCON_SEC0_REG5_Tile_x_dim_cntx1_SHAMT: u32 = 16;
pub const THCON_SEC0_REG5_Tile_x_dim_cntx1_MASK: u32 = 4294901760;
pub const THCON_SEC0_REG5_Tile_x_dim_cntx2_ADDR32: u32 = 87;
pub const THCON_SEC0_REG5_Tile_x_dim_cntx2_SHAMT: u32 = 0;
pub const THCON_SEC0_REG5_Tile_x_dim_cntx2_MASK: u32 = 65535;
pub const THCON_SEC0_REG5_Tile_x_dim_cntx3_ADDR32: u32 = 87;
pub const THCON_SEC0_REG5_Tile_x_dim_cntx3_SHAMT: u32 = 16;
pub const THCON_SEC0_REG5_Tile_x_dim_cntx3_MASK: u32 = 4294901760;
pub const THCON_SEC0_REG6_Source_address_ADDR32: u32 = 88;
pub const THCON_SEC0_REG6_Source_address_SHAMT: u32 = 0;
pub const THCON_SEC0_REG6_Source_address_MASK: u32 = 4294967295;
pub const THCON_SEC0_REG6_Destination_address_ADDR32: u32 = 89;
pub const THCON_SEC0_REG6_Destination_address_SHAMT: u32 = 0;
pub const THCON_SEC0_REG6_Destination_address_MASK: u32 = 4294967295;
pub const THCON_SEC0_REG6_Buffer_size_ADDR32: u32 = 90;
pub const THCON_SEC0_REG6_Buffer_size_SHAMT: u32 = 0;
pub const THCON_SEC0_REG6_Buffer_size_MASK: u32 = 1073741823;
pub const THCON_SEC0_REG6_Transfer_direction_ADDR32: u32 = 90;
pub const THCON_SEC0_REG6_Transfer_direction_SHAMT: u32 = 30;
pub const THCON_SEC0_REG6_Transfer_direction_MASK: u32 = 3221225472;
pub const THCON_SEC0_REG6_Metadata_misc_ADDR32: u32 = 91;
pub const THCON_SEC0_REG6_Metadata_misc_SHAMT: u32 = 0;
pub const THCON_SEC0_REG6_Metadata_misc_MASK: u32 = 4294967295;
pub const THCON_SEC0_REG7_Offset_address_ADDR32: u32 = 92;
pub const THCON_SEC0_REG7_Offset_address_SHAMT: u32 = 0;
pub const THCON_SEC0_REG7_Offset_address_MASK: u32 = 65535;
pub const THCON_SEC0_REG7_Unpack_data_format_cntx0_ADDR32: u32 = 92;
pub const THCON_SEC0_REG7_Unpack_data_format_cntx0_SHAMT: u32 = 16;
pub const THCON_SEC0_REG7_Unpack_data_format_cntx0_MASK: u32 = 983040;
pub const THCON_SEC0_REG7_Unpack_out_data_format_cntx0_ADDR32: u32 = 92;
pub const THCON_SEC0_REG7_Unpack_out_data_format_cntx0_SHAMT: u32 = 20;
pub const THCON_SEC0_REG7_Unpack_out_data_format_cntx0_MASK: u32 = 15728640;
pub const THCON_SEC0_REG7_Unpack_data_format_cntx4_ADDR32: u32 = 92;
pub const THCON_SEC0_REG7_Unpack_data_format_cntx4_SHAMT: u32 = 24;
pub const THCON_SEC0_REG7_Unpack_data_format_cntx4_MASK: u32 = 251658240;
pub const THCON_SEC0_REG7_Unpack_out_data_format_cntx4_ADDR32: u32 = 92;
pub const THCON_SEC0_REG7_Unpack_out_data_format_cntx4_SHAMT: u32 = 28;
pub const THCON_SEC0_REG7_Unpack_out_data_format_cntx4_MASK: u32 = 4026531840;
pub const THCON_SEC0_REG7_Offset_cntx1_address_ADDR32: u32 = 93;
pub const THCON_SEC0_REG7_Offset_cntx1_address_SHAMT: u32 = 0;
pub const THCON_SEC0_REG7_Offset_cntx1_address_MASK: u32 = 65535;
pub const THCON_SEC0_REG7_Unpack_data_format_cntx1_ADDR32: u32 = 93;
pub const THCON_SEC0_REG7_Unpack_data_format_cntx1_SHAMT: u32 = 16;
pub const THCON_SEC0_REG7_Unpack_data_format_cntx1_MASK: u32 = 983040;
pub const THCON_SEC0_REG7_Unpack_out_data_format_cntx1_ADDR32: u32 = 93;
pub const THCON_SEC0_REG7_Unpack_out_data_format_cntx1_SHAMT: u32 = 20;
pub const THCON_SEC0_REG7_Unpack_out_data_format_cntx1_MASK: u32 = 15728640;
pub const THCON_SEC0_REG7_Unpack_data_format_cntx5_ADDR32: u32 = 93;
pub const THCON_SEC0_REG7_Unpack_data_format_cntx5_SHAMT: u32 = 24;
pub const THCON_SEC0_REG7_Unpack_data_format_cntx5_MASK: u32 = 251658240;
pub const THCON_SEC0_REG7_Unpack_out_data_format_cntx5_ADDR32: u32 = 93;
pub const THCON_SEC0_REG7_Unpack_out_data_format_cntx5_SHAMT: u32 = 28;
pub const THCON_SEC0_REG7_Unpack_out_data_format_cntx5_MASK: u32 = 4026531840;
pub const THCON_SEC0_REG7_Offset_cntx2_address_ADDR32: u32 = 94;
pub const THCON_SEC0_REG7_Offset_cntx2_address_SHAMT: u32 = 0;
pub const THCON_SEC0_REG7_Offset_cntx2_address_MASK: u32 = 65535;
pub const THCON_SEC0_REG7_Unpack_data_format_cntx2_ADDR32: u32 = 94;
pub const THCON_SEC0_REG7_Unpack_data_format_cntx2_SHAMT: u32 = 16;
pub const THCON_SEC0_REG7_Unpack_data_format_cntx2_MASK: u32 = 983040;
pub const THCON_SEC0_REG7_Unpack_out_data_format_cntx2_ADDR32: u32 = 94;
pub const THCON_SEC0_REG7_Unpack_out_data_format_cntx2_SHAMT: u32 = 20;
pub const THCON_SEC0_REG7_Unpack_out_data_format_cntx2_MASK: u32 = 15728640;
pub const THCON_SEC0_REG7_Unpack_data_format_cntx6_ADDR32: u32 = 94;
pub const THCON_SEC0_REG7_Unpack_data_format_cntx6_SHAMT: u32 = 24;
pub const THCON_SEC0_REG7_Unpack_data_format_cntx6_MASK: u32 = 251658240;
pub const THCON_SEC0_REG7_Unpack_out_data_format_cntx6_ADDR32: u32 = 94;
pub const THCON_SEC0_REG7_Unpack_out_data_format_cntx6_SHAMT: u32 = 28;
pub const THCON_SEC0_REG7_Unpack_out_data_format_cntx6_MASK: u32 = 4026531840;
pub const THCON_SEC0_REG7_Offset_cntx3_address_ADDR32: u32 = 95;
pub const THCON_SEC0_REG7_Offset_cntx3_address_SHAMT: u32 = 0;
pub const THCON_SEC0_REG7_Offset_cntx3_address_MASK: u32 = 65535;
pub const THCON_SEC0_REG7_Unpack_data_format_cntx3_ADDR32: u32 = 95;
pub const THCON_SEC0_REG7_Unpack_data_format_cntx3_SHAMT: u32 = 16;
pub const THCON_SEC0_REG7_Unpack_data_format_cntx3_MASK: u32 = 983040;
pub const THCON_SEC0_REG7_Unpack_out_data_format_cntx3_ADDR32: u32 = 95;
pub const THCON_SEC0_REG7_Unpack_out_data_format_cntx3_SHAMT: u32 = 20;
pub const THCON_SEC0_REG7_Unpack_out_data_format_cntx3_MASK: u32 = 15728640;
pub const THCON_SEC0_REG7_Unpack_data_format_cntx7_ADDR32: u32 = 95;
pub const THCON_SEC0_REG7_Unpack_data_format_cntx7_SHAMT: u32 = 24;
pub const THCON_SEC0_REG7_Unpack_data_format_cntx7_MASK: u32 = 251658240;
pub const THCON_SEC0_REG7_Unpack_out_data_format_cntx7_ADDR32: u32 = 95;
pub const THCON_SEC0_REG7_Unpack_out_data_format_cntx7_SHAMT: u32 = 28;
pub const THCON_SEC0_REG7_Unpack_out_data_format_cntx7_MASK: u32 = 4026531840;
pub const THCON_SEC0_REG8_Row_start_section_size_ADDR32: u32 = 96;
pub const THCON_SEC0_REG8_Row_start_section_size_SHAMT: u32 = 0;
pub const THCON_SEC0_REG8_Row_start_section_size_MASK: u32 = 65535;
pub const THCON_SEC0_REG8_Exp_section_size_ADDR32: u32 = 96;
pub const THCON_SEC0_REG8_Exp_section_size_SHAMT: u32 = 16;
pub const THCON_SEC0_REG8_Exp_section_size_MASK: u32 = 4294901760;
pub const THCON_SEC0_REG8_L1_Dest_addr_ADDR32: u32 = 97;
pub const THCON_SEC0_REG8_L1_Dest_addr_SHAMT: u32 = 0;
pub const THCON_SEC0_REG8_L1_Dest_addr_MASK: u32 = 4294967295;
pub const THCON_SEC0_REG8_Disable_zero_compress_ADDR32: u32 = 98;
pub const THCON_SEC0_REG8_Disable_zero_compress_SHAMT: u32 = 0;
pub const THCON_SEC0_REG8_Disable_zero_compress_MASK: u32 = 1;
pub const THCON_SEC0_REG8_Add_l1_dest_addr_offset_ADDR32: u32 = 98;
pub const THCON_SEC0_REG8_Add_l1_dest_addr_offset_SHAMT: u32 = 1;
pub const THCON_SEC0_REG8_Add_l1_dest_addr_offset_MASK: u32 = 2;
pub const THCON_SEC0_REG8_Disable_pack_zero_flags_ADDR32: u32 = 98;
pub const THCON_SEC0_REG8_Disable_pack_zero_flags_SHAMT: u32 = 2;
pub const THCON_SEC0_REG8_Disable_pack_zero_flags_MASK: u32 = 4;
pub const THCON_SEC0_REG8_Unused1_ADDR32: u32 = 98;
pub const THCON_SEC0_REG8_Unused1_SHAMT: u32 = 3;
pub const THCON_SEC0_REG8_Unused1_MASK: u32 = 8;
pub const THCON_SEC0_REG8_Out_data_format_ADDR32: u32 = 98;
pub const THCON_SEC0_REG8_Out_data_format_SHAMT: u32 = 4;
pub const THCON_SEC0_REG8_Out_data_format_MASK: u32 = 240;
pub const THCON_SEC0_REG8_In_data_format_ADDR32: u32 = 98;
pub const THCON_SEC0_REG8_In_data_format_SHAMT: u32 = 8;
pub const THCON_SEC0_REG8_In_data_format_MASK: u32 = 3840;
pub const THCON_SEC0_REG8_Dis_shared_exp_assembler_ADDR32: u32 = 98;
pub const THCON_SEC0_REG8_Dis_shared_exp_assembler_SHAMT: u32 = 12;
pub const THCON_SEC0_REG8_Dis_shared_exp_assembler_MASK: u32 = 4096;
pub const THCON_SEC0_REG8_Auto_set_last_pacr_intf_sel_ADDR32: u32 = 98;
pub const THCON_SEC0_REG8_Auto_set_last_pacr_intf_sel_SHAMT: u32 = 13;
pub const THCON_SEC0_REG8_Auto_set_last_pacr_intf_sel_MASK: u32 = 8192;
pub const THCON_SEC0_REG8_Enable_out_fifo_ADDR32: u32 = 98;
pub const THCON_SEC0_REG8_Enable_out_fifo_SHAMT: u32 = 14;
pub const THCON_SEC0_REG8_Enable_out_fifo_MASK: u32 = 16384;
pub const THCON_SEC0_REG8_Sub_l1_tile_header_size_ADDR32: u32 = 98;
pub const THCON_SEC0_REG8_Sub_l1_tile_header_size_SHAMT: u32 = 15;
pub const THCON_SEC0_REG8_Sub_l1_tile_header_size_MASK: u32 = 32768;
pub const THCON_SEC0_REG8_Source_interface_selection_ADDR32: u32 = 98;
pub const THCON_SEC0_REG8_Source_interface_selection_SHAMT: u32 = 16;
pub const THCON_SEC0_REG8_Source_interface_selection_MASK: u32 = 65536;
pub const THCON_SEC0_REG8_Add_tile_header_size_ADDR32: u32 = 98;
pub const THCON_SEC0_REG8_Add_tile_header_size_SHAMT: u32 = 17;
pub const THCON_SEC0_REG8_Add_tile_header_size_MASK: u32 = 131072;
pub const THCON_SEC0_REG8_pack_dis_y_pos_start_offset_ADDR32: u32 = 98;
pub const THCON_SEC0_REG8_pack_dis_y_pos_start_offset_SHAMT: u32 = 18;
pub const THCON_SEC0_REG8_pack_dis_y_pos_start_offset_MASK: u32 = 262144;
pub const THCON_SEC0_REG8_unpack_tile_offset_ADDR32: u32 = 98;
pub const THCON_SEC0_REG8_unpack_tile_offset_SHAMT: u32 = 19;
pub const THCON_SEC0_REG8_unpack_tile_offset_MASK: u32 = 16252928;
pub const THCON_SEC0_REG8_L1_source_addr_ADDR32: u32 = 98;
pub const THCON_SEC0_REG8_L1_source_addr_SHAMT: u32 = 24;
pub const THCON_SEC0_REG8_L1_source_addr_MASK: u32 = 4278190080;
pub const THCON_SEC0_REG8_Downsample_mask_ADDR32: u32 = 99;
pub const THCON_SEC0_REG8_Downsample_mask_SHAMT: u32 = 0;
pub const THCON_SEC0_REG8_Downsample_mask_MASK: u32 = 65535;
pub const THCON_SEC0_REG8_Downsample_rate_ADDR32: u32 = 99;
pub const THCON_SEC0_REG8_Downsample_rate_SHAMT: u32 = 16;
pub const THCON_SEC0_REG8_Downsample_rate_MASK: u32 = 458752;
pub const THCON_SEC0_REG8_Pack_L1_Acc_ADDR32: u32 = 99;
pub const THCON_SEC0_REG8_Pack_L1_Acc_SHAMT: u32 = 19;
pub const THCON_SEC0_REG8_Pack_L1_Acc_MASK: u32 = 524288;
pub const THCON_SEC0_REG8_Exp_threshold_en_ADDR32: u32 = 99;
pub const THCON_SEC0_REG8_Exp_threshold_en_SHAMT: u32 = 20;
pub const THCON_SEC0_REG8_Exp_threshold_en_MASK: u32 = 1048576;
pub const THCON_SEC0_REG8_Exp_threshold_ADDR32: u32 = 99;
pub const THCON_SEC0_REG8_Exp_threshold_SHAMT: u32 = 24;
pub const THCON_SEC0_REG8_Exp_threshold_MASK: u32 = 4278190080;
pub const THCON_SEC0_REG9_Pack_0_2_limit_address_ADDR32: u32 = 100;
pub const THCON_SEC0_REG9_Pack_0_2_limit_address_SHAMT: u32 = 0;
pub const THCON_SEC0_REG9_Pack_0_2_limit_address_MASK: u32 = 131071;
pub const THCON_SEC0_REG9_Pack_0_2_fifo_size_ADDR32: u32 = 101;
pub const THCON_SEC0_REG9_Pack_0_2_fifo_size_SHAMT: u32 = 0;
pub const THCON_SEC0_REG9_Pack_0_2_fifo_size_MASK: u32 = 131071;
pub const THCON_SEC0_REG9_Pack_1_3_limit_address_ADDR32: u32 = 102;
pub const THCON_SEC0_REG9_Pack_1_3_limit_address_SHAMT: u32 = 0;
pub const THCON_SEC0_REG9_Pack_1_3_limit_address_MASK: u32 = 131071;
pub const THCON_SEC0_REG9_Pack_1_3_fifo_size_ADDR32: u32 = 103;
pub const THCON_SEC0_REG9_Pack_1_3_fifo_size_SHAMT: u32 = 0;
pub const THCON_SEC0_REG9_Pack_1_3_fifo_size_MASK: u32 = 131071;
pub const THCON_SEC0_REG10_Unpack_limit_address_ADDR32: u32 = 104;
pub const THCON_SEC0_REG10_Unpack_limit_address_SHAMT: u32 = 0;
pub const THCON_SEC0_REG10_Unpack_limit_address_MASK: u32 = 131071;
pub const THCON_SEC0_REG10_Unpack_fifo_size_ADDR32: u32 = 105;
pub const THCON_SEC0_REG10_Unpack_fifo_size_SHAMT: u32 = 0;
pub const THCON_SEC0_REG10_Unpack_fifo_size_MASK: u32 = 131071;
pub const THCON_SEC0_REG10_Unpack_limit_address_en_ADDR32: u32 = 105;
pub const THCON_SEC0_REG10_Unpack_limit_address_en_SHAMT: u32 = 17;
pub const THCON_SEC0_REG10_Unpack_limit_address_en_MASK: u32 = 131072;
pub const THCON_SEC0_REG10_Unpacker_Reg_Wr_Addr_ADDR32: u32 = 106;
pub const THCON_SEC0_REG10_Unpacker_Reg_Wr_Addr_SHAMT: u32 = 0;
pub const THCON_SEC0_REG10_Unpacker_Reg_Wr_Addr_MASK: u32 = 16777215;
pub const THCON_SEC0_REG10_Packer_Reg_Wr_Addr_ADDR32: u32 = 107;
pub const THCON_SEC0_REG10_Packer_Reg_Wr_Addr_SHAMT: u32 = 0;
pub const THCON_SEC0_REG10_Packer_Reg_Wr_Addr_MASK: u32 = 16777215;
pub const THCON_SEC0_REG11_Metadata_l1_addr_ADDR32: u32 = 108;
pub const THCON_SEC0_REG11_Metadata_l1_addr_SHAMT: u32 = 0;
pub const THCON_SEC0_REG11_Metadata_l1_addr_MASK: u32 = 4294967295;
pub const THCON_SEC0_REG11_Metadata_limit_addr_ADDR32: u32 = 109;
pub const THCON_SEC0_REG11_Metadata_limit_addr_SHAMT: u32 = 0;
pub const THCON_SEC0_REG11_Metadata_limit_addr_MASK: u32 = 4294967295;
pub const THCON_SEC0_REG11_Metadata_fifo_size_ADDR32: u32 = 110;
pub const THCON_SEC0_REG11_Metadata_fifo_size_SHAMT: u32 = 0;
pub const THCON_SEC0_REG11_Metadata_fifo_size_MASK: u32 = 4294967295;
pub const THCON_SEC0_REG11_Metadata_z_cntr_rst_unpacr_count_ADDR32: u32 = 111;
pub const THCON_SEC0_REG11_Metadata_z_cntr_rst_unpacr_count_SHAMT: u32 = 0;
pub const THCON_SEC0_REG11_Metadata_z_cntr_rst_unpacr_count_MASK: u32 = 255;
pub const THCON_SEC0_REG11_Metadata_cntxt_switch_unpacr_count_ADDR32: u32 = 111;
pub const THCON_SEC0_REG11_Metadata_cntxt_switch_unpacr_count_SHAMT: u32 = 8;
pub const THCON_SEC0_REG11_Metadata_cntxt_switch_unpacr_count_MASK: u32 = 65280;
pub const THCON_SEC1_REG0_TileDescriptor_ADDR32: u32 = 112;
pub const THCON_SEC1_REG0_TileDescriptor_SHAMT: u32 = 0;
pub const THCON_SEC1_REG1_Row_start_section_size_ADDR32: u32 = 116;
pub const THCON_SEC1_REG1_Row_start_section_size_SHAMT: u32 = 0;
pub const THCON_SEC1_REG1_Row_start_section_size_MASK: u32 = 65535;
pub const THCON_SEC1_REG1_Exp_section_size_ADDR32: u32 = 116;
pub const THCON_SEC1_REG1_Exp_section_size_SHAMT: u32 = 16;
pub const THCON_SEC1_REG1_Exp_section_size_MASK: u32 = 4294901760;
pub const THCON_SEC1_REG1_L1_Dest_addr_ADDR32: u32 = 117;
pub const THCON_SEC1_REG1_L1_Dest_addr_SHAMT: u32 = 0;
pub const THCON_SEC1_REG1_L1_Dest_addr_MASK: u32 = 4294967295;
pub const THCON_SEC1_REG1_Disable_zero_compress_ADDR32: u32 = 118;
pub const THCON_SEC1_REG1_Disable_zero_compress_SHAMT: u32 = 0;
pub const THCON_SEC1_REG1_Disable_zero_compress_MASK: u32 = 1;
pub const THCON_SEC1_REG1_Add_l1_dest_addr_offset_ADDR32: u32 = 118;
pub const THCON_SEC1_REG1_Add_l1_dest_addr_offset_SHAMT: u32 = 1;
pub const THCON_SEC1_REG1_Add_l1_dest_addr_offset_MASK: u32 = 2;
pub const THCON_SEC1_REG1_Disable_pack_zero_flags_ADDR32: u32 = 118;
pub const THCON_SEC1_REG1_Disable_pack_zero_flags_SHAMT: u32 = 2;
pub const THCON_SEC1_REG1_Disable_pack_zero_flags_MASK: u32 = 4;
pub const THCON_SEC1_REG1_ovrd_default_throttle_mode_ADDR32: u32 = 118;
pub const THCON_SEC1_REG1_ovrd_default_throttle_mode_SHAMT: u32 = 3;
pub const THCON_SEC1_REG1_ovrd_default_throttle_mode_MASK: u32 = 8;
pub const THCON_SEC1_REG1_Out_data_format_ADDR32: u32 = 118;
pub const THCON_SEC1_REG1_Out_data_format_SHAMT: u32 = 4;
pub const THCON_SEC1_REG1_Out_data_format_MASK: u32 = 240;
pub const THCON_SEC1_REG1_In_data_format_ADDR32: u32 = 118;
pub const THCON_SEC1_REG1_In_data_format_SHAMT: u32 = 8;
pub const THCON_SEC1_REG1_In_data_format_MASK: u32 = 3840;
pub const THCON_SEC1_REG1_Dis_shared_exp_assembler_ADDR32: u32 = 118;
pub const THCON_SEC1_REG1_Dis_shared_exp_assembler_SHAMT: u32 = 12;
pub const THCON_SEC1_REG1_Dis_shared_exp_assembler_MASK: u32 = 4096;
pub const THCON_SEC1_REG1_Auto_set_last_pacr_intf_sel_ADDR32: u32 = 118;
pub const THCON_SEC1_REG1_Auto_set_last_pacr_intf_sel_SHAMT: u32 = 13;
pub const THCON_SEC1_REG1_Auto_set_last_pacr_intf_sel_MASK: u32 = 8192;
pub const THCON_SEC1_REG1_Enable_out_fifo_ADDR32: u32 = 118;
pub const THCON_SEC1_REG1_Enable_out_fifo_SHAMT: u32 = 14;
pub const THCON_SEC1_REG1_Enable_out_fifo_MASK: u32 = 16384;
pub const THCON_SEC1_REG1_Sub_l1_tile_header_size_ADDR32: u32 = 118;
pub const THCON_SEC1_REG1_Sub_l1_tile_header_size_SHAMT: u32 = 15;
pub const THCON_SEC1_REG1_Sub_l1_tile_header_size_MASK: u32 = 32768;
pub const THCON_SEC1_REG1_Source_interface_selection_ADDR32: u32 = 118;
pub const THCON_SEC1_REG1_Source_interface_selection_SHAMT: u32 = 16;
pub const THCON_SEC1_REG1_Source_interface_selection_MASK: u32 = 65536;
pub const THCON_SEC1_REG1_pack_start_intf_pos_ADDR32: u32 = 118;
pub const THCON_SEC1_REG1_pack_start_intf_pos_SHAMT: u32 = 17;
pub const THCON_SEC1_REG1_pack_start_intf_pos_MASK: u32 = 1966080;
pub const THCON_SEC1_REG1_All_pack_disable_zero_compress_ovrd_ADDR32: u32 = 118;
pub const THCON_SEC1_REG1_All_pack_disable_zero_compress_ovrd_SHAMT: u32 = 21;
pub const THCON_SEC1_REG1_All_pack_disable_zero_compress_ovrd_MASK: u32 = 2097152;
pub const THCON_SEC1_REG1_Add_tile_header_size_ADDR32: u32 = 118;
pub const THCON_SEC1_REG1_Add_tile_header_size_SHAMT: u32 = 22;
pub const THCON_SEC1_REG1_Add_tile_header_size_MASK: u32 = 4194304;
pub const THCON_SEC1_REG1_pack_dis_y_pos_start_offset_ADDR32: u32 = 118;
pub const THCON_SEC1_REG1_pack_dis_y_pos_start_offset_SHAMT: u32 = 23;
pub const THCON_SEC1_REG1_pack_dis_y_pos_start_offset_MASK: u32 = 8388608;
pub const THCON_SEC1_REG1_L1_source_addr_ADDR32: u32 = 118;
pub const THCON_SEC1_REG1_L1_source_addr_SHAMT: u32 = 24;
pub const THCON_SEC1_REG1_L1_source_addr_MASK: u32 = 4278190080;
pub const THCON_SEC1_REG1_Downsample_mask_ADDR32: u32 = 119;
pub const THCON_SEC1_REG1_Downsample_mask_SHAMT: u32 = 0;
pub const THCON_SEC1_REG1_Downsample_mask_MASK: u32 = 65535;
pub const THCON_SEC1_REG1_Downsample_rate_ADDR32: u32 = 119;
pub const THCON_SEC1_REG1_Downsample_rate_SHAMT: u32 = 16;
pub const THCON_SEC1_REG1_Downsample_rate_MASK: u32 = 458752;
pub const THCON_SEC1_REG1_Pack_L1_Acc_ADDR32: u32 = 119;
pub const THCON_SEC1_REG1_Pack_L1_Acc_SHAMT: u32 = 19;
pub const THCON_SEC1_REG1_Pack_L1_Acc_MASK: u32 = 524288;
pub const THCON_SEC1_REG1_Exp_threshold_en_ADDR32: u32 = 119;
pub const THCON_SEC1_REG1_Exp_threshold_en_SHAMT: u32 = 20;
pub const THCON_SEC1_REG1_Exp_threshold_en_MASK: u32 = 1048576;
pub const THCON_SEC1_REG1_Unp_LF8_4b_exp_ADDR32: u32 = 119;
pub const THCON_SEC1_REG1_Unp_LF8_4b_exp_SHAMT: u32 = 22;
pub const THCON_SEC1_REG1_Unp_LF8_4b_exp_MASK: u32 = 4194304;
pub const THCON_SEC1_REG1_Pac_LF8_4b_exp_ADDR32: u32 = 119;
pub const THCON_SEC1_REG1_Pac_LF8_4b_exp_SHAMT: u32 = 23;
pub const THCON_SEC1_REG1_Pac_LF8_4b_exp_MASK: u32 = 8388608;
pub const THCON_SEC1_REG1_Exp_threshold_ADDR32: u32 = 119;
pub const THCON_SEC1_REG1_Exp_threshold_SHAMT: u32 = 24;
pub const THCON_SEC1_REG1_Exp_threshold_MASK: u32 = 4278190080;
pub const THCON_SEC1_REG2_Out_data_format_ADDR32: u32 = 120;
pub const THCON_SEC1_REG2_Out_data_format_SHAMT: u32 = 0;
pub const THCON_SEC1_REG2_Out_data_format_MASK: u32 = 15;
pub const THCON_SEC1_REG2_Throttle_mode_ADDR32: u32 = 120;
pub const THCON_SEC1_REG2_Throttle_mode_SHAMT: u32 = 4;
pub const THCON_SEC1_REG2_Throttle_mode_MASK: u32 = 48;
pub const THCON_SEC1_REG2_Context_count_ADDR32: u32 = 120;
pub const THCON_SEC1_REG2_Context_count_SHAMT: u32 = 6;
pub const THCON_SEC1_REG2_Context_count_MASK: u32 = 192;
pub const THCON_SEC1_REG2_Haloize_mode_ADDR32: u32 = 120;
pub const THCON_SEC1_REG2_Haloize_mode_SHAMT: u32 = 8;
pub const THCON_SEC1_REG2_Haloize_mode_MASK: u32 = 256;
pub const THCON_SEC1_REG2_Tileize_mode_ADDR32: u32 = 120;
pub const THCON_SEC1_REG2_Tileize_mode_SHAMT: u32 = 9;
pub const THCON_SEC1_REG2_Tileize_mode_MASK: u32 = 512;
pub const THCON_SEC1_REG2_Unpack_Src_Reg_Set_Upd_ADDR32: u32 = 120;
pub const THCON_SEC1_REG2_Unpack_Src_Reg_Set_Upd_SHAMT: u32 = 10;
pub const THCON_SEC1_REG2_Unpack_Src_Reg_Set_Upd_MASK: u32 = 1024;
pub const THCON_SEC1_REG2_Unpack_If_Sel_ADDR32: u32 = 120;
pub const THCON_SEC1_REG2_Unpack_If_Sel_SHAMT: u32 = 11;
pub const THCON_SEC1_REG2_Unpack_If_Sel_MASK: u32 = 2048;
pub const THCON_SEC1_REG2_Upsample_rate_ADDR32: u32 = 120;
pub const THCON_SEC1_REG2_Upsample_rate_SHAMT: u32 = 12;
pub const THCON_SEC1_REG2_Upsample_rate_MASK: u32 = 12288;
pub const THCON_SEC1_REG2_Ovrd_data_format_ADDR32: u32 = 120;
pub const THCON_SEC1_REG2_Ovrd_data_format_SHAMT: u32 = 14;
pub const THCON_SEC1_REG2_Ovrd_data_format_MASK: u32 = 16384;
pub const THCON_SEC1_REG2_Upsample_and_interleave_ADDR32: u32 = 120;
pub const THCON_SEC1_REG2_Upsample_and_interleave_SHAMT: u32 = 15;
pub const THCON_SEC1_REG2_Upsample_and_interleave_MASK: u32 = 32768;
pub const THCON_SEC1_REG2_Shift_amount_cntx0_ADDR32: u32 = 120;
pub const THCON_SEC1_REG2_Shift_amount_cntx0_SHAMT: u32 = 16;
pub const THCON_SEC1_REG2_Shift_amount_cntx0_MASK: u32 = 983040;
pub const THCON_SEC1_REG2_Shift_amount_cntx1_ADDR32: u32 = 120;
pub const THCON_SEC1_REG2_Shift_amount_cntx1_SHAMT: u32 = 20;
pub const THCON_SEC1_REG2_Shift_amount_cntx1_MASK: u32 = 15728640;
pub const THCON_SEC1_REG2_Shift_amount_cntx2_ADDR32: u32 = 120;
pub const THCON_SEC1_REG2_Shift_amount_cntx2_SHAMT: u32 = 24;
pub const THCON_SEC1_REG2_Shift_amount_cntx2_MASK: u32 = 251658240;
pub const THCON_SEC1_REG2_Shift_amount_cntx3_ADDR32: u32 = 120;
pub const THCON_SEC1_REG2_Shift_amount_cntx3_SHAMT: u32 = 28;
pub const THCON_SEC1_REG2_Shift_amount_cntx3_MASK: u32 = 4026531840;
pub const THCON_SEC1_REG2_Disable_zero_compress_cntx0_ADDR32: u32 = 121;
pub const THCON_SEC1_REG2_Disable_zero_compress_cntx0_SHAMT: u32 = 0;
pub const THCON_SEC1_REG2_Disable_zero_compress_cntx0_MASK: u32 = 1;
pub const THCON_SEC1_REG2_Disable_zero_compress_cntx1_ADDR32: u32 = 121;
pub const THCON_SEC1_REG2_Disable_zero_compress_cntx1_SHAMT: u32 = 1;
pub const THCON_SEC1_REG2_Disable_zero_compress_cntx1_MASK: u32 = 2;
pub const THCON_SEC1_REG2_Disable_zero_compress_cntx2_ADDR32: u32 = 121;
pub const THCON_SEC1_REG2_Disable_zero_compress_cntx2_SHAMT: u32 = 2;
pub const THCON_SEC1_REG2_Disable_zero_compress_cntx2_MASK: u32 = 4;
pub const THCON_SEC1_REG2_Disable_zero_compress_cntx3_ADDR32: u32 = 121;
pub const THCON_SEC1_REG2_Disable_zero_compress_cntx3_SHAMT: u32 = 3;
pub const THCON_SEC1_REG2_Disable_zero_compress_cntx3_MASK: u32 = 8;
pub const THCON_SEC1_REG2_Unpack_if_sel_cntx0_ADDR32: u32 = 121;
pub const THCON_SEC1_REG2_Unpack_if_sel_cntx0_SHAMT: u32 = 4;
pub const THCON_SEC1_REG2_Unpack_if_sel_cntx0_MASK: u32 = 16;
pub const THCON_SEC1_REG2_Unpack_if_sel_cntx1_ADDR32: u32 = 121;
pub const THCON_SEC1_REG2_Unpack_if_sel_cntx1_SHAMT: u32 = 5;
pub const THCON_SEC1_REG2_Unpack_if_sel_cntx1_MASK: u32 = 32;
pub const THCON_SEC1_REG2_Unpack_if_sel_cntx2_ADDR32: u32 = 121;
pub const THCON_SEC1_REG2_Unpack_if_sel_cntx2_SHAMT: u32 = 6;
pub const THCON_SEC1_REG2_Unpack_if_sel_cntx2_MASK: u32 = 64;
pub const THCON_SEC1_REG2_Unpack_if_sel_cntx3_ADDR32: u32 = 121;
pub const THCON_SEC1_REG2_Unpack_if_sel_cntx3_SHAMT: u32 = 7;
pub const THCON_SEC1_REG2_Unpack_if_sel_cntx3_MASK: u32 = 128;
pub const THCON_SEC1_REG2_Force_shared_exp_ADDR32: u32 = 121;
pub const THCON_SEC1_REG2_Force_shared_exp_SHAMT: u32 = 8;
pub const THCON_SEC1_REG2_Force_shared_exp_MASK: u32 = 256;
pub const THCON_SEC1_REG2_Context_count_non_log2_ADDR32: u32 = 121;
pub const THCON_SEC1_REG2_Context_count_non_log2_SHAMT: u32 = 9;
pub const THCON_SEC1_REG2_Context_count_non_log2_MASK: u32 = 3584;
pub const THCON_SEC1_REG2_Context_count_non_log2_en_ADDR32: u32 = 121;
pub const THCON_SEC1_REG2_Context_count_non_log2_en_SHAMT: u32 = 12;
pub const THCON_SEC1_REG2_Context_count_non_log2_en_MASK: u32 = 4096;
pub const THCON_SEC1_REG2_Disable_zero_compress_cntx4_ADDR32: u32 = 121;
pub const THCON_SEC1_REG2_Disable_zero_compress_cntx4_SHAMT: u32 = 16;
pub const THCON_SEC1_REG2_Disable_zero_compress_cntx4_MASK: u32 = 65536;
pub const THCON_SEC1_REG2_Disable_zero_compress_cntx5_ADDR32: u32 = 121;
pub const THCON_SEC1_REG2_Disable_zero_compress_cntx5_SHAMT: u32 = 17;
pub const THCON_SEC1_REG2_Disable_zero_compress_cntx5_MASK: u32 = 131072;
pub const THCON_SEC1_REG2_Disable_zero_compress_cntx6_ADDR32: u32 = 121;
pub const THCON_SEC1_REG2_Disable_zero_compress_cntx6_SHAMT: u32 = 18;
pub const THCON_SEC1_REG2_Disable_zero_compress_cntx6_MASK: u32 = 262144;
pub const THCON_SEC1_REG2_Disable_zero_compress_cntx7_ADDR32: u32 = 121;
pub const THCON_SEC1_REG2_Disable_zero_compress_cntx7_SHAMT: u32 = 19;
pub const THCON_SEC1_REG2_Disable_zero_compress_cntx7_MASK: u32 = 524288;
pub const THCON_SEC1_REG2_Unpack_if_sel_cntx4_ADDR32: u32 = 121;
pub const THCON_SEC1_REG2_Unpack_if_sel_cntx4_SHAMT: u32 = 20;
pub const THCON_SEC1_REG2_Unpack_if_sel_cntx4_MASK: u32 = 1048576;
pub const THCON_SEC1_REG2_Unpack_if_sel_cntx5_ADDR32: u32 = 121;
pub const THCON_SEC1_REG2_Unpack_if_sel_cntx5_SHAMT: u32 = 21;
pub const THCON_SEC1_REG2_Unpack_if_sel_cntx5_MASK: u32 = 2097152;
pub const THCON_SEC1_REG2_Unpack_if_sel_cntx6_ADDR32: u32 = 121;
pub const THCON_SEC1_REG2_Unpack_if_sel_cntx6_SHAMT: u32 = 22;
pub const THCON_SEC1_REG2_Unpack_if_sel_cntx6_MASK: u32 = 4194304;
pub const THCON_SEC1_REG2_Unpack_if_sel_cntx7_ADDR32: u32 = 121;
pub const THCON_SEC1_REG2_Unpack_if_sel_cntx7_SHAMT: u32 = 23;
pub const THCON_SEC1_REG2_Unpack_if_sel_cntx7_MASK: u32 = 8388608;
pub const THCON_SEC1_REG2_Metadata_x_end_ADDR32: u32 = 121;
pub const THCON_SEC1_REG2_Metadata_x_end_SHAMT: u32 = 24;
pub const THCON_SEC1_REG2_Metadata_x_end_MASK: u32 = 4278190080;
pub const THCON_SEC1_REG2_Unpack_limit_address_ADDR32: u32 = 122;
pub const THCON_SEC1_REG2_Unpack_limit_address_SHAMT: u32 = 0;
pub const THCON_SEC1_REG2_Unpack_limit_address_MASK: u32 = 131071;
pub const THCON_SEC1_REG2_Unpack_fifo_size_ADDR32: u32 = 123;
pub const THCON_SEC1_REG2_Unpack_fifo_size_SHAMT: u32 = 0;
pub const THCON_SEC1_REG2_Unpack_fifo_size_MASK: u32 = 131071;
pub const THCON_SEC1_REG3_Base_address_ADDR32: u32 = 124;
pub const THCON_SEC1_REG3_Base_address_SHAMT: u32 = 0;
pub const THCON_SEC1_REG3_Base_address_MASK: u32 = 4294967295;
pub const THCON_SEC1_REG3_Base_cntx1_address_ADDR32: u32 = 125;
pub const THCON_SEC1_REG3_Base_cntx1_address_SHAMT: u32 = 0;
pub const THCON_SEC1_REG3_Base_cntx1_address_MASK: u32 = 4294967295;
pub const THCON_SEC1_REG3_Base_cntx2_address_ADDR32: u32 = 126;
pub const THCON_SEC1_REG3_Base_cntx2_address_SHAMT: u32 = 0;
pub const THCON_SEC1_REG3_Base_cntx2_address_MASK: u32 = 4294967295;
pub const THCON_SEC1_REG3_Base_cntx3_address_ADDR32: u32 = 127;
pub const THCON_SEC1_REG3_Base_cntx3_address_SHAMT: u32 = 0;
pub const THCON_SEC1_REG3_Base_cntx3_address_MASK: u32 = 4294967295;
pub const THCON_SEC1_REG4_Base_cntx4_address_ADDR32: u32 = 128;
pub const THCON_SEC1_REG4_Base_cntx4_address_SHAMT: u32 = 0;
pub const THCON_SEC1_REG4_Base_cntx4_address_MASK: u32 = 4294967295;
pub const THCON_SEC1_REG4_Base_cntx5_address_ADDR32: u32 = 129;
pub const THCON_SEC1_REG4_Base_cntx5_address_SHAMT: u32 = 0;
pub const THCON_SEC1_REG4_Base_cntx5_address_MASK: u32 = 4294967295;
pub const THCON_SEC1_REG4_Base_cntx6_address_ADDR32: u32 = 130;
pub const THCON_SEC1_REG4_Base_cntx6_address_SHAMT: u32 = 0;
pub const THCON_SEC1_REG4_Base_cntx6_address_MASK: u32 = 4294967295;
pub const THCON_SEC1_REG4_Base_cntx7_address_ADDR32: u32 = 131;
pub const THCON_SEC1_REG4_Base_cntx7_address_SHAMT: u32 = 0;
pub const THCON_SEC1_REG4_Base_cntx7_address_MASK: u32 = 4294967295;
pub const THCON_SEC1_REG5_Dest_cntx0_address_ADDR32: u32 = 132;
pub const THCON_SEC1_REG5_Dest_cntx0_address_SHAMT: u32 = 0;
pub const THCON_SEC1_REG5_Dest_cntx0_address_MASK: u32 = 65535;
pub const THCON_SEC1_REG5_Dest_cntx1_address_ADDR32: u32 = 132;
pub const THCON_SEC1_REG5_Dest_cntx1_address_SHAMT: u32 = 16;
pub const THCON_SEC1_REG5_Dest_cntx1_address_MASK: u32 = 4294901760;
pub const THCON_SEC1_REG5_Dest_cntx2_address_ADDR32: u32 = 133;
pub const THCON_SEC1_REG5_Dest_cntx2_address_SHAMT: u32 = 0;
pub const THCON_SEC1_REG5_Dest_cntx2_address_MASK: u32 = 65535;
pub const THCON_SEC1_REG5_Dest_cntx3_address_ADDR32: u32 = 133;
pub const THCON_SEC1_REG5_Dest_cntx3_address_SHAMT: u32 = 16;
pub const THCON_SEC1_REG5_Dest_cntx3_address_MASK: u32 = 4294901760;
pub const THCON_SEC1_REG5_Tile_x_dim_cntx0_ADDR32: u32 = 134;
pub const THCON_SEC1_REG5_Tile_x_dim_cntx0_SHAMT: u32 = 0;
pub const THCON_SEC1_REG5_Tile_x_dim_cntx0_MASK: u32 = 65535;
pub const THCON_SEC1_REG5_Tile_x_dim_cntx1_ADDR32: u32 = 134;
pub const THCON_SEC1_REG5_Tile_x_dim_cntx1_SHAMT: u32 = 16;
pub const THCON_SEC1_REG5_Tile_x_dim_cntx1_MASK: u32 = 4294901760;
pub const THCON_SEC1_REG5_Tile_x_dim_cntx2_ADDR32: u32 = 135;
pub const THCON_SEC1_REG5_Tile_x_dim_cntx2_SHAMT: u32 = 0;
pub const THCON_SEC1_REG5_Tile_x_dim_cntx2_MASK: u32 = 65535;
pub const THCON_SEC1_REG5_Tile_x_dim_cntx3_ADDR32: u32 = 135;
pub const THCON_SEC1_REG5_Tile_x_dim_cntx3_SHAMT: u32 = 16;
pub const THCON_SEC1_REG5_Tile_x_dim_cntx3_MASK: u32 = 4294901760;
pub const THCON_SEC1_REG6_Source_address_ADDR32: u32 = 136;
pub const THCON_SEC1_REG6_Source_address_SHAMT: u32 = 0;
pub const THCON_SEC1_REG6_Source_address_MASK: u32 = 4294967295;
pub const THCON_SEC1_REG6_Destination_address_ADDR32: u32 = 137;
pub const THCON_SEC1_REG6_Destination_address_SHAMT: u32 = 0;
pub const THCON_SEC1_REG6_Destination_address_MASK: u32 = 4294967295;
pub const THCON_SEC1_REG6_Buffer_size_ADDR32: u32 = 138;
pub const THCON_SEC1_REG6_Buffer_size_SHAMT: u32 = 0;
pub const THCON_SEC1_REG6_Buffer_size_MASK: u32 = 1073741823;
pub const THCON_SEC1_REG6_Transfer_direction_ADDR32: u32 = 138;
pub const THCON_SEC1_REG6_Transfer_direction_SHAMT: u32 = 30;
pub const THCON_SEC1_REG6_Transfer_direction_MASK: u32 = 3221225472;
pub const THCON_SEC1_REG6_Metadata_misc_ADDR32: u32 = 139;
pub const THCON_SEC1_REG6_Metadata_misc_SHAMT: u32 = 0;
pub const THCON_SEC1_REG6_Metadata_misc_MASK: u32 = 4294967295;
pub const THCON_SEC1_REG7_Offset_address_ADDR32: u32 = 140;
pub const THCON_SEC1_REG7_Offset_address_SHAMT: u32 = 0;
pub const THCON_SEC1_REG7_Offset_address_MASK: u32 = 65535;
pub const THCON_SEC1_REG7_Unpack_data_format_cntx0_ADDR32: u32 = 140;
pub const THCON_SEC1_REG7_Unpack_data_format_cntx0_SHAMT: u32 = 16;
pub const THCON_SEC1_REG7_Unpack_data_format_cntx0_MASK: u32 = 983040;
pub const THCON_SEC1_REG7_Unpack_out_data_format_cntx0_ADDR32: u32 = 140;
pub const THCON_SEC1_REG7_Unpack_out_data_format_cntx0_SHAMT: u32 = 20;
pub const THCON_SEC1_REG7_Unpack_out_data_format_cntx0_MASK: u32 = 15728640;
pub const THCON_SEC1_REG7_Unpack_data_format_cntx4_ADDR32: u32 = 140;
pub const THCON_SEC1_REG7_Unpack_data_format_cntx4_SHAMT: u32 = 24;
pub const THCON_SEC1_REG7_Unpack_data_format_cntx4_MASK: u32 = 251658240;
pub const THCON_SEC1_REG7_Unpack_out_data_format_cntx4_ADDR32: u32 = 140;
pub const THCON_SEC1_REG7_Unpack_out_data_format_cntx4_SHAMT: u32 = 28;
pub const THCON_SEC1_REG7_Unpack_out_data_format_cntx4_MASK: u32 = 4026531840;
pub const THCON_SEC1_REG7_Offset_cntx1_address_ADDR32: u32 = 141;
pub const THCON_SEC1_REG7_Offset_cntx1_address_SHAMT: u32 = 0;
pub const THCON_SEC1_REG7_Offset_cntx1_address_MASK: u32 = 65535;
pub const THCON_SEC1_REG7_Unpack_data_format_cntx1_ADDR32: u32 = 141;
pub const THCON_SEC1_REG7_Unpack_data_format_cntx1_SHAMT: u32 = 16;
pub const THCON_SEC1_REG7_Unpack_data_format_cntx1_MASK: u32 = 983040;
pub const THCON_SEC1_REG7_Unpack_out_data_format_cntx1_ADDR32: u32 = 141;
pub const THCON_SEC1_REG7_Unpack_out_data_format_cntx1_SHAMT: u32 = 20;
pub const THCON_SEC1_REG7_Unpack_out_data_format_cntx1_MASK: u32 = 15728640;
pub const THCON_SEC1_REG7_Unpack_data_format_cntx5_ADDR32: u32 = 141;
pub const THCON_SEC1_REG7_Unpack_data_format_cntx5_SHAMT: u32 = 24;
pub const THCON_SEC1_REG7_Unpack_data_format_cntx5_MASK: u32 = 251658240;
pub const THCON_SEC1_REG7_Unpack_out_data_format_cntx5_ADDR32: u32 = 141;
pub const THCON_SEC1_REG7_Unpack_out_data_format_cntx5_SHAMT: u32 = 28;
pub const THCON_SEC1_REG7_Unpack_out_data_format_cntx5_MASK: u32 = 4026531840;
pub const THCON_SEC1_REG7_Offset_cntx2_address_ADDR32: u32 = 142;
pub const THCON_SEC1_REG7_Offset_cntx2_address_SHAMT: u32 = 0;
pub const THCON_SEC1_REG7_Offset_cntx2_address_MASK: u32 = 65535;
pub const THCON_SEC1_REG7_Unpack_data_format_cntx2_ADDR32: u32 = 142;
pub const THCON_SEC1_REG7_Unpack_data_format_cntx2_SHAMT: u32 = 16;
pub const THCON_SEC1_REG7_Unpack_data_format_cntx2_MASK: u32 = 983040;
pub const THCON_SEC1_REG7_Unpack_out_data_format_cntx2_ADDR32: u32 = 142;
pub const THCON_SEC1_REG7_Unpack_out_data_format_cntx2_SHAMT: u32 = 20;
pub const THCON_SEC1_REG7_Unpack_out_data_format_cntx2_MASK: u32 = 15728640;
pub const THCON_SEC1_REG7_Unpack_data_format_cntx6_ADDR32: u32 = 142;
pub const THCON_SEC1_REG7_Unpack_data_format_cntx6_SHAMT: u32 = 24;
pub const THCON_SEC1_REG7_Unpack_data_format_cntx6_MASK: u32 = 251658240;
pub const THCON_SEC1_REG7_Unpack_out_data_format_cntx6_ADDR32: u32 = 142;
pub const THCON_SEC1_REG7_Unpack_out_data_format_cntx6_SHAMT: u32 = 28;
pub const THCON_SEC1_REG7_Unpack_out_data_format_cntx6_MASK: u32 = 4026531840;
pub const THCON_SEC1_REG7_Offset_cntx3_address_ADDR32: u32 = 143;
pub const THCON_SEC1_REG7_Offset_cntx3_address_SHAMT: u32 = 0;
pub const THCON_SEC1_REG7_Offset_cntx3_address_MASK: u32 = 65535;
pub const THCON_SEC1_REG7_Unpack_data_format_cntx3_ADDR32: u32 = 143;
pub const THCON_SEC1_REG7_Unpack_data_format_cntx3_SHAMT: u32 = 16;
pub const THCON_SEC1_REG7_Unpack_data_format_cntx3_MASK: u32 = 983040;
pub const THCON_SEC1_REG7_Unpack_out_data_format_cntx3_ADDR32: u32 = 143;
pub const THCON_SEC1_REG7_Unpack_out_data_format_cntx3_SHAMT: u32 = 20;
pub const THCON_SEC1_REG7_Unpack_out_data_format_cntx3_MASK: u32 = 15728640;
pub const THCON_SEC1_REG7_Unpack_data_format_cntx7_ADDR32: u32 = 143;
pub const THCON_SEC1_REG7_Unpack_data_format_cntx7_SHAMT: u32 = 24;
pub const THCON_SEC1_REG7_Unpack_data_format_cntx7_MASK: u32 = 251658240;
pub const THCON_SEC1_REG7_Unpack_out_data_format_cntx7_ADDR32: u32 = 143;
pub const THCON_SEC1_REG7_Unpack_out_data_format_cntx7_SHAMT: u32 = 28;
pub const THCON_SEC1_REG7_Unpack_out_data_format_cntx7_MASK: u32 = 4026531840;
pub const THCON_SEC1_REG8_Row_start_section_size_ADDR32: u32 = 144;
pub const THCON_SEC1_REG8_Row_start_section_size_SHAMT: u32 = 0;
pub const THCON_SEC1_REG8_Row_start_section_size_MASK: u32 = 65535;
pub const THCON_SEC1_REG8_Exp_section_size_ADDR32: u32 = 144;
pub const THCON_SEC1_REG8_Exp_section_size_SHAMT: u32 = 16;
pub const THCON_SEC1_REG8_Exp_section_size_MASK: u32 = 4294901760;
pub const THCON_SEC1_REG8_L1_Dest_addr_ADDR32: u32 = 145;
pub const THCON_SEC1_REG8_L1_Dest_addr_SHAMT: u32 = 0;
pub const THCON_SEC1_REG8_L1_Dest_addr_MASK: u32 = 4294967295;
pub const THCON_SEC1_REG8_Disable_zero_compress_ADDR32: u32 = 146;
pub const THCON_SEC1_REG8_Disable_zero_compress_SHAMT: u32 = 0;
pub const THCON_SEC1_REG8_Disable_zero_compress_MASK: u32 = 1;
pub const THCON_SEC1_REG8_Add_l1_dest_addr_offset_ADDR32: u32 = 146;
pub const THCON_SEC1_REG8_Add_l1_dest_addr_offset_SHAMT: u32 = 1;
pub const THCON_SEC1_REG8_Add_l1_dest_addr_offset_MASK: u32 = 2;
pub const THCON_SEC1_REG8_Disable_pack_zero_flags_ADDR32: u32 = 146;
pub const THCON_SEC1_REG8_Disable_pack_zero_flags_SHAMT: u32 = 2;
pub const THCON_SEC1_REG8_Disable_pack_zero_flags_MASK: u32 = 4;
pub const THCON_SEC1_REG8_Unused1_ADDR32: u32 = 146;
pub const THCON_SEC1_REG8_Unused1_SHAMT: u32 = 3;
pub const THCON_SEC1_REG8_Unused1_MASK: u32 = 8;
pub const THCON_SEC1_REG8_Out_data_format_ADDR32: u32 = 146;
pub const THCON_SEC1_REG8_Out_data_format_SHAMT: u32 = 4;
pub const THCON_SEC1_REG8_Out_data_format_MASK: u32 = 240;
pub const THCON_SEC1_REG8_In_data_format_ADDR32: u32 = 146;
pub const THCON_SEC1_REG8_In_data_format_SHAMT: u32 = 8;
pub const THCON_SEC1_REG8_In_data_format_MASK: u32 = 3840;
pub const THCON_SEC1_REG8_Dis_shared_exp_assembler_ADDR32: u32 = 146;
pub const THCON_SEC1_REG8_Dis_shared_exp_assembler_SHAMT: u32 = 12;
pub const THCON_SEC1_REG8_Dis_shared_exp_assembler_MASK: u32 = 4096;
pub const THCON_SEC1_REG8_Auto_set_last_pacr_intf_sel_ADDR32: u32 = 146;
pub const THCON_SEC1_REG8_Auto_set_last_pacr_intf_sel_SHAMT: u32 = 13;
pub const THCON_SEC1_REG8_Auto_set_last_pacr_intf_sel_MASK: u32 = 8192;
pub const THCON_SEC1_REG8_Enable_out_fifo_ADDR32: u32 = 146;
pub const THCON_SEC1_REG8_Enable_out_fifo_SHAMT: u32 = 14;
pub const THCON_SEC1_REG8_Enable_out_fifo_MASK: u32 = 16384;
pub const THCON_SEC1_REG8_Sub_l1_tile_header_size_ADDR32: u32 = 146;
pub const THCON_SEC1_REG8_Sub_l1_tile_header_size_SHAMT: u32 = 15;
pub const THCON_SEC1_REG8_Sub_l1_tile_header_size_MASK: u32 = 32768;
pub const THCON_SEC1_REG8_Source_interface_selection_ADDR32: u32 = 146;
pub const THCON_SEC1_REG8_Source_interface_selection_SHAMT: u32 = 16;
pub const THCON_SEC1_REG8_Source_interface_selection_MASK: u32 = 65536;
pub const THCON_SEC1_REG8_Add_tile_header_size_ADDR32: u32 = 146;
pub const THCON_SEC1_REG8_Add_tile_header_size_SHAMT: u32 = 17;
pub const THCON_SEC1_REG8_Add_tile_header_size_MASK: u32 = 131072;
pub const THCON_SEC1_REG8_pack_dis_y_pos_start_offset_ADDR32: u32 = 146;
pub const THCON_SEC1_REG8_pack_dis_y_pos_start_offset_SHAMT: u32 = 18;
pub const THCON_SEC1_REG8_pack_dis_y_pos_start_offset_MASK: u32 = 262144;
pub const THCON_SEC1_REG8_unpack_tile_offset_ADDR32: u32 = 146;
pub const THCON_SEC1_REG8_unpack_tile_offset_SHAMT: u32 = 19;
pub const THCON_SEC1_REG8_unpack_tile_offset_MASK: u32 = 16252928;
pub const THCON_SEC1_REG8_L1_source_addr_ADDR32: u32 = 146;
pub const THCON_SEC1_REG8_L1_source_addr_SHAMT: u32 = 24;
pub const THCON_SEC1_REG8_L1_source_addr_MASK: u32 = 4278190080;
pub const THCON_SEC1_REG8_Downsample_mask_ADDR32: u32 = 147;
pub const THCON_SEC1_REG8_Downsample_mask_SHAMT: u32 = 0;
pub const THCON_SEC1_REG8_Downsample_mask_MASK: u32 = 65535;
pub const THCON_SEC1_REG8_Downsample_rate_ADDR32: u32 = 147;
pub const THCON_SEC1_REG8_Downsample_rate_SHAMT: u32 = 16;
pub const THCON_SEC1_REG8_Downsample_rate_MASK: u32 = 458752;
pub const THCON_SEC1_REG8_Pack_L1_Acc_ADDR32: u32 = 147;
pub const THCON_SEC1_REG8_Pack_L1_Acc_SHAMT: u32 = 19;
pub const THCON_SEC1_REG8_Pack_L1_Acc_MASK: u32 = 524288;
pub const THCON_SEC1_REG8_Exp_threshold_en_ADDR32: u32 = 147;
pub const THCON_SEC1_REG8_Exp_threshold_en_SHAMT: u32 = 20;
pub const THCON_SEC1_REG8_Exp_threshold_en_MASK: u32 = 1048576;
pub const THCON_SEC1_REG8_Exp_threshold_ADDR32: u32 = 147;
pub const THCON_SEC1_REG8_Exp_threshold_SHAMT: u32 = 24;
pub const THCON_SEC1_REG8_Exp_threshold_MASK: u32 = 4278190080;
pub const THCON_SEC1_REG9_Pack_0_2_limit_address_ADDR32: u32 = 148;
pub const THCON_SEC1_REG9_Pack_0_2_limit_address_SHAMT: u32 = 0;
pub const THCON_SEC1_REG9_Pack_0_2_limit_address_MASK: u32 = 131071;
pub const THCON_SEC1_REG9_Pack_0_2_fifo_size_ADDR32: u32 = 149;
pub const THCON_SEC1_REG9_Pack_0_2_fifo_size_SHAMT: u32 = 0;
pub const THCON_SEC1_REG9_Pack_0_2_fifo_size_MASK: u32 = 131071;
pub const THCON_SEC1_REG9_Pack_1_3_limit_address_ADDR32: u32 = 150;
pub const THCON_SEC1_REG9_Pack_1_3_limit_address_SHAMT: u32 = 0;
pub const THCON_SEC1_REG9_Pack_1_3_limit_address_MASK: u32 = 131071;
pub const THCON_SEC1_REG9_Pack_1_3_fifo_size_ADDR32: u32 = 151;
pub const THCON_SEC1_REG9_Pack_1_3_fifo_size_SHAMT: u32 = 0;
pub const THCON_SEC1_REG9_Pack_1_3_fifo_size_MASK: u32 = 131071;
pub const THCON_SEC1_REG10_Unpack_limit_address_ADDR32: u32 = 152;
pub const THCON_SEC1_REG10_Unpack_limit_address_SHAMT: u32 = 0;
pub const THCON_SEC1_REG10_Unpack_limit_address_MASK: u32 = 131071;
pub const THCON_SEC1_REG10_Unpack_fifo_size_ADDR32: u32 = 153;
pub const THCON_SEC1_REG10_Unpack_fifo_size_SHAMT: u32 = 0;
pub const THCON_SEC1_REG10_Unpack_fifo_size_MASK: u32 = 131071;
pub const THCON_SEC1_REG10_Unpack_limit_address_en_ADDR32: u32 = 153;
pub const THCON_SEC1_REG10_Unpack_limit_address_en_SHAMT: u32 = 17;
pub const THCON_SEC1_REG10_Unpack_limit_address_en_MASK: u32 = 131072;
pub const THCON_SEC1_REG10_Unpacker_Reg_Wr_Addr_ADDR32: u32 = 154;
pub const THCON_SEC1_REG10_Unpacker_Reg_Wr_Addr_SHAMT: u32 = 0;
pub const THCON_SEC1_REG10_Unpacker_Reg_Wr_Addr_MASK: u32 = 16777215;
pub const THCON_SEC1_REG10_Packer_Reg_Wr_Addr_ADDR32: u32 = 155;
pub const THCON_SEC1_REG10_Packer_Reg_Wr_Addr_SHAMT: u32 = 0;
pub const THCON_SEC1_REG10_Packer_Reg_Wr_Addr_MASK: u32 = 16777215;
pub const THCON_SEC1_REG11_Metadata_l1_addr_ADDR32: u32 = 156;
pub const THCON_SEC1_REG11_Metadata_l1_addr_SHAMT: u32 = 0;
pub const THCON_SEC1_REG11_Metadata_l1_addr_MASK: u32 = 4294967295;
pub const THCON_SEC1_REG11_Metadata_limit_addr_ADDR32: u32 = 157;
pub const THCON_SEC1_REG11_Metadata_limit_addr_SHAMT: u32 = 0;
pub const THCON_SEC1_REG11_Metadata_limit_addr_MASK: u32 = 4294967295;
pub const THCON_SEC1_REG11_Metadata_fifo_size_ADDR32: u32 = 158;
pub const THCON_SEC1_REG11_Metadata_fifo_size_SHAMT: u32 = 0;
pub const THCON_SEC1_REG11_Metadata_fifo_size_MASK: u32 = 4294967295;
pub const THCON_SEC1_REG11_Metadata_z_cntr_rst_unpacr_count_ADDR32: u32 = 159;
pub const THCON_SEC1_REG11_Metadata_z_cntr_rst_unpacr_count_SHAMT: u32 = 0;
pub const THCON_SEC1_REG11_Metadata_z_cntr_rst_unpacr_count_MASK: u32 = 255;
pub const THCON_SEC1_REG11_Metadata_cntxt_switch_unpacr_count_ADDR32: u32 = 159;
pub const THCON_SEC1_REG11_Metadata_cntxt_switch_unpacr_count_SHAMT: u32 = 8;
pub const THCON_SEC1_REG11_Metadata_cntxt_switch_unpacr_count_MASK: u32 = 65280;
pub const GLOBAL_CFGREG_BASE_ADDR32: u32 = 180;
pub const DEST_TARGET_REG_CFG_PACK_SEC0_Offset_ADDR32: u32 = 180;
pub const DEST_TARGET_REG_CFG_PACK_SEC0_Offset_SHAMT: u32 = 0;
pub const DEST_TARGET_REG_CFG_PACK_SEC0_Offset_MASK: u32 = 4095;
pub const DEST_TARGET_REG_CFG_PACK_SEC0_ZOffset_ADDR32: u32 = 180;
pub const DEST_TARGET_REG_CFG_PACK_SEC0_ZOffset_SHAMT: u32 = 12;
pub const DEST_TARGET_REG_CFG_PACK_SEC0_ZOffset_MASK: u32 = 258048;
pub const DEST_TARGET_REG_CFG_PACK_SEC1_Offset_ADDR32: u32 = 181;
pub const DEST_TARGET_REG_CFG_PACK_SEC1_Offset_SHAMT: u32 = 0;
pub const DEST_TARGET_REG_CFG_PACK_SEC1_Offset_MASK: u32 = 4095;
pub const DEST_TARGET_REG_CFG_PACK_SEC1_ZOffset_ADDR32: u32 = 181;
pub const DEST_TARGET_REG_CFG_PACK_SEC1_ZOffset_SHAMT: u32 = 12;
pub const DEST_TARGET_REG_CFG_PACK_SEC1_ZOffset_MASK: u32 = 258048;
pub const DEST_TARGET_REG_CFG_PACK_SEC2_Offset_ADDR32: u32 = 182;
pub const DEST_TARGET_REG_CFG_PACK_SEC2_Offset_SHAMT: u32 = 0;
pub const DEST_TARGET_REG_CFG_PACK_SEC2_Offset_MASK: u32 = 4095;
pub const DEST_TARGET_REG_CFG_PACK_SEC2_ZOffset_ADDR32: u32 = 182;
pub const DEST_TARGET_REG_CFG_PACK_SEC2_ZOffset_SHAMT: u32 = 12;
pub const DEST_TARGET_REG_CFG_PACK_SEC2_ZOffset_MASK: u32 = 258048;
pub const DEST_TARGET_REG_CFG_PACK_SEC3_Offset_ADDR32: u32 = 183;
pub const DEST_TARGET_REG_CFG_PACK_SEC3_Offset_SHAMT: u32 = 0;
pub const DEST_TARGET_REG_CFG_PACK_SEC3_Offset_MASK: u32 = 4095;
pub const DEST_TARGET_REG_CFG_PACK_SEC3_ZOffset_ADDR32: u32 = 183;
pub const DEST_TARGET_REG_CFG_PACK_SEC3_ZOffset_SHAMT: u32 = 12;
pub const DEST_TARGET_REG_CFG_PACK_SEC3_ZOffset_MASK: u32 = 258048;
pub const CG_SRC_PIPELINE_GateSrcAPipeEn_ADDR32: u32 = 184;
pub const CG_SRC_PIPELINE_GateSrcAPipeEn_SHAMT: u32 = 0;
pub const CG_SRC_PIPELINE_GateSrcAPipeEn_MASK: u32 = 1;
pub const CG_SRC_PIPELINE_GateSrcBPipeEn_ADDR32: u32 = 184;
pub const CG_SRC_PIPELINE_GateSrcBPipeEn_SHAMT: u32 = 1;
pub const CG_SRC_PIPELINE_GateSrcBPipeEn_MASK: u32 = 2;
pub const RISCV_IC_INVALIDATE_InvalidateAll_ADDR32: u32 = 185;
pub const RISCV_IC_INVALIDATE_InvalidateAll_SHAMT: u32 = 0;
pub const RISCV_IC_INVALIDATE_InvalidateAll_MASK: u32 = 31;
pub const PRNG_SEED_Seed_Val_ADDR32: u32 = 186;
pub const PRNG_SEED_Seed_Val_SHAMT: u32 = 0;
pub const PRNG_SEED_Seed_Val_MASK: u32 = 4294967295;
pub const INT_DESCALE_VALUES_SEC0_Value_ADDR32: u32 = 187;
pub const INT_DESCALE_VALUES_SEC0_Value_SHAMT: u32 = 0;
pub const INT_DESCALE_VALUES_SEC0_Value_MASK: u32 = 4294967295;
pub const INT_DESCALE_VALUES_SEC1_Value_ADDR32: u32 = 188;
pub const INT_DESCALE_VALUES_SEC1_Value_SHAMT: u32 = 0;
pub const INT_DESCALE_VALUES_SEC1_Value_MASK: u32 = 4294967295;
pub const INT_DESCALE_VALUES_SEC2_Value_ADDR32: u32 = 189;
pub const INT_DESCALE_VALUES_SEC2_Value_SHAMT: u32 = 0;
pub const INT_DESCALE_VALUES_SEC2_Value_MASK: u32 = 4294967295;
pub const INT_DESCALE_VALUES_SEC3_Value_ADDR32: u32 = 190;
pub const INT_DESCALE_VALUES_SEC3_Value_SHAMT: u32 = 0;
pub const INT_DESCALE_VALUES_SEC3_Value_MASK: u32 = 4294967295;
pub const INT_DESCALE_VALUES_SEC4_Value_ADDR32: u32 = 191;
pub const INT_DESCALE_VALUES_SEC4_Value_SHAMT: u32 = 0;
pub const INT_DESCALE_VALUES_SEC4_Value_MASK: u32 = 4294967295;
pub const INT_DESCALE_VALUES_SEC5_Value_ADDR32: u32 = 192;
pub const INT_DESCALE_VALUES_SEC5_Value_SHAMT: u32 = 0;
pub const INT_DESCALE_VALUES_SEC5_Value_MASK: u32 = 4294967295;
pub const INT_DESCALE_VALUES_SEC6_Value_ADDR32: u32 = 193;
pub const INT_DESCALE_VALUES_SEC6_Value_SHAMT: u32 = 0;
pub const INT_DESCALE_VALUES_SEC6_Value_MASK: u32 = 4294967295;
pub const INT_DESCALE_VALUES_SEC7_Value_ADDR32: u32 = 194;
pub const INT_DESCALE_VALUES_SEC7_Value_SHAMT: u32 = 0;
pub const INT_DESCALE_VALUES_SEC7_Value_MASK: u32 = 4294967295;
pub const INT_DESCALE_VALUES_SEC8_Value_ADDR32: u32 = 195;
pub const INT_DESCALE_VALUES_SEC8_Value_SHAMT: u32 = 0;
pub const INT_DESCALE_VALUES_SEC8_Value_MASK: u32 = 4294967295;
pub const INT_DESCALE_VALUES_SEC9_Value_ADDR32: u32 = 196;
pub const INT_DESCALE_VALUES_SEC9_Value_SHAMT: u32 = 0;
pub const INT_DESCALE_VALUES_SEC9_Value_MASK: u32 = 4294967295;
pub const INT_DESCALE_VALUES_SEC10_Value_ADDR32: u32 = 197;
pub const INT_DESCALE_VALUES_SEC10_Value_SHAMT: u32 = 0;
pub const INT_DESCALE_VALUES_SEC10_Value_MASK: u32 = 4294967295;
pub const INT_DESCALE_VALUES_SEC11_Value_ADDR32: u32 = 198;
pub const INT_DESCALE_VALUES_SEC11_Value_SHAMT: u32 = 0;
pub const INT_DESCALE_VALUES_SEC11_Value_MASK: u32 = 4294967295;
pub const INT_DESCALE_VALUES_SEC12_Value_ADDR32: u32 = 199;
pub const INT_DESCALE_VALUES_SEC12_Value_SHAMT: u32 = 0;
pub const INT_DESCALE_VALUES_SEC12_Value_MASK: u32 = 4294967295;
pub const INT_DESCALE_VALUES_SEC13_Value_ADDR32: u32 = 200;
pub const INT_DESCALE_VALUES_SEC13_Value_SHAMT: u32 = 0;
pub const INT_DESCALE_VALUES_SEC13_Value_MASK: u32 = 4294967295;
pub const INT_DESCALE_VALUES_SEC14_Value_ADDR32: u32 = 201;
pub const INT_DESCALE_VALUES_SEC14_Value_SHAMT: u32 = 0;
pub const INT_DESCALE_VALUES_SEC14_Value_MASK: u32 = 4294967295;
pub const INT_DESCALE_VALUES_SEC15_Value_ADDR32: u32 = 202;
pub const INT_DESCALE_VALUES_SEC15_Value_SHAMT: u32 = 0;
pub const INT_DESCALE_VALUES_SEC15_Value_MASK: u32 = 4294967295;
pub const TRISC_END_PC_SEC0_PC_ADDR32: u32 = 203;
pub const TRISC_END_PC_SEC0_PC_SHAMT: u32 = 0;
pub const TRISC_END_PC_SEC0_PC_MASK: u32 = 4294967295;
pub const TRISC_END_PC_SEC1_PC_ADDR32: u32 = 204;
pub const TRISC_END_PC_SEC1_PC_SHAMT: u32 = 0;
pub const TRISC_END_PC_SEC1_PC_MASK: u32 = 4294967295;
pub const TRISC_END_PC_SEC2_PC_ADDR32: u32 = 205;
pub const TRISC_END_PC_SEC2_PC_SHAMT: u32 = 0;
pub const TRISC_END_PC_SEC2_PC_MASK: u32 = 4294967295;
pub const BRISC_END_PC_PC_ADDR32: u32 = 206;
pub const BRISC_END_PC_PC_SHAMT: u32 = 0;
pub const BRISC_END_PC_PC_MASK: u32 = 4294967295;
pub const NOC_RISC_END_PC_PC_ADDR32: u32 = 207;
pub const NOC_RISC_END_PC_PC_SHAMT: u32 = 0;
pub const NOC_RISC_END_PC_PC_MASK: u32 = 4294967295;
pub const RISC_PREFETCH_CTRL_Enable_Trisc_ADDR32: u32 = 208;
pub const RISC_PREFETCH_CTRL_Enable_Trisc_SHAMT: u32 = 0;
pub const RISC_PREFETCH_CTRL_Enable_Trisc_MASK: u32 = 7;
pub const RISC_PREFETCH_CTRL_Enable_Brisc_ADDR32: u32 = 208;
pub const RISC_PREFETCH_CTRL_Enable_Brisc_SHAMT: u32 = 3;
pub const RISC_PREFETCH_CTRL_Enable_Brisc_MASK: u32 = 8;
pub const RISC_PREFETCH_CTRL_Enable_NocRisc_ADDR32: u32 = 208;
pub const RISC_PREFETCH_CTRL_Enable_NocRisc_SHAMT: u32 = 4;
pub const RISC_PREFETCH_CTRL_Enable_NocRisc_MASK: u32 = 16;
pub const RISC_PREFETCH_CTRL_Max_Req_Count_ADDR32: u32 = 208;
pub const RISC_PREFETCH_CTRL_Max_Req_Count_SHAMT: u32 = 5;
pub const RISC_PREFETCH_CTRL_Max_Req_Count_MASK: u32 = 8160;
pub const SCRATCH_SEC0_val_ADDR32: u32 = 209;
pub const SCRATCH_SEC0_val_SHAMT: u32 = 0;
pub const SCRATCH_SEC0_val_MASK: u32 = 4294967295;
pub const SCRATCH_SEC1_val_ADDR32: u32 = 210;
pub const SCRATCH_SEC1_val_SHAMT: u32 = 0;
pub const SCRATCH_SEC1_val_MASK: u32 = 4294967295;
pub const SCRATCH_SEC2_val_ADDR32: u32 = 211;
pub const SCRATCH_SEC2_val_SHAMT: u32 = 0;
pub const SCRATCH_SEC2_val_MASK: u32 = 4294967295;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Search_Enable_ADDR32: u32 = 212;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Search_Enable_SHAMT: u32 = 0;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Search_Enable_MASK: u32 = 1;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Start_Addr_ADDR32: u32 = 212;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Start_Addr_SHAMT: u32 = 1;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Start_Addr_MASK: u32 = 262142;
pub const L1_CACHE_TAG_SEARCH_ACCEL_End_Addr_ADDR32: u32 = 213;
pub const L1_CACHE_TAG_SEARCH_ACCEL_End_Addr_SHAMT: u32 = 0;
pub const L1_CACHE_TAG_SEARCH_ACCEL_End_Addr_MASK: u32 = 131071;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Tag_Value_low_ADDR32: u32 = 214;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Tag_Value_low_SHAMT: u32 = 0;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Tag_Value_low_MASK: u32 = 4294967295;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Tag_Value_high_ADDR32: u32 = 215;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Tag_Value_high_SHAMT: u32 = 0;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Tag_Value_high_MASK: u32 = 4294967295;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Tag_Width_ADDR32: u32 = 216;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Tag_Width_SHAMT: u32 = 0;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Tag_Width_MASK: u32 = 3;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Valid_bit_section_start_addr_ADDR32: u32 = 216;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Valid_bit_section_start_addr_SHAMT: u32 = 2;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Valid_bit_section_start_addr_MASK: u32 = 524284;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Valid_bit_section_end_addr_ADDR32: u32 = 217;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Valid_bit_section_end_addr_SHAMT: u32 = 0;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Valid_bit_section_end_addr_MASK: u32 = 131071;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Data_Valid_bit_section_start_addr_ADDR32: u32 = 218;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Data_Valid_bit_section_start_addr_SHAMT: u32 = 0;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Data_Valid_bit_section_start_addr_MASK: u32 = 131071;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Data_Valid_chk_ADDR32: u32 = 218;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Data_Valid_chk_SHAMT: u32 = 17;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Data_Valid_chk_MASK: u32 = 131072;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Data_Valid_offset_ADDR32: u32 = 219;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Data_Valid_offset_SHAMT: u32 = 0;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Data_Valid_offset_MASK: u32 = 16777215;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Tag_inv_ADDR32: u32 = 219;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Tag_inv_SHAMT: u32 = 24;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Tag_inv_MASK: u32 = 16777216;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Tag_inv_all_ADDR32: u32 = 219;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Tag_inv_all_SHAMT: u32 = 25;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Tag_inv_all_MASK: u32 = 33554432;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Tag_alloc_ADDR32: u32 = 219;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Tag_alloc_SHAMT: u32 = 26;
pub const L1_CACHE_TAG_SEARCH_ACCEL_Tag_alloc_MASK: u32 = 67108864;
pub const DEST_ACCESS_CFG_swizzle_32b_ADDR32: u32 = 220;
pub const DEST_ACCESS_CFG_swizzle_32b_SHAMT: u32 = 0;
pub const DEST_ACCESS_CFG_swizzle_32b_MASK: u32 = 1;
pub const DEST_ACCESS_CFG_remap_addrs_ADDR32: u32 = 220;
pub const DEST_ACCESS_CFG_remap_addrs_SHAMT: u32 = 1;
pub const DEST_ACCESS_CFG_remap_addrs_MASK: u32 = 2;
pub const DEST_ACCESS_CFG_disable_full_write_dest_q_bypass_ADDR32: u32 = 220;
pub const DEST_ACCESS_CFG_disable_full_write_dest_q_bypass_SHAMT: u32 = 2;
pub const DEST_ACCESS_CFG_disable_full_write_dest_q_bypass_MASK: u32 = 4;
pub const DEST_ACCESS_CFG_zeroacc_absolute_tile_mode_ADDR32: u32 = 220;
pub const DEST_ACCESS_CFG_zeroacc_absolute_tile_mode_SHAMT: u32 = 3;
pub const DEST_ACCESS_CFG_zeroacc_absolute_tile_mode_MASK: u32 = 8;
pub const SRC_ACCESS_CFG_math_view_srca_as_one_bank_ADDR32: u32 = 221;
pub const SRC_ACCESS_CFG_math_view_srca_as_one_bank_SHAMT: u32 = 0;
pub const SRC_ACCESS_CFG_math_view_srca_as_one_bank_MASK: u32 = 1;
pub const SRC_ACCESS_CFG_math_view_srcb_as_one_bank_ADDR32: u32 = 221;
pub const SRC_ACCESS_CFG_math_view_srcb_as_one_bank_SHAMT: u32 = 1;
pub const SRC_ACCESS_CFG_math_view_srcb_as_one_bank_MASK: u32 = 2;
pub const SRC_ACCESS_CFG_disable_contig_srca_dvalid_phase_ADDR32: u32 = 221;
pub const SRC_ACCESS_CFG_disable_contig_srca_dvalid_phase_SHAMT: u32 = 2;
pub const SRC_ACCESS_CFG_disable_contig_srca_dvalid_phase_MASK: u32 = 4;
pub const SRC_ACCESS_CFG_disable_contig_srcb_dvalid_phase_ADDR32: u32 = 221;
pub const SRC_ACCESS_CFG_disable_contig_srcb_dvalid_phase_SHAMT: u32 = 3;
pub const SRC_ACCESS_CFG_disable_contig_srcb_dvalid_phase_MASK: u32 = 8;
pub const CHICKEN_BITS_sfpu_scbd_disable_ADDR32: u32 = 222;
pub const CHICKEN_BITS_sfpu_scbd_disable_SHAMT: u32 = 0;
pub const CHICKEN_BITS_sfpu_scbd_disable_MASK: u32 = 1;
pub const MAX_THREADS: u32 = 3;
pub const MAX_PACKERS: u32 = 4;
pub const TEST_MAILBOX_ADDRESS: u32 = 4;
pub const WALL_CLOCK_MAILBOX_ADDRESS: u32 = 96;
pub const PERF_COUNTER_MAILBOX_ADDRESS: u32 = 112;
pub const PERF_MAILBOX_SIZE: u32 = 16;
pub const MEMORY_WORD_SIZE_IN_BYTES: u32 = 16;
pub const MEMORY_WORD_SHIFT_BITS: u32 = 4;
pub const STALLWAIT_COMPUTE: u32 = 0;
pub const STALLWAIT_TDMA: u32 = 1;
pub const STALLWAIT_FOR_TC: u32 = 1;
pub const STALLWAIT_FOR_UNP0: u32 = 2;
pub const STALLWAIT_FOR_UNP1: u32 = 4;
pub const STALLWAIT_FOR_PACK: u32 = 8;
pub const L0_BASE: u32 = 4290772992;
pub const L1_BASE: u32 = 0;
pub const LOCAL_MEM_SIZE: u32 = 4096;
pub const REGFILE_BASE: u32 = 4292870144;
pub const INSTRN_BUF_BASE: u32 = 4293132288;
pub const INSTRN1_BUF_BASE: u32 = 4293197824;
pub const INSTRN2_BUF_BASE: u32 = 4293263360;
pub const PC_BUF_BASE: u32 = 4293394432;
pub const PC1_BUF_BASE: u32 = 4293459968;
pub const PC2_BUF_BASE: u32 = 4293525504;
pub const TENSIX_MAILBOX0_BASE: u32 = 4293656576;
pub const TENSIX_MAILBOX1_BASE: u32 = 4293660672;
pub const TENSIX_MAILBOX2_BASE: u32 = 4293664768;
pub const TENSIX_MAILBOX3_BASE: u32 = 4293668864;
pub const TENSIX_CFG_BASE: u32 = 4293853184;
pub const TENSIX_MOP_CFG_BASE: u32 = 4290248704;
pub const L1_KERNEL_BASE: u32 = 126976;
pub const L1_L0_DUMP: u32 = 118784;
pub const RISCV_TDMA_REGS_START_ADDR: u32 = 4289794048;
pub const RISCV_TDMA_REG_XMOV_SRC_ADDR: u32 = 4289794048;
pub const RISCV_TDMA_REG_XMOV_DST_ADDR: u32 = 4289794052;
pub const RISCV_TDMA_REG_XMOV_SIZE: u32 = 4289794056;
pub const RISCV_TDMA_REG_XMOV_DIRECTION: u32 = 4289794060;
pub const RISCV_TDMA_REG_COMMAND_ADDR: u32 = 4289794064;
pub const RISCV_TDMA_REG_STATUS: u32 = 4289794068;
pub const RISCV_TDMA_REG_PACKED_SIZE: u32 = 4289794072;
pub const RISCV_TDMA_REG_ACC_PACKED_SIZE: u32 = 4289794076;
pub const RISCV_TDMA_REG_INITIAL_PACK_ACC: u32 = 4289794076;
pub const RISCV_TDMA_REG_CLK_GATE_EN: u32 = 4289794084;
pub const RISCV_TDMA_REG_CLK_GATE_HYST: u32 = 4289794088;
pub const RISCV_TDMA_REG_XMOV_L1_BASE_ADDR: u32 = 4289794092;
pub const RISCV_TDMA_REG_FIFO_PACKED_TILE_STATUS: u32 = 4289794104;
pub const RISCV_TDMA_STATUS_FLAG_MOVER0_BUSY_MASK: u32 = 1;
pub const RISCV_TDMA_STATUS_FLAG_MOVER1_BUSY_MASK: u32 = 2;
pub const RISCV_TDMA_STATUS_FLAG_FIFO_FULL_MASK: u32 = 4;
pub const RISCV_TDMA_STATUS_FLAG_FIFO_EMPTY_MASK: u32 = 8;
pub const RISCV_TDMA_STATUS_FLAG_ERROR_MASK: u32 = 16;
pub const RISCV_DEBUG_REGS_START_ADDR: u32 = 4289798144;
pub const RISCV_DEBUG_REG_PERF_CNT_INSTRN_THREAD0: u32 = 4289798144;
pub const RISCV_DEBUG_REG_PERF_CNT_INSTRN_THREAD1: u32 = 4289798148;
pub const RISCV_DEBUG_REG_PERF_CNT_INSTRN_THREAD2: u32 = 4289798152;
pub const RISCV_DEBUG_REG_PERF_CNT_TDMA_UNPACK0: u32 = 4289798156;
pub const RISCV_DEBUG_REG_PERF_CNT_TDMA_UNPACK1: u32 = 4289798160;
pub const RISCV_DEBUG_REG_PERF_CNT_TDMA_UNPACK2: u32 = 4289798164;
pub const RISCV_DEBUG_REG_PERF_CNT_FPU0: u32 = 4289798168;
pub const RISCV_DEBUG_REG_PERF_CNT_FPU1: u32 = 4289798172;
pub const RISCV_DEBUG_REG_PERF_CNT_FPU2: u32 = 4289798176;
pub const RISCV_DEBUG_REG_PERF_CNT_L1_0: u32 = 4289798192;
pub const RISCV_DEBUG_REG_PERF_CNT_L1_1: u32 = 4289798196;
pub const RISCV_DEBUG_REG_PERF_CNT_L1_2: u32 = 4289798200;
pub const RISCV_DEBUG_REG_PERF_CNT_ALL: u32 = 4289798204;
pub const RISCV_DEBUG_REG_DBG_L1_MEM_REG0: u32 = 4289798216;
pub const RISCV_DEBUG_REG_DBG_L1_MEM_REG1: u32 = 4289798220;
pub const RISCV_DEBUG_REG_DBG_L1_MEM_REG2: u32 = 4289798224;
pub const RISCV_DEBUG_REG_DBG_BUS_CTRL: u32 = 4289798228;
pub const RISCV_DEBUG_REG_TENSIX_CREG_READ: u32 = 4289798232;
pub const RISCV_DEBUG_REG_DBG_RD_DATA: u32 = 4289798236;
pub const RISCV_DEBUG_REG_THREAD1_CREG_READ: u32 = 4289798236;
pub const RISCV_DEBUG_REG_DBG_ARRAY_RD_EN: u32 = 4289798240;
pub const RISCV_DEBUG_REG_DBG_ARRAY_RD_CMD: u32 = 4289798244;
pub const RISCV_DEBUG_REG_DBG_FEATURE_DISABLE: u32 = 4289798248;
pub const RISCV_DEBUG_REG_DBG_ARRAY_RD_DATA: u32 = 4289798252;
pub const RISCV_DEBUG_REG_CG_CTRL_HYST0: u32 = 4289798256;
pub const RISCV_DEBUG_REG_CG_CTRL_HYST1: u32 = 4289798260;
pub const RISCV_DEBUG_REG_TENSIX_CREG_RDDATA: u32 = 4289798264;
pub const RISCV_DEBUG_REG_CG_CTRL_HYST2: u32 = 4289798268;
pub const RISCV_DEBUG_REG_THREAD1_CREG_RDDATA: u32 = 4289798268;
pub const RISCV_DEBUG_REG_RISC_DBG_CNTL_0: u32 = 4289798272;
pub const RISCV_DEBUG_REG_RISC_DBG_CNTL_1: u32 = 4289798276;
pub const RISCV_DEBUG_REG_RISC_DBG_STATUS_0: u32 = 4289798280;
pub const RISCV_DEBUG_REG_RISC_DBG_STATUS_1: u32 = 4289798284;
pub const RISCV_DEBUG_REG_TRISC_PC_BUF_OVERRIDE: u32 = 4289798288;
pub const RISCV_DEBUG_REG_DBG_INVALID_INSTRN: u32 = 4289798292;
pub const RISCV_DEBUG_REG_DBG_INSTRN_BUF_CTRL0: u32 = 4289798304;
pub const RISCV_DEBUG_REG_DBG_INSTRN_BUF_CTRL1: u32 = 4289798308;
pub const RISCV_DEBUG_REG_DBG_INSTRN_BUF_STATUS: u32 = 4289798312;
pub const RISCV_DEBUG_REG_STOCH_RND_MASK0: u32 = 4289798316;
pub const RISCV_DEBUG_REG_STOCH_RND_MASK1: u32 = 4289798320;
pub const RISCV_DEBUG_REG_FPU_STICKY_BITS: u32 = 4289798324;
pub const RISCV_DEBUG_REG_ETH_RISC_PREFECTH_CTRL: u32 = 4289798328;
pub const RISCV_DEBUG_REG_ETH_RISC_PREFECTH_PC: u32 = 4289798332;
pub const RISCV_DEBUG_REG_PERF_CNT_TDMA_PACK0: u32 = 4289798384;
pub const RISCV_DEBUG_REG_PERF_CNT_TDMA_PACK1: u32 = 4289798388;
pub const RISCV_DEBUG_REG_PERF_CNT_TDMA_PACK2: u32 = 4289798392;
pub const RISCV_DEBUG_REG_PERF_CNT_OUT_L_INSTRN_THREAD: u32 = 4289798400;
pub const RISCV_DEBUG_REG_PERF_CNT_OUT_H_INSTRN_THREAD: u32 = 4289798404;
pub const RISCV_DEBUG_REG_PERF_CNT_OUT_L_TDMA_UNPACK: u32 = 4289798408;
pub const RISCV_DEBUG_REG_PERF_CNT_OUT_H_TDMA_UNPACK: u32 = 4289798412;
pub const RISCV_DEBUG_REG_PERF_CNT_OUT_L_TDMA_PACK: u32 = 4289798416;
pub const RISCV_DEBUG_REG_PERF_CNT_OUT_H_TDMA_PACK: u32 = 4289798420;
pub const RISCV_DEBUG_REG_PERF_CNT_OUT_L_DBG_L1: u32 = 4289798424;
pub const RISCV_DEBUG_REG_PERF_CNT_OUT_H_DBG_L1: u32 = 4289798428;
pub const RISCV_DEBUG_REG_PERF_CNT_OUT_L_FPU: u32 = 4289798432;
pub const RISCV_DEBUG_REG_PERF_CNT_OUT_H_FPU: u32 = 4289798436;
pub const RISCV_DEBUG_REG_SOFT_RESET_0: u32 = 4289798576;
pub const RISCV_DEBUG_REG_ECC_CTRL: u32 = 4289798608;
pub const RISCV_DEBUG_REG_ECC_STATUS: u32 = 4289798612;
pub const RISCV_DEBUG_REG_WATCHDOG_TIMER: u32 = 4289798624;
pub const RISCV_DEBUG_REG_WDT_CNTL: u32 = 4289798628;
pub const RISCV_DEBUG_REG_WDT_STATUS: u32 = 4289798632;
pub const RISCV_DEBUG_REG_WALL_CLOCK_0: u32 = 4289798640;
pub const RISCV_DEBUG_REG_WALL_CLOCK_1: u32 = 4289798644;
pub const RISCV_DEBUG_REG_WALL_CLOCK_1_AT: u32 = 4289798648;
pub const RISCV_DEBUG_REG_TIMESTAMP_DUMP_CMD: u32 = 4289798652;
pub const RISCV_DEBUG_REG_TIMESTAMP_DUMP_CNTL: u32 = 4289798656;
pub const RISCV_DEBUG_REG_TIMESTAMP_DUMP_STATUS: u32 = 4289798660;
pub const RISCV_DEBUG_REG_TIMESTAMP_DUMP_BUF0_START_ADDR: u32 = 4289798664;
pub const RISCV_DEBUG_REG_TIMESTAMP_DUMP_BUF0_END_ADDR: u32 = 4289798668;
pub const RISCV_DEBUG_REG_TIMESTAMP_DUMP_BUF1_START_ADDR: u32 = 4289798672;
pub const RISCV_DEBUG_REG_TIMESTAMP_DUMP_BUF1_END_ADDR: u32 = 4289798676;
pub const RISCV_DEBUG_REG_PERF_CNT_MUX_CTRL: u32 = 4289798680;
pub const RISCV_DEBUG_REG_DBG_L1_READBACK_OFFSET: u32 = 4289798684;
pub const RISCV_DEBUG_REG_LFSR_HIT_MASK: u32 = 4289798688;
pub const RISCV_DEBUG_REG_DISABLE_RESET: u32 = 4289798692;
pub const RISCV_DEBUG_REG_TRISC0_RESET_PC: u32 = 4289798696;
pub const RISCV_DEBUG_REG_TRISC1_RESET_PC: u32 = 4289798700;
pub const RISCV_DEBUG_REG_TRISC2_RESET_PC: u32 = 4289798704;
pub const RISCV_DEBUG_REG_TRISC_RESET_PC_OVERRIDE: u32 = 4289798708;
pub const RISCV_DEBUG_REG_NCRISC_RESET_PC: u32 = 4289798712;
pub const RISCV_DEBUG_REG_NCRISC_RESET_PC_OVERRIDE: u32 = 4289798716;
pub const RISCV_DEBUG_REG_DEST_CG_CTRL: u32 = 4289798720;
pub const RISCV_DEBUG_REG_CG_CTRL_EN: u32 = 4289798724;
pub const RISCV_DEBUG_REG_CG_KICK: u32 = 4289798728;
pub const RISCV_DEBUG_REG_BREAKPOINT_CTRL: u32 = 4289798592;
pub const RISCV_DEBUG_REG_BREAKPOINT_STATUS: u32 = 4289798596;
pub const RISCV_DEBUG_REG_BREAKPOINT_DATA: u32 = 4289798600;
pub const RISCV_DEBUG_REG_INSTRN_BUF_CTRL0: u32 = 4289798304;
pub const RISCV_DEBUG_REG_INSTRN_BUF_CTRL1: u32 = 4289798308;
pub const RISCV_DEBUG_REG_INSTRN_BUF_STATUS: u32 = 4289798312;
pub const RISCV_DEBUG_REG_THREAD0_CREG_RDDATA: u32 = 4289798264;
pub const RISCV_DEBUG_REG_WALL_CLOCK_L: u32 = 4289798640;
pub const RISCV_DEBUG_REG_WALL_CLOCK_H: u32 = 4289798648;
pub const RISCV_DEBUG_REG_WDT: u32 = 4289798624;
pub const SOFT_RESET_MOVER: u32 = 64;
pub const SOFT_RESET_SEARCH: u32 = 128;
pub const SOFT_RESET_GLUE: u32 = 256;
pub const SOFT_RESET_THCON: u32 = 512;
pub const SOFT_RESET_FPU: u32 = 1024;
pub const SOFT_RESET_SRCA_REG: u32 = 32768;
pub const SOFT_RESET_SRCB_REG: u32 = 65536;
pub const SOFT_RESET_DEST_REG: u32 = 131072;
pub const SOFT_RESET_NCRISC_CTRL: u32 = 262144;
pub const RISC_PIC_BASE: u32 = 4289802240;
pub const INSTRN_RSTDMA: u32 = 1140850688;
pub const TENSIX_UNHALT_VAL: u32 = 1073741824;
pub const INSTRN_SEL_L0: u32 = 0;
pub const INSTRN_SEL_L1: u32 = 1;
pub const INSTRN_SEL_SIZE_16B: u32 = 0;
pub const INSTRN_SEL_SIZE_4B: u32 = 1;
pub const INSTRN_SEL_SIZE_2B: u32 = 2;
pub const INSTRN_SEL_SIZE_1B: u32 = 3;
pub const INSTRN_SEL_AUTO_INC_NONE: u32 = 0;
pub const INSTRN_SEL_AUTO_INC_2B: u32 = 1;
pub const INSTRN_SEL_AUTO_INC_4B: u32 = 2;
pub const INSTRN_SEL_AUTO_INC_16B: u32 = 3;
pub const INSTRN_SEL_RD_PTR: u32 = 0;
pub const INSTRN_SEL_WR_PTR: u32 = 1;
pub const REG2FLOP_TARGET_TDMA: u32 = 0;
pub const REG2FLOP_TARGET_LOCAL_REGS: u32 = 1;
pub const REG2FLOP_TARGET_ADDR_CNTRS: u32 = 2;
pub const BYTE_OFFSET_ZERO: u32 = 0;
pub const BYTE_OFFSET_ONE: u32 = 1;
pub const BYTE_OFFSET_TWO: u32 = 2;
pub const BYTE_OFFSET_THREE: u32 = 3;
pub const ALU_FORMAT_SPEC_REG: u32 = 1;
pub const DEST_TARGET_REG_CFG: u32 = 2;
pub const ALU_FORMAT_SPEC_REG0: u32 = 4;
pub const ALU_FORMAT_SPEC_REG1: u32 = 5;
pub const ALU_FORMAT_SPEC_REG2: u32 = 6;
pub const UNP0_ADDR_CTRL_XY_REG_0: u32 = 8;
pub const UNP0_ADDR_CTRL_ZW_REG_0: u32 = 9;
pub const UNP0_ADDR_BASE_REG_0: u32 = 10;
pub const UNP0_ADDR_CTRL_XY_REG_1: u32 = 11;
pub const UNP0_ADDR_CTRL_ZW_REG_1: u32 = 12;
pub const UNP0_ADDR_BASE_REG_1: u32 = 13;
pub const UNP1_ADDR_CTRL_XY_REG_0: u32 = 14;
pub const UNP1_ADDR_CTRL_ZW_REG_0: u32 = 15;
pub const UNP1_ADDR_BASE_REG_0: u32 = 16;
pub const UNP1_ADDR_CTRL_XY_REG_1: u32 = 17;
pub const UNP1_ADDR_CTRL_ZW_REG_1: u32 = 18;
pub const UNP1_ADDR_BASE_REG_1: u32 = 19;
pub const PCK0_ADDR_CTRL_XY_REG_0: u32 = 20;
pub const PCK0_ADDR_CTRL_ZW_REG_0: u32 = 21;
pub const PCK0_ADDR_BASE_REG_0: u32 = 22;
pub const PCK0_ADDR_CTRL_XY_REG_1: u32 = 23;
pub const PCK0_ADDR_CTRL_ZW_REG_1: u32 = 24;
pub const PCK0_ADDR_BASE_REG_1: u32 = 25;
pub const SRCA_REGW_BASE: u32 = 26;
pub const SRCB_REGW_BASE: u32 = 27;
pub const DEST_REGW_BASE: u32 = 28;
pub const MATH_FIDELITY_CTRL: u32 = 29;
pub const LOOP_CNT_REG0: u32 = 32;
pub const LOOP_CNT_REG1: u32 = 33;
pub const LOOP_CNT_REG2: u32 = 34;
pub const LOOP_CNT_REG3: u32 = 35;
pub const LOOP_CNT_REG4: u32 = 36;
pub const LOOP_CNT_REG5: u32 = 37;
pub const LOOP_CNT_REG6: u32 = 38;
pub const LOOP_CNT_REG7: u32 = 39;
pub const LOOP_CNT_REG8: u32 = 40;
pub const LOOP_CNT_REG9: u32 = 41;
pub const LOOP_CNT_REG10: u32 = 42;
pub const LOOP_CNT_REG11: u32 = 43;
pub const MATH_FIDELITY: u32 = 44;
pub const TXC_IC_INVALIDATE: u32 = 45;
pub const RISCV_IC_INVALIDATE: u32 = 46;
pub const STACC_RELU: u32 = 47;
pub const PCK_EDGE_OFFSET: u32 = 48;
pub const DEST_OFFSET: u32 = 49;
pub const DEBUG_MUX_CTRL: u32 = 50;
pub const DEBUG_MUX_RD: u32 = 51;
pub const SET_ADDRCNT_PROG_INC: u32 = 52;
pub const SET_REGWCNT_PROG_INC: u32 = 53;
pub const DEBUG_ARRAY_RD_CMD: u32 = 54;
pub const DEBUG_ARRAY_RD_EN: u32 = 55;
pub const CG_CTRL_EN: u32 = 56;
pub const CG_CTRL_KICK: u32 = 57;
pub const PERF_CNT_CMD0: u32 = 58;
pub const PERF_CNT_CMD1: u32 = 59;
pub const PERF_CNT_CMD2: u32 = 60;
pub const PERF_CNT_CMD3: u32 = 61;
pub const ENABLE_ACC_STATS: u32 = 62;
pub const DISABLE_RISC_BP: u32 = 63;
pub const ADDR_16K: u32 = 16384;
pub const ADDR_32K: u32 = 32768;
pub const ADDR_64K: u32 = 65536;
pub const ADDR_128K: u32 = 131072;
pub const ADDR_256K: u32 = 262144;
pub const ADDR_512K: u32 = 524288;
pub const ONE_16B: u32 = 16;
pub const ONE_32b: u32 = 4;
pub const R0_LO: u32 = 0;
pub const R0_HI: u32 = 1;
pub const R1_LO: u32 = 2;
pub const R1_HI: u32 = 3;
pub const R2_LO: u32 = 4;
pub const R2_HI: u32 = 5;
pub const R3_LO: u32 = 6;
pub const R3_HI: u32 = 7;
pub const R4_LO: u32 = 8;
pub const R4_HI: u32 = 9;
pub const R5_LO: u32 = 10;
pub const R5_HI: u32 = 11;
pub const R6_LO: u32 = 12;
pub const R6_HI: u32 = 13;
pub const R7_LO: u32 = 14;
pub const R7_HI: u32 = 15;
pub const R8_LO: u32 = 16;
pub const R8_HI: u32 = 17;
pub const R9_LO: u32 = 18;
pub const R9_HI: u32 = 19;
pub const R10_LO: u32 = 20;
pub const R10_HI: u32 = 21;
pub const R11_LO: u32 = 22;
pub const R11_HI: u32 = 23;
pub const R12_LO: u32 = 24;
pub const R12_HI: u32 = 25;
pub const R13_LO: u32 = 26;
pub const R13_HI: u32 = 27;
pub const R14_LO: u32 = 28;
pub const R14_HI: u32 = 29;
pub const R15_LO: u32 = 30;
pub const R15_HI: u32 = 31;
pub const R16_LO: u32 = 32;
pub const R16_HI: u32 = 33;
pub const R17_LO: u32 = 34;
pub const R17_HI: u32 = 35;
pub const R18_LO: u32 = 36;
pub const R18_HI: u32 = 37;
pub const R19_LO: u32 = 38;
pub const R19_HI: u32 = 39;
pub const R20_LO: u32 = 40;
pub const R20_HI: u32 = 41;
pub const R21_LO: u32 = 42;
pub const R21_HI: u32 = 43;
pub const R22_LO: u32 = 44;
pub const R22_HI: u32 = 45;
pub const R23_LO: u32 = 46;
pub const R23_HI: u32 = 47;
pub const R24_LO: u32 = 48;
pub const R24_HI: u32 = 49;
pub const R25_LO: u32 = 50;
pub const R25_HI: u32 = 51;
pub const R26_LO: u32 = 52;
pub const R26_HI: u32 = 53;
pub const R27_LO: u32 = 54;
pub const R27_HI: u32 = 55;
pub const R28_LO: u32 = 56;
pub const R28_HI: u32 = 57;
pub const R29_LO: u32 = 58;
pub const R29_HI: u32 = 59;
pub const R30_LO: u32 = 60;
pub const R30_HI: u32 = 61;
pub const R31_LO: u32 = 62;
pub const R31_HI: u32 = 63;
pub const R32_LO: u32 = 64;
pub const R32_HI: u32 = 65;
pub const R33_LO: u32 = 66;
pub const R33_HI: u32 = 67;
pub const R34_LO: u32 = 68;
pub const R34_HI: u32 = 69;
pub const R35_LO: u32 = 70;
pub const R35_HI: u32 = 71;
pub const R36_LO: u32 = 72;
pub const R36_HI: u32 = 73;
pub const R37_LO: u32 = 74;
pub const R37_HI: u32 = 75;
pub const R38_LO: u32 = 76;
pub const R38_HI: u32 = 77;
pub const R39_LO: u32 = 78;
pub const R39_HI: u32 = 79;
pub const R40_LO: u32 = 80;
pub const R40_HI: u32 = 81;
pub const R41_LO: u32 = 82;
pub const R41_HI: u32 = 83;
pub const R42_LO: u32 = 84;
pub const R42_HI: u32 = 85;
pub const R43_LO: u32 = 86;
pub const R43_HI: u32 = 87;
pub const R44_LO: u32 = 88;
pub const R44_HI: u32 = 89;
pub const R45_LO: u32 = 90;
pub const R45_HI: u32 = 91;
pub const R46_LO: u32 = 92;
pub const R46_HI: u32 = 93;
pub const R47_LO: u32 = 94;
pub const R47_HI: u32 = 95;
pub const R48_LO: u32 = 96;
pub const R48_HI: u32 = 97;
pub const R49_LO: u32 = 98;
pub const R49_HI: u32 = 99;
pub const R50_LO: u32 = 100;
pub const R50_HI: u32 = 101;
pub const R51_LO: u32 = 102;
pub const R51_HI: u32 = 103;
pub const R52_LO: u32 = 104;
pub const R52_HI: u32 = 105;
pub const R53_LO: u32 = 106;
pub const R53_HI: u32 = 107;
pub const R54_LO: u32 = 108;
pub const R54_HI: u32 = 109;
pub const R55_LO: u32 = 110;
pub const R55_HI: u32 = 111;
pub const R56_LO: u32 = 112;
pub const R56_HI: u32 = 113;
pub const R57_LO: u32 = 114;
pub const R57_HI: u32 = 115;
pub const R58_LO: u32 = 116;
pub const R58_HI: u32 = 117;
pub const R59_LO: u32 = 118;
pub const R59_HI: u32 = 119;
pub const R60_LO: u32 = 120;
pub const R60_HI: u32 = 121;
pub const R61_LO: u32 = 122;
pub const R61_HI: u32 = 123;
pub const R62_LO: u32 = 124;
pub const R62_HI: u32 = 125;
pub const R63_LO: u32 = 126;
pub const R63_HI: u32 = 127;
pub const TENSIX_MAX_KERNEL_LOOP_COUNT: u32 = 65535;
pub type __u_char = ::core::ffi::c_uchar;
pub type __u_short = ::core::ffi::c_ushort;
pub type __u_int = ::core::ffi::c_uint;
pub type __u_long = ::core::ffi::c_ulong;
pub type __int8_t = ::core::ffi::c_schar;
pub type __uint8_t = ::core::ffi::c_uchar;
pub type __int16_t = ::core::ffi::c_short;
pub type __uint16_t = ::core::ffi::c_ushort;
pub type __int32_t = ::core::ffi::c_int;
pub type __uint32_t = ::core::ffi::c_uint;
pub type __int64_t = ::core::ffi::c_long;
pub type __uint64_t = ::core::ffi::c_ulong;
pub type __int_least8_t = __int8_t;
pub type __uint_least8_t = __uint8_t;
pub type __int_least16_t = __int16_t;
pub type __uint_least16_t = __uint16_t;
pub type __int_least32_t = __int32_t;
pub type __uint_least32_t = __uint32_t;
pub type __int_least64_t = __int64_t;
pub type __uint_least64_t = __uint64_t;
pub type __quad_t = ::core::ffi::c_long;
pub type __u_quad_t = ::core::ffi::c_ulong;
pub type __intmax_t = ::core::ffi::c_long;
pub type __uintmax_t = ::core::ffi::c_ulong;
pub type __dev_t = ::core::ffi::c_ulong;
pub type __uid_t = ::core::ffi::c_uint;
pub type __gid_t = ::core::ffi::c_uint;
pub type __ino_t = ::core::ffi::c_ulong;
pub type __ino64_t = ::core::ffi::c_ulong;
pub type __mode_t = ::core::ffi::c_uint;
pub type __nlink_t = ::core::ffi::c_ulong;
pub type __off_t = ::core::ffi::c_long;
pub type __off64_t = ::core::ffi::c_long;
pub type __pid_t = ::core::ffi::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __fsid_t {
    pub __val: [::core::ffi::c_int; 2usize],
}
#[test]
fn bindgen_test_layout___fsid_t() {
    const UNINIT: ::core::mem::MaybeUninit<__fsid_t> = ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<__fsid_t>(),
        8usize,
        concat!("Size of: ", stringify!(__fsid_t))
    );
    assert_eq!(
        ::core::mem::align_of::<__fsid_t>(),
        4usize,
        concat!("Alignment of ", stringify!(__fsid_t))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).__val) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(__fsid_t),
            "::",
            stringify!(__val)
        )
    );
}
pub type __clock_t = ::core::ffi::c_long;
pub type __rlim_t = ::core::ffi::c_ulong;
pub type __rlim64_t = ::core::ffi::c_ulong;
pub type __id_t = ::core::ffi::c_uint;
pub type __time_t = ::core::ffi::c_long;
pub type __useconds_t = ::core::ffi::c_uint;
pub type __suseconds_t = ::core::ffi::c_long;
pub type __daddr_t = ::core::ffi::c_int;
pub type __key_t = ::core::ffi::c_int;
pub type __clockid_t = ::core::ffi::c_int;
pub type __timer_t = *mut ::core::ffi::c_void;
pub type __blksize_t = ::core::ffi::c_long;
pub type __blkcnt_t = ::core::ffi::c_long;
pub type __blkcnt64_t = ::core::ffi::c_long;
pub type __fsblkcnt_t = ::core::ffi::c_ulong;
pub type __fsblkcnt64_t = ::core::ffi::c_ulong;
pub type __fsfilcnt_t = ::core::ffi::c_ulong;
pub type __fsfilcnt64_t = ::core::ffi::c_ulong;
pub type __fsword_t = ::core::ffi::c_long;
pub type __ssize_t = ::core::ffi::c_long;
pub type __syscall_slong_t = ::core::ffi::c_long;
pub type __syscall_ulong_t = ::core::ffi::c_ulong;
pub type __loff_t = __off64_t;
pub type __caddr_t = *mut ::core::ffi::c_char;
pub type __intptr_t = ::core::ffi::c_long;
pub type __socklen_t = ::core::ffi::c_uint;
pub type __sig_atomic_t = ::core::ffi::c_int;
pub type int_least8_t = __int_least8_t;
pub type int_least16_t = __int_least16_t;
pub type int_least32_t = __int_least32_t;
pub type int_least64_t = __int_least64_t;
pub type uint_least8_t = __uint_least8_t;
pub type uint_least16_t = __uint_least16_t;
pub type uint_least32_t = __uint_least32_t;
pub type uint_least64_t = __uint_least64_t;
pub type int_fast8_t = ::core::ffi::c_schar;
pub type int_fast16_t = ::core::ffi::c_long;
pub type int_fast32_t = ::core::ffi::c_long;
pub type int_fast64_t = ::core::ffi::c_long;
pub type uint_fast8_t = ::core::ffi::c_uchar;
pub type uint_fast16_t = ::core::ffi::c_ulong;
pub type uint_fast32_t = ::core::ffi::c_ulong;
pub type uint_fast64_t = ::core::ffi::c_ulong;
pub type intmax_t = __intmax_t;
pub type uintmax_t = __uintmax_t;
pub const xmov_direction_t_XMOV_L0_TO_L1: xmov_direction_t = 0;
pub const xmov_direction_t_XMOV_L1_TO_L0: xmov_direction_t = 1;
pub const xmov_direction_t_XMOV_L0_TO_L0: xmov_direction_t = 2;
pub const xmov_direction_t_XMOV_L1_TO_L1: xmov_direction_t = 3;
pub type xmov_direction_t = ::core::ffi::c_uint;
pub const tdma_mover_id_t_TDMA_MOVER0: tdma_mover_id_t = 0;
pub const tdma_mover_id_t_TDMA_MOVER1: tdma_mover_id_t = 1;
pub type tdma_mover_id_t = ::core::ffi::c_uint;
pub const math_fidelity_t_MATH_HF: math_fidelity_t = 1;
pub const math_fidelity_t_MATH_AUTO: math_fidelity_t = 2;
pub const math_fidelity_t_MATH_LF: math_fidelity_t = 4;
pub type math_fidelity_t = ::core::ffi::c_uint;
pub const relu_mode_t_RELU_NONE: relu_mode_t = 0;
pub const relu_mode_t_RELU_PLAIN: relu_mode_t = 1;
pub const relu_mode_t_RELU_THRESH: relu_mode_t = 2;
pub const relu_mode_t_RELU_MAX: relu_mode_t = 3;
pub type relu_mode_t = ::core::ffi::c_uint;
pub const stochastic_round_settings_t_STOCH_RND_NONE: stochastic_round_settings_t = 0;
pub const stochastic_round_settings_t_STOCH_RND_FPU: stochastic_round_settings_t = 1;
pub const stochastic_round_settings_t_STOCH_RND_GASKET: stochastic_round_settings_t = 2;
pub const stochastic_round_settings_t_STOCH_RND_PACKER: stochastic_round_settings_t = 4;
pub type stochastic_round_settings_t = ::core::ffi::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct packer_config_t {
    pub _bitfield_align_1: [u32; 0],
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 16usize]>,
}
#[test]
fn bindgen_test_layout_packer_config_t() {
    assert_eq!(
        ::core::mem::size_of::<packer_config_t>(),
        16usize,
        concat!("Size of: ", stringify!(packer_config_t))
    );
    assert_eq!(
        ::core::mem::align_of::<packer_config_t>(),
        4usize,
        concat!("Alignment of ", stringify!(packer_config_t))
    );
}
impl packer_config_t {
    #[inline]
    pub fn row_section_size(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(0usize, 16u8) as u32) }
    }
    #[inline]
    pub fn set_row_section_size(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(0usize, 16u8, val as u64)
        }
    }
    #[inline]
    pub fn exp_section_size(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(16usize, 16u8) as u32) }
    }
    #[inline]
    pub fn set_exp_section_size(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(16usize, 16u8, val as u64)
        }
    }
    #[inline]
    pub fn tile_dst_addr(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(32usize, 32u8) as u32) }
    }
    #[inline]
    pub fn set_tile_dst_addr(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(32usize, 32u8, val as u64)
        }
    }
    #[inline]
    pub fn uncompressed(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(64usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_uncompressed(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(64usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn reserved_0(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(65usize, 3u8) as u32) }
    }
    #[inline]
    pub fn set_reserved_0(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(65usize, 3u8, val as u64)
        }
    }
    #[inline]
    pub fn out_data_format(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(68usize, 2u8) as u32) }
    }
    #[inline]
    pub fn set_out_data_format(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(68usize, 2u8, val as u64)
        }
    }
    #[inline]
    pub fn reserved_1(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(70usize, 2u8) as u32) }
    }
    #[inline]
    pub fn set_reserved_1(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(70usize, 2u8, val as u64)
        }
    }
    #[inline]
    pub fn in_data_format(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(72usize, 2u8) as u32) }
    }
    #[inline]
    pub fn set_in_data_format(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(72usize, 2u8, val as u64)
        }
    }
    #[inline]
    pub fn reserved_2(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(74usize, 22u8) as u32) }
    }
    #[inline]
    pub fn set_reserved_2(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(74usize, 22u8, val as u64)
        }
    }
    #[inline]
    pub fn reserved_3(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(96usize, 32u8) as u32) }
    }
    #[inline]
    pub fn set_reserved_3(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(96usize, 32u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        row_section_size: u32,
        exp_section_size: u32,
        tile_dst_addr: u32,
        uncompressed: u32,
        reserved_0: u32,
        out_data_format: u32,
        reserved_1: u32,
        in_data_format: u32,
        reserved_2: u32,
        reserved_3: u32,
    ) -> __BindgenBitfieldUnit<[u8; 16usize]> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 16usize]> = Default::default();
        __bindgen_bitfield_unit.set(0usize, 16u8, {
            let row_section_size: u32 = unsafe { ::core::mem::transmute(row_section_size) };
            row_section_size as u64
        });
        __bindgen_bitfield_unit.set(16usize, 16u8, {
            let exp_section_size: u32 = unsafe { ::core::mem::transmute(exp_section_size) };
            exp_section_size as u64
        });
        __bindgen_bitfield_unit.set(32usize, 32u8, {
            let tile_dst_addr: u32 = unsafe { ::core::mem::transmute(tile_dst_addr) };
            tile_dst_addr as u64
        });
        __bindgen_bitfield_unit.set(64usize, 1u8, {
            let uncompressed: u32 = unsafe { ::core::mem::transmute(uncompressed) };
            uncompressed as u64
        });
        __bindgen_bitfield_unit.set(65usize, 3u8, {
            let reserved_0: u32 = unsafe { ::core::mem::transmute(reserved_0) };
            reserved_0 as u64
        });
        __bindgen_bitfield_unit.set(68usize, 2u8, {
            let out_data_format: u32 = unsafe { ::core::mem::transmute(out_data_format) };
            out_data_format as u64
        });
        __bindgen_bitfield_unit.set(70usize, 2u8, {
            let reserved_1: u32 = unsafe { ::core::mem::transmute(reserved_1) };
            reserved_1 as u64
        });
        __bindgen_bitfield_unit.set(72usize, 2u8, {
            let in_data_format: u32 = unsafe { ::core::mem::transmute(in_data_format) };
            in_data_format as u64
        });
        __bindgen_bitfield_unit.set(74usize, 22u8, {
            let reserved_2: u32 = unsafe { ::core::mem::transmute(reserved_2) };
            reserved_2 as u64
        });
        __bindgen_bitfield_unit.set(96usize, 32u8, {
            let reserved_3: u32 = unsafe { ::core::mem::transmute(reserved_3) };
            reserved_3 as u64
        });
        __bindgen_bitfield_unit
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct fifo_ctl_t {
    pub rd_ptr: u32,
    pub wr_ptr: u32,
    pub rsvd0: u32,
    pub rsvd1: u32,
}
#[test]
fn bindgen_test_layout_fifo_ctl_t() {
    const UNINIT: ::core::mem::MaybeUninit<fifo_ctl_t> = ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<fifo_ctl_t>(),
        16usize,
        concat!("Size of: ", stringify!(fifo_ctl_t))
    );
    assert_eq!(
        ::core::mem::align_of::<fifo_ctl_t>(),
        4usize,
        concat!("Alignment of ", stringify!(fifo_ctl_t))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).rd_ptr) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(fifo_ctl_t),
            "::",
            stringify!(rd_ptr)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).wr_ptr) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(fifo_ctl_t),
            "::",
            stringify!(wr_ptr)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).rsvd0) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(fifo_ctl_t),
            "::",
            stringify!(rsvd0)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).rsvd1) as usize - ptr as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(fifo_ctl_t),
            "::",
            stringify!(rsvd1)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct packer_config_u {
    pub val: [u32; 4usize],
    pub f: packer_config_t,
}
#[test]
fn bindgen_test_layout_packer_config_u() {
    const UNINIT: ::core::mem::MaybeUninit<packer_config_u> = ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<packer_config_u>(),
        32usize,
        concat!("Size of: ", stringify!(packer_config_u))
    );
    assert_eq!(
        ::core::mem::align_of::<packer_config_u>(),
        4usize,
        concat!("Alignment of ", stringify!(packer_config_u))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).val) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(packer_config_u),
            "::",
            stringify!(val)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).f) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(packer_config_u),
            "::",
            stringify!(f)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mover_config_t {
    pub _bitfield_align_1: [u32; 0],
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 16usize]>,
}
#[test]
fn bindgen_test_layout_mover_config_t() {
    assert_eq!(
        ::core::mem::size_of::<mover_config_t>(),
        16usize,
        concat!("Size of: ", stringify!(mover_config_t))
    );
    assert_eq!(
        ::core::mem::align_of::<mover_config_t>(),
        4usize,
        concat!("Alignment of ", stringify!(mover_config_t))
    );
}
impl mover_config_t {
    #[inline]
    pub fn src_addr(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(0usize, 32u8) as u32) }
    }
    #[inline]
    pub fn set_src_addr(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(0usize, 32u8, val as u64)
        }
    }
    #[inline]
    pub fn dst_addr(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(32usize, 32u8) as u32) }
    }
    #[inline]
    pub fn set_dst_addr(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(32usize, 32u8, val as u64)
        }
    }
    #[inline]
    pub fn xfer_size(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(64usize, 32u8) as u32) }
    }
    #[inline]
    pub fn set_xfer_size(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(64usize, 32u8, val as u64)
        }
    }
    #[inline]
    pub fn xfer_dir(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(96usize, 2u8) as u32) }
    }
    #[inline]
    pub fn set_xfer_dir(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(96usize, 2u8, val as u64)
        }
    }
    #[inline]
    pub fn reserved_0(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(98usize, 30u8) as u32) }
    }
    #[inline]
    pub fn set_reserved_0(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(98usize, 30u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        src_addr: u32,
        dst_addr: u32,
        xfer_size: u32,
        xfer_dir: u32,
        reserved_0: u32,
    ) -> __BindgenBitfieldUnit<[u8; 16usize]> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 16usize]> = Default::default();
        __bindgen_bitfield_unit.set(0usize, 32u8, {
            let src_addr: u32 = unsafe { ::core::mem::transmute(src_addr) };
            src_addr as u64
        });
        __bindgen_bitfield_unit.set(32usize, 32u8, {
            let dst_addr: u32 = unsafe { ::core::mem::transmute(dst_addr) };
            dst_addr as u64
        });
        __bindgen_bitfield_unit.set(64usize, 32u8, {
            let xfer_size: u32 = unsafe { ::core::mem::transmute(xfer_size) };
            xfer_size as u64
        });
        __bindgen_bitfield_unit.set(96usize, 2u8, {
            let xfer_dir: u32 = unsafe { ::core::mem::transmute(xfer_dir) };
            xfer_dir as u64
        });
        __bindgen_bitfield_unit.set(98usize, 30u8, {
            let reserved_0: u32 = unsafe { ::core::mem::transmute(reserved_0) };
            reserved_0 as u64
        });
        __bindgen_bitfield_unit
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct mover_config_u {
    pub val: [u32; 4usize],
    pub f: mover_config_t,
}
#[test]
fn bindgen_test_layout_mover_config_u() {
    const UNINIT: ::core::mem::MaybeUninit<mover_config_u> = ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<mover_config_u>(),
        32usize,
        concat!("Size of: ", stringify!(mover_config_u))
    );
    assert_eq!(
        ::core::mem::align_of::<mover_config_u>(),
        4usize,
        concat!("Alignment of ", stringify!(mover_config_u))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).val) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(mover_config_u),
            "::",
            stringify!(val)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).f) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(mover_config_u),
            "::",
            stringify!(f)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct tile_descriptor_t {
    pub _bitfield_align_1: [u32; 0],
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 18usize]>,
}
#[test]
fn bindgen_test_layout_tile_descriptor_t() {
    assert_eq!(
        ::core::mem::size_of::<tile_descriptor_t>(),
        20usize,
        concat!("Size of: ", stringify!(tile_descriptor_t))
    );
    assert_eq!(
        ::core::mem::align_of::<tile_descriptor_t>(),
        4usize,
        concat!("Alignment of ", stringify!(tile_descriptor_t))
    );
}
impl tile_descriptor_t {
    #[inline]
    pub fn data_format(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(0usize, 4u8) as u32) }
    }
    #[inline]
    pub fn set_data_format(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(0usize, 4u8, val as u64)
        }
    }
    #[inline]
    pub fn uncompressed(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(4usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_uncompressed(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(4usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn reserved_0(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(5usize, 3u8) as u32) }
    }
    #[inline]
    pub fn set_reserved_0(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(5usize, 3u8, val as u64)
        }
    }
    #[inline]
    pub fn blobs_per_xy_plane(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(8usize, 4u8) as u32) }
    }
    #[inline]
    pub fn set_blobs_per_xy_plane(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(8usize, 4u8, val as u64)
        }
    }
    #[inline]
    pub fn reserved_1(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(12usize, 4u8) as u32) }
    }
    #[inline]
    pub fn set_reserved_1(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(12usize, 4u8, val as u64)
        }
    }
    #[inline]
    pub fn x_dim(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(16usize, 16u8) as u32) }
    }
    #[inline]
    pub fn set_x_dim(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(16usize, 16u8, val as u64)
        }
    }
    #[inline]
    pub fn y_dim(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(32usize, 16u8) as u32) }
    }
    #[inline]
    pub fn set_y_dim(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(32usize, 16u8, val as u64)
        }
    }
    #[inline]
    pub fn z_dim(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(48usize, 16u8) as u32) }
    }
    #[inline]
    pub fn set_z_dim(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(48usize, 16u8, val as u64)
        }
    }
    #[inline]
    pub fn w_dim(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(64usize, 16u8) as u32) }
    }
    #[inline]
    pub fn set_w_dim(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(64usize, 16u8, val as u64)
        }
    }
    #[inline]
    pub fn blobs_y_start(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(96usize, 32u8) as u32) }
    }
    #[inline]
    pub fn set_blobs_y_start(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(96usize, 32u8, val as u64)
        }
    }
    #[inline]
    pub fn digest_type(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(128usize, 8u8) as u32) }
    }
    #[inline]
    pub fn set_digest_type(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(128usize, 8u8, val as u64)
        }
    }
    #[inline]
    pub fn digest_size(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(136usize, 8u8) as u32) }
    }
    #[inline]
    pub fn set_digest_size(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(136usize, 8u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        data_format: u32,
        uncompressed: u32,
        reserved_0: u32,
        blobs_per_xy_plane: u32,
        reserved_1: u32,
        x_dim: u32,
        y_dim: u32,
        z_dim: u32,
        w_dim: u32,
        blobs_y_start: u32,
        digest_type: u32,
        digest_size: u32,
    ) -> __BindgenBitfieldUnit<[u8; 18usize]> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 18usize]> = Default::default();
        __bindgen_bitfield_unit.set(0usize, 4u8, {
            let data_format: u32 = unsafe { ::core::mem::transmute(data_format) };
            data_format as u64
        });
        __bindgen_bitfield_unit.set(4usize, 1u8, {
            let uncompressed: u32 = unsafe { ::core::mem::transmute(uncompressed) };
            uncompressed as u64
        });
        __bindgen_bitfield_unit.set(5usize, 3u8, {
            let reserved_0: u32 = unsafe { ::core::mem::transmute(reserved_0) };
            reserved_0 as u64
        });
        __bindgen_bitfield_unit.set(8usize, 4u8, {
            let blobs_per_xy_plane: u32 = unsafe { ::core::mem::transmute(blobs_per_xy_plane) };
            blobs_per_xy_plane as u64
        });
        __bindgen_bitfield_unit.set(12usize, 4u8, {
            let reserved_1: u32 = unsafe { ::core::mem::transmute(reserved_1) };
            reserved_1 as u64
        });
        __bindgen_bitfield_unit.set(16usize, 16u8, {
            let x_dim: u32 = unsafe { ::core::mem::transmute(x_dim) };
            x_dim as u64
        });
        __bindgen_bitfield_unit.set(32usize, 16u8, {
            let y_dim: u32 = unsafe { ::core::mem::transmute(y_dim) };
            y_dim as u64
        });
        __bindgen_bitfield_unit.set(48usize, 16u8, {
            let z_dim: u32 = unsafe { ::core::mem::transmute(z_dim) };
            z_dim as u64
        });
        __bindgen_bitfield_unit.set(64usize, 16u8, {
            let w_dim: u32 = unsafe { ::core::mem::transmute(w_dim) };
            w_dim as u64
        });
        __bindgen_bitfield_unit.set(96usize, 32u8, {
            let blobs_y_start: u32 = unsafe { ::core::mem::transmute(blobs_y_start) };
            blobs_y_start as u64
        });
        __bindgen_bitfield_unit.set(128usize, 8u8, {
            let digest_type: u32 = unsafe { ::core::mem::transmute(digest_type) };
            digest_type as u64
        });
        __bindgen_bitfield_unit.set(136usize, 8u8, {
            let digest_size: u32 = unsafe { ::core::mem::transmute(digest_size) };
            digest_size as u64
        });
        __bindgen_bitfield_unit
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union tile_descriptor_u {
    pub val: [u32; 4usize],
    pub f: tile_descriptor_t,
}
#[test]
fn bindgen_test_layout_tile_descriptor_u() {
    const UNINIT: ::core::mem::MaybeUninit<tile_descriptor_u> = ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<tile_descriptor_u>(),
        20usize,
        concat!("Size of: ", stringify!(tile_descriptor_u))
    );
    assert_eq!(
        ::core::mem::align_of::<tile_descriptor_u>(),
        4usize,
        concat!("Alignment of ", stringify!(tile_descriptor_u))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).val) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(tile_descriptor_u),
            "::",
            stringify!(val)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).f) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(tile_descriptor_u),
            "::",
            stringify!(f)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct TileHeader {
    pub tile_size_16B: u16,
    pub _bitfield_align_1: [u16; 0],
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 2usize]>,
    pub metadata_size_16B: u8,
    pub reserved_1: u8,
    pub format: u16,
    pub zero_mask: u32,
    pub reserved_3: u32,
}
#[test]
fn bindgen_test_layout_TileHeader() {
    const UNINIT: ::core::mem::MaybeUninit<TileHeader> = ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<TileHeader>(),
        16usize,
        concat!("Size of: ", stringify!(TileHeader))
    );
    assert_eq!(
        ::core::mem::align_of::<TileHeader>(),
        4usize,
        concat!("Alignment of ", stringify!(TileHeader))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).tile_size_16B) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(TileHeader),
            "::",
            stringify!(tile_size_16B)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).metadata_size_16B) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(TileHeader),
            "::",
            stringify!(metadata_size_16B)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).reserved_1) as usize - ptr as usize },
        5usize,
        concat!(
            "Offset of field: ",
            stringify!(TileHeader),
            "::",
            stringify!(reserved_1)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).format) as usize - ptr as usize },
        6usize,
        concat!(
            "Offset of field: ",
            stringify!(TileHeader),
            "::",
            stringify!(format)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).zero_mask) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(TileHeader),
            "::",
            stringify!(zero_mask)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).reserved_3) as usize - ptr as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(TileHeader),
            "::",
            stringify!(reserved_3)
        )
    );
}
impl TileHeader {
    #[inline]
    pub fn reserved_0_mbz(&self) -> u16 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(0usize, 1u8) as u16) }
    }
    #[inline]
    pub fn set_reserved_0_mbz(&mut self, val: u16) {
        unsafe {
            let val: u16 = ::core::mem::transmute(val);
            self._bitfield_1.set(0usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn tile_id(&self) -> u16 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(1usize, 15u8) as u16) }
    }
    #[inline]
    pub fn set_tile_id(&mut self, val: u16) {
        unsafe {
            let val: u16 = ::core::mem::transmute(val);
            self._bitfield_1.set(1usize, 15u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        reserved_0_mbz: u16,
        tile_id: u16,
    ) -> __BindgenBitfieldUnit<[u8; 2usize]> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 2usize]> = Default::default();
        __bindgen_bitfield_unit.set(0usize, 1u8, {
            let reserved_0_mbz: u16 = unsafe { ::core::mem::transmute(reserved_0_mbz) };
            reserved_0_mbz as u64
        });
        __bindgen_bitfield_unit.set(1usize, 15u8, {
            let tile_id: u16 = unsafe { ::core::mem::transmute(tile_id) };
            tile_id as u64
        });
        __bindgen_bitfield_unit
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union TileHeader_u {
    pub val: [u32; 4usize],
    pub header: TileHeader,
}
#[test]
fn bindgen_test_layout_TileHeader_u() {
    const UNINIT: ::core::mem::MaybeUninit<TileHeader_u> = ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<TileHeader_u>(),
        16usize,
        concat!("Size of: ", stringify!(TileHeader_u))
    );
    assert_eq!(
        ::core::mem::align_of::<TileHeader_u>(),
        4usize,
        concat!("Alignment of ", stringify!(TileHeader_u))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).val) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(TileHeader_u),
            "::",
            stringify!(val)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).header) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(TileHeader_u),
            "::",
            stringify!(header)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SectionHeader {
    pub section_id: u16,
    pub section_size: u16,
    pub tile_count: u16,
    pub reserved: [u16; 5usize],
}
#[test]
fn bindgen_test_layout_SectionHeader() {
    const UNINIT: ::core::mem::MaybeUninit<SectionHeader> = ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<SectionHeader>(),
        16usize,
        concat!("Size of: ", stringify!(SectionHeader))
    );
    assert_eq!(
        ::core::mem::align_of::<SectionHeader>(),
        2usize,
        concat!("Alignment of ", stringify!(SectionHeader))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).section_id) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(SectionHeader),
            "::",
            stringify!(section_id)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).section_size) as usize - ptr as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(SectionHeader),
            "::",
            stringify!(section_size)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).tile_count) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(SectionHeader),
            "::",
            stringify!(tile_count)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).reserved) as usize - ptr as usize },
        6usize,
        concat!(
            "Offset of field: ",
            stringify!(SectionHeader),
            "::",
            stringify!(reserved)
        )
    );
}
pub const TEST_MSG_EN_TENSIX_PM: u32 = 0;
pub const TEST_MSG_DBG_DISABLE: u32 = 1;
pub const TEST_MSG_SET_MAX_EXP_THRESH: u32 = 2;
pub const TEST_MSG_RISC_BP_DISABLE: u32 = 3;
pub const TEST_MSG_SET_RELU_PARAMS: u32 = 4;
pub const TEST_MSG_SET_PRNG_SEED: u32 = 5;
pub const TEST_MSG_RISC_PREFETCHER_CTRL: u32 = 6;
pub const TEST_MSG_SYNTH_CKERNEL: u32 = 10;
pub const TEST_MSG_ONE_KERNEL: u32 = 11;
pub const TEST_MSG_WAIT_KERNELS: u32 = 12;
pub const TEST_MSG_WAIT_ONE_KERNEL: u32 = 13;
pub const TEST_MSG_SYNTH_TAG_SRCH: u32 = 14;
pub const COMMAND_QUEUE_SIZE_BYTES_LOG2: u32 = 16;
pub const COMMAND_QUEUE_SIZE_BYTES: u32 = 65536;
pub const COMMAND_SIZE_BYTES_LOG2: u32 = 5;
pub const COMMAND_SIZE_BYTES: u32 = 32;
pub const DEST_FACE_WIDTH: u32 = 16;
pub const DEST_FACE_HEIGHT: u32 = 16;
pub const DEST_REGISTER_FULL_SIZE: u32 = 1024;
pub const DEST_REGISTER_HALF_SIZE: u32 = 512;
pub const L1_SIZE: u32 = 1572864;
pub const FIFO_BASE_ADDRESS_ALIGN_BITS: u32 = 9;
pub const FIFO_BASE_ADDRESS_ALIGN: u32 = 512;
pub const DataFormat_Float32: DataFormat = 0;
pub const DataFormat_Float16: DataFormat = 1;
pub const DataFormat_Bfp8: DataFormat = 2;
pub const DataFormat_Bfp4: DataFormat = 3;
pub const DataFormat_Bfp2: DataFormat = 11;
pub const DataFormat_Float16_b: DataFormat = 5;
pub const DataFormat_Bfp8_b: DataFormat = 6;
pub const DataFormat_Bfp4_b: DataFormat = 7;
pub const DataFormat_Bfp2_b: DataFormat = 15;
pub const DataFormat_Lf8: DataFormat = 10;
pub const DataFormat_Int8: DataFormat = 14;
pub const DataFormat_Int32: DataFormat = 8;
pub const DataFormat_Int16: DataFormat = 9;
pub const DataFormat_Tf32: DataFormat = 4;
pub const DataFormat_Lf8_plus: DataFormat = 128;
pub const DataFormat_Uint8: DataFormat = 129;
pub const DataFormat_testMan7: DataFormat = 130;
pub const DataFormat_testMan2: DataFormat = 138;
pub const DataFormat_Invalid: DataFormat = 255;
pub type DataFormat = ::core::ffi::c_uint;
pub const L1_MATH_KERNEL_BASE: u32 = 122880;
pub const R0: ::core::ffi::c_uint = 0;
pub const R1: ::core::ffi::c_uint = 1;
pub const R2: ::core::ffi::c_uint = 2;
pub const R3: ::core::ffi::c_uint = 3;
pub const R4: ::core::ffi::c_uint = 4;
pub const R5: ::core::ffi::c_uint = 5;
pub const R6: ::core::ffi::c_uint = 6;
pub const R7: ::core::ffi::c_uint = 7;
pub const R8: ::core::ffi::c_uint = 8;
pub const R9: ::core::ffi::c_uint = 9;
pub const R10: ::core::ffi::c_uint = 10;
pub const R11: ::core::ffi::c_uint = 11;
pub const R12: ::core::ffi::c_uint = 12;
pub const R13: ::core::ffi::c_uint = 13;
pub const R14: ::core::ffi::c_uint = 14;
pub const R15: ::core::ffi::c_uint = 15;
pub const R16: ::core::ffi::c_uint = 16;
pub const R17: ::core::ffi::c_uint = 17;
pub const R18: ::core::ffi::c_uint = 18;
pub const R19: ::core::ffi::c_uint = 19;
pub const R20: ::core::ffi::c_uint = 20;
pub const R21: ::core::ffi::c_uint = 21;
pub const R22: ::core::ffi::c_uint = 22;
pub const R23: ::core::ffi::c_uint = 23;
pub const R24: ::core::ffi::c_uint = 24;
pub const R25: ::core::ffi::c_uint = 25;
pub const R26: ::core::ffi::c_uint = 26;
pub const R27: ::core::ffi::c_uint = 27;
pub const R28: ::core::ffi::c_uint = 28;
pub const R29: ::core::ffi::c_uint = 29;
pub const R30: ::core::ffi::c_uint = 30;
pub const R31: ::core::ffi::c_uint = 31;
pub const R32: ::core::ffi::c_uint = 32;
pub const R33: ::core::ffi::c_uint = 33;
pub const R34: ::core::ffi::c_uint = 34;
pub const R35: ::core::ffi::c_uint = 35;
pub const R36: ::core::ffi::c_uint = 36;
pub const R37: ::core::ffi::c_uint = 37;
pub const R38: ::core::ffi::c_uint = 38;
pub const R39: ::core::ffi::c_uint = 39;
pub const R40: ::core::ffi::c_uint = 40;
pub const R41: ::core::ffi::c_uint = 41;
pub const R42: ::core::ffi::c_uint = 42;
pub const R43: ::core::ffi::c_uint = 43;
pub const R44: ::core::ffi::c_uint = 44;
pub const R45: ::core::ffi::c_uint = 45;
pub const R46: ::core::ffi::c_uint = 46;
pub const R47: ::core::ffi::c_uint = 47;
pub const R48: ::core::ffi::c_uint = 48;
pub const R49: ::core::ffi::c_uint = 49;
pub const R50: ::core::ffi::c_uint = 50;
pub const R51: ::core::ffi::c_uint = 51;
pub const R52: ::core::ffi::c_uint = 52;
pub const R53: ::core::ffi::c_uint = 53;
pub const R54: ::core::ffi::c_uint = 54;
pub const R55: ::core::ffi::c_uint = 55;
pub const R56: ::core::ffi::c_uint = 56;
pub const R57: ::core::ffi::c_uint = 57;
pub const R58: ::core::ffi::c_uint = 58;
pub const R59: ::core::ffi::c_uint = 59;
pub const R60: ::core::ffi::c_uint = 60;
pub const R61: ::core::ffi::c_uint = 61;
pub const R62: ::core::ffi::c_uint = 62;
pub const R63: ::core::ffi::c_uint = 63;
pub const cnt_id_t_UNP0: cnt_id_t = 1;
pub const cnt_id_t_UNP1: cnt_id_t = 2;
pub const cnt_id_t_PCK0: cnt_id_t = 4;
pub type cnt_id_t = ::core::ffi::c_uint;
